"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@blocknote";
exports.ids = ["vendor-chunks/@blocknote"];
exports.modules = {

/***/ "(ssr)/./node_modules/@blocknote/mantine/dist/style.css":
/*!********************************************************!*\
  !*** ./node_modules/@blocknote/mantine/dist/style.css ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"d2416877e0e3\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGJsb2Nrbm90ZS9tYW50aW5lL2Rpc3Qvc3R5bGUuY3NzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxjQUFjO0FBQzdCLElBQUksS0FBVSxFQUFFLEVBQXVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGQvLi9ub2RlX21vZHVsZXMvQGJsb2Nrbm90ZS9tYW50aW5lL2Rpc3Qvc3R5bGUuY3NzP2Q2YTYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJkMjQxNjg3N2UwZTNcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@blocknote/mantine/dist/style.css\n");

/***/ }),

/***/ "(ssr)/./node_modules/@blocknote/core/dist/blocknote.js":
/*!********************************************************!*\
  !*** ./node_modules/@blocknote/core/dist/blocknote.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AudioBlock: () => (/* binding */ li),\n/* harmony export */   BlockNoteEditor: () => (/* binding */ _t),\n/* harmony export */   BlockNoteSchema: () => (/* binding */ Te),\n/* harmony export */   FileBlock: () => (/* binding */ Go),\n/* harmony export */   FilePanelProsemirrorPlugin: () => (/* binding */ Xi),\n/* harmony export */   FilePanelView: () => (/* binding */ qi),\n/* harmony export */   FormattingToolbarProsemirrorPlugin: () => (/* binding */ Yi),\n/* harmony export */   FormattingToolbarView: () => (/* binding */ Zi),\n/* harmony export */   ImageBlock: () => (/* binding */ Zo),\n/* harmony export */   LinkToolbarProsemirrorPlugin: () => (/* binding */ tn),\n/* harmony export */   SideMenuProsemirrorPlugin: () => (/* binding */ un),\n/* harmony export */   SideMenuView: () => (/* binding */ dn),\n/* harmony export */   SuggestionMenuProseMirrorPlugin: () => (/* binding */ rn),\n/* harmony export */   TableHandlesProsemirrorPlugin: () => (/* binding */ gn),\n/* harmony export */   TableHandlesView: () => (/* binding */ fn),\n/* harmony export */   UniqueID: () => (/* binding */ J),\n/* harmony export */   UnreachableCaseError: () => (/* binding */ I),\n/* harmony export */   VideoBlock: () => (/* binding */ oi),\n/* harmony export */   addIdsToBlock: () => (/* binding */ Vn),\n/* harmony export */   addIdsToBlocks: () => (/* binding */ jn),\n/* harmony export */   addInlineContentAttributes: () => (/* binding */ Io),\n/* harmony export */   addInlineContentKeyboardShortcuts: () => (/* binding */ Ao),\n/* harmony export */   addStyleAttributes: () => (/* binding */ Do),\n/* harmony export */   assertEmpty: () => (/* binding */ xr),\n/* harmony export */   audioBlockConfig: () => (/* binding */ ni),\n/* harmony export */   audioParse: () => (/* binding */ ai),\n/* harmony export */   audioPropSchema: () => (/* binding */ ii),\n/* harmony export */   audioRender: () => (/* binding */ ri),\n/* harmony export */   audioToExternalHTML: () => (/* binding */ si),\n/* harmony export */   blockToNode: () => (/* binding */ N),\n/* harmony export */   camelToDataKebab: () => (/* binding */ oe),\n/* harmony export */   checkBlockHasDefaultProp: () => (/* binding */ Hr),\n/* harmony export */   checkBlockIsDefaultType: () => (/* binding */ Ir),\n/* harmony export */   checkBlockIsFileBlock: () => (/* binding */ Ar),\n/* harmony export */   checkBlockIsFileBlockWithPlaceholder: () => (/* binding */ Pr),\n/* harmony export */   checkBlockIsFileBlockWithPreview: () => (/* binding */ Nr),\n/* harmony export */   checkBlockTypeHasDefaultProp: () => (/* binding */ Ni),\n/* harmony export */   checkDefaultBlockTypeInSchema: () => (/* binding */ S),\n/* harmony export */   contentNodeToInlineContent: () => (/* binding */ ve),\n/* harmony export */   createAddFileButton: () => (/* binding */ se),\n/* harmony export */   createBlockSpec: () => (/* binding */ re),\n/* harmony export */   createBlockSpecFromStronglyTypedTiptapNode: () => (/* binding */ Q),\n/* harmony export */   createDefaultFilePreview: () => (/* binding */ ae),\n/* harmony export */   createExternalHTMLExporter: () => (/* binding */ ne),\n/* harmony export */   createFigureWithCaption: () => (/* binding */ xe),\n/* harmony export */   createFileAndCaptionWrapper: () => (/* binding */ O),\n/* harmony export */   createInlineContentSpec: () => (/* binding */ Sr),\n/* harmony export */   createInlineContentSpecFromTipTapNode: () => (/* binding */ Po),\n/* harmony export */   createInternalBlockSpec: () => (/* binding */ st),\n/* harmony export */   createInternalHTMLSerializer: () => (/* binding */ nt),\n/* harmony export */   createInternalInlineContentSpec: () => (/* binding */ No),\n/* harmony export */   createInternalStyleSpec: () => (/* binding */ ct),\n/* harmony export */   createLinkWithCaption: () => (/* binding */ de),\n/* harmony export */   createResizeHandlesWrapper: () => (/* binding */ pt),\n/* harmony export */   createStronglyTypedTiptapNode: () => (/* binding */ G),\n/* harmony export */   createStyleSpec: () => (/* binding */ Mr),\n/* harmony export */   createStyleSpecFromTipTapMark: () => (/* binding */ P),\n/* harmony export */   createSuggestionMenu: () => (/* binding */ Ur),\n/* harmony export */   defaultBlockSchema: () => (/* binding */ Ai),\n/* harmony export */   defaultBlockSpecs: () => (/* binding */ ht),\n/* harmony export */   defaultInlineContentSchema: () => (/* binding */ Lr),\n/* harmony export */   defaultInlineContentSpecs: () => (/* binding */ ft),\n/* harmony export */   defaultProps: () => (/* binding */ k),\n/* harmony export */   defaultStyleSchema: () => (/* binding */ Br),\n/* harmony export */   defaultStyleSpecs: () => (/* binding */ mt),\n/* harmony export */   fileBlockConfig: () => (/* binding */ Vo),\n/* harmony export */   fileParse: () => (/* binding */ zo),\n/* harmony export */   filePropSchema: () => (/* binding */ Ro),\n/* harmony export */   fileRender: () => (/* binding */ jo),\n/* harmony export */   fileToExternalHTML: () => (/* binding */ Fo),\n/* harmony export */   filenameFromURL: () => (/* binding */ Cr),\n/* harmony export */   filterSuggestionItems: () => (/* binding */ Or),\n/* harmony export */   formatKeyboardShortcut: () => (/* binding */ R),\n/* harmony export */   formattingToolbarPluginKey: () => (/* binding */ Ji),\n/* harmony export */   getBlockFromPos: () => (/* binding */ Bo),\n/* harmony export */   getBlockNoteExtensions: () => (/* binding */ An),\n/* harmony export */   getBlockSchemaFromSpecs: () => (/* binding */ lt),\n/* harmony export */   getDefaultSlashMenuItems: () => (/* binding */ Dr),\n/* harmony export */   getDraggableBlockFromCoords: () => (/* binding */ Me),\n/* harmony export */   getInlineContentParseRules: () => (/* binding */ Ho),\n/* harmony export */   getInlineContentSchemaFromSpecs: () => (/* binding */ dt),\n/* harmony export */   getParseRules: () => (/* binding */ Lo),\n/* harmony export */   getStyleParseRules: () => (/* binding */ Oo),\n/* harmony export */   getStyleSchemaFromSpecs: () => (/* binding */ ut),\n/* harmony export */   imageBlockConfig: () => (/* binding */ $o),\n/* harmony export */   imageParse: () => (/* binding */ qo),\n/* harmony export */   imagePropSchema: () => (/* binding */ Wo),\n/* harmony export */   imageRender: () => (/* binding */ Ko),\n/* harmony export */   imageToExternalHTML: () => (/* binding */ Xo),\n/* harmony export */   inheritedProps: () => (/* binding */ rt),\n/* harmony export */   inlineContentToNodes: () => (/* binding */ ie),\n/* harmony export */   insertOrUpdateBlock: () => (/* binding */ C),\n/* harmony export */   isAppleOS: () => (/* binding */ To),\n/* harmony export */   isLinkInlineContent: () => (/* binding */ He),\n/* harmony export */   isPartialLinkInlineContent: () => (/* binding */ Ye),\n/* harmony export */   isSafari: () => (/* binding */ Er),\n/* harmony export */   isStyledTextInlineContent: () => (/* binding */ Z),\n/* harmony export */   linkToolbarPluginKey: () => (/* binding */ en),\n/* harmony export */   locales: () => (/* binding */ vr),\n/* harmony export */   mergeCSSClasses: () => (/* binding */ D),\n/* harmony export */   nodeToBlock: () => (/* binding */ _),\n/* harmony export */   nodeToCustomInlineContent: () => (/* binding */ tt),\n/* harmony export */   parseEmbedElement: () => (/* binding */ Oe),\n/* harmony export */   parseFigureElement: () => (/* binding */ le),\n/* harmony export */   parseImageElement: () => (/* binding */ Re),\n/* harmony export */   partialBlockToBlockForTesting: () => (/* binding */ vt),\n/* harmony export */   partialBlocksToBlocksForTesting: () => (/* binding */ Rr),\n/* harmony export */   propsToAttributes: () => (/* binding */ at),\n/* harmony export */   sideMenuPluginKey: () => (/* binding */ cn),\n/* harmony export */   stylePropsToAttributes: () => (/* binding */ Uo),\n/* harmony export */   suggestionMenuPluginKey: () => (/* binding */ U),\n/* harmony export */   tableContentToNodes: () => (/* binding */ Qe),\n/* harmony export */   tableHandlesPluginKey: () => (/* binding */ X),\n/* harmony export */   uploadToTmpFilesDotOrg_DEV_ONLY: () => (/* binding */ Tr),\n/* harmony export */   videoBlockConfig: () => (/* binding */ Yo),\n/* harmony export */   videoParse: () => (/* binding */ ei),\n/* harmony export */   videoPropSchema: () => (/* binding */ Jo),\n/* harmony export */   videoRender: () => (/* binding */ Qo),\n/* harmony export */   videoToExternalHTML: () => (/* binding */ ti),\n/* harmony export */   wrapInBlockStructure: () => (/* binding */ pe)\n/* harmony export */ });\n/* harmony import */ var prosemirror_model__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! prosemirror-model */ \"(ssr)/./node_modules/prosemirror-model/dist/index.js\");\n/* harmony import */ var rehype_parse__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! rehype-parse */ \"(ssr)/./node_modules/rehype-parse/lib/index.js\");\n/* harmony import */ var rehype_stringify__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! rehype-stringify */ \"(ssr)/./node_modules/rehype-stringify/lib/index.js\");\n/* harmony import */ var unified__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! unified */ \"(ssr)/./node_modules/unified/lib/index.js\");\n/* harmony import */ var _tiptap_core__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @tiptap/core */ \"(ssr)/./node_modules/@tiptap/core/dist/index.js\");\n/* harmony import */ var prosemirror_state__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! prosemirror-state */ \"(ssr)/./node_modules/prosemirror-state/dist/index.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! uuid */ \"(ssr)/./node_modules/uuid/dist/esm-node/v4.js\");\n/* harmony import */ var hast_util_from_dom__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! hast-util-from-dom */ \"(ssr)/./node_modules/hast-util-from-dom/lib/index.js\");\n/* harmony import */ var _tiptap_extension_bold__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tiptap/extension-bold */ \"(ssr)/./node_modules/@tiptap/extension-bold/dist/index.js\");\n/* harmony import */ var _tiptap_extension_code__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tiptap/extension-code */ \"(ssr)/./node_modules/@tiptap/extension-code/dist/index.js\");\n/* harmony import */ var _tiptap_extension_italic__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tiptap/extension-italic */ \"(ssr)/./node_modules/@tiptap/extension-italic/dist/index.js\");\n/* harmony import */ var _tiptap_extension_strike__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tiptap/extension-strike */ \"(ssr)/./node_modules/@tiptap/extension-strike/dist/index.js\");\n/* harmony import */ var _tiptap_extension_underline__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tiptap/extension-underline */ \"(ssr)/./node_modules/@tiptap/extension-underline/dist/index.js\");\n/* harmony import */ var _tiptap_extension_table_cell__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @tiptap/extension-table-cell */ \"(ssr)/./node_modules/@tiptap/extension-table-cell/dist/index.js\");\n/* harmony import */ var _tiptap_extension_table_header__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @tiptap/extension-table-header */ \"(ssr)/./node_modules/@tiptap/extension-table-header/dist/index.js\");\n/* harmony import */ var _tiptap_extension_table_row__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @tiptap/extension-table-row */ \"(ssr)/./node_modules/@tiptap/extension-table-row/dist/index.js\");\n/* harmony import */ var prosemirror_tables__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! prosemirror-tables */ \"(ssr)/./node_modules/prosemirror-tables/dist/index.js\");\n/* harmony import */ var rehype_remark__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! rehype-remark */ \"(ssr)/./node_modules/rehype-remark/lib/index.js\");\n/* harmony import */ var remark_gfm__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! remark-gfm */ \"(ssr)/./node_modules/remark-gfm/index.js\");\n/* harmony import */ var remark_stringify__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! remark-stringify */ \"(ssr)/./node_modules/remark-stringify/lib/index.js\");\n/* harmony import */ var remark_parse__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! remark-parse */ \"(ssr)/./node_modules/remark-parse/lib/index.js\");\n/* harmony import */ var remark_rehype__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! remark-rehype */ \"(ssr)/./node_modules/remark-rehype/lib/index.js\");\n/* harmony import */ var remark_rehype__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! remark-rehype */ \"(ssr)/./node_modules/mdast-util-to-hast/lib/handlers/index.js\");\n/* harmony import */ var prosemirror_view__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! prosemirror-view */ \"(ssr)/./node_modules/prosemirror-view/dist/index.js\");\n/* harmony import */ var _tiptap_extension_collaboration__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @tiptap/extension-collaboration */ \"(ssr)/./node_modules/@tiptap/extension-collaboration/dist/index.js\");\n/* harmony import */ var _tiptap_extension_collaboration_cursor__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @tiptap/extension-collaboration-cursor */ \"(ssr)/./node_modules/@tiptap/extension-collaboration-cursor/dist/index.js\");\n/* harmony import */ var _tiptap_extension_dropcursor__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @tiptap/extension-dropcursor */ \"(ssr)/./node_modules/@tiptap/extension-dropcursor/dist/index.js\");\n/* harmony import */ var _tiptap_extension_gapcursor__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @tiptap/extension-gapcursor */ \"(ssr)/./node_modules/@tiptap/extension-gapcursor/dist/index.js\");\n/* harmony import */ var _tiptap_extension_hard_break__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @tiptap/extension-hard-break */ \"(ssr)/./node_modules/@tiptap/extension-hard-break/dist/index.js\");\n/* harmony import */ var _tiptap_extension_history__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @tiptap/extension-history */ \"(ssr)/./node_modules/@tiptap/extension-history/dist/index.js\");\n/* harmony import */ var _tiptap_extension_link__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @tiptap/extension-link */ \"(ssr)/./node_modules/@tiptap/extension-link/dist/index.js\");\n/* harmony import */ var _tiptap_extension_text__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @tiptap/extension-text */ \"(ssr)/./node_modules/@tiptap/extension-text/dist/index.js\");\nvar Et = Object.defineProperty;\nvar Ct = (t, e, o) => e in t ? Et(t, e, { enumerable: !0, configurable: !0, writable: !0, value: o }) : t[e] = o;\nvar c = (t, e, o) => (Ct(t, typeof e != \"symbol\" ? e + \"\" : e, o), o);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst Ze = {\n  slash_menu: {\n    heading: {\n      title: \"Heading 1\",\n      subtext: \"Used for a top-level heading\",\n      aliases: [\"h\", \"heading1\", \"h1\"],\n      group: \"Headings\"\n    },\n    heading_2: {\n      title: \"Heading 2\",\n      subtext: \"Used for key sections\",\n      aliases: [\"h2\", \"heading2\", \"subheading\"],\n      group: \"Headings\"\n    },\n    heading_3: {\n      title: \"Heading 3\",\n      subtext: \"Used for subsections and group headings\",\n      aliases: [\"h3\", \"heading3\", \"subheading\"],\n      group: \"Headings\"\n    },\n    numbered_list: {\n      title: \"Numbered List\",\n      subtext: \"Used to display a numbered list\",\n      aliases: [\"ol\", \"li\", \"list\", \"numberedlist\", \"numbered list\"],\n      group: \"Basic blocks\"\n    },\n    bullet_list: {\n      title: \"Bullet List\",\n      subtext: \"Used to display an unordered list\",\n      aliases: [\"ul\", \"li\", \"list\", \"bulletlist\", \"bullet list\"],\n      group: \"Basic blocks\"\n    },\n    paragraph: {\n      title: \"Paragraph\",\n      subtext: \"Used for the body of your document\",\n      aliases: [\"p\", \"paragraph\"],\n      group: \"Basic blocks\"\n    },\n    table: {\n      title: \"Table\",\n      subtext: \"Used for tables\",\n      aliases: [\"table\"],\n      group: \"Advanced\"\n    },\n    image: {\n      title: \"Image\",\n      subtext: \"Insert an image\",\n      aliases: [\n        \"image\",\n        \"imageUpload\",\n        \"upload\",\n        \"img\",\n        \"picture\",\n        \"media\",\n        \"url\"\n      ],\n      group: \"Media\"\n    },\n    video: {\n      title: \"Video\",\n      subtext: \"Insert a video\",\n      aliases: [\n        \"video\",\n        \"videoUpload\",\n        \"upload\",\n        \"mp4\",\n        \"film\",\n        \"media\",\n        \"url\"\n      ],\n      group: \"Media\"\n    },\n    audio: {\n      title: \"Audio\",\n      subtext: \"Insert audio\",\n      aliases: [\n        \"audio\",\n        \"audioUpload\",\n        \"upload\",\n        \"mp3\",\n        \"sound\",\n        \"media\",\n        \"url\"\n      ],\n      group: \"Media\"\n    },\n    file: {\n      title: \"File\",\n      subtext: \"Insert a file\",\n      aliases: [\"file\", \"upload\", \"embed\", \"media\", \"url\"],\n      group: \"Media\"\n    }\n  },\n  placeholders: {\n    default: \"Enter text or type '/' for commands\",\n    heading: \"Heading\",\n    bulletListItem: \"List\",\n    numberedListItem: \"List\"\n  },\n  file_blocks: {\n    image: {\n      add_button_text: \"Add image\"\n    },\n    video: {\n      add_button_text: \"Add video\"\n    },\n    audio: {\n      add_button_text: \"Add audio\"\n    },\n    file: {\n      add_button_text: \"Add file\"\n    }\n  },\n  // from react package:\n  side_menu: {\n    add_block_label: \"Add block\",\n    drag_handle_label: \"Open block menu\"\n  },\n  drag_handle: {\n    delete_menuitem: \"Delete\",\n    colors_menuitem: \"Colors\"\n  },\n  table_handle: {\n    delete_column_menuitem: \"Delete column\",\n    delete_row_menuitem: \"Delete row\",\n    add_left_menuitem: \"Add column left\",\n    add_right_menuitem: \"Add column right\",\n    add_above_menuitem: \"Add row above\",\n    add_below_menuitem: \"Add row below\"\n  },\n  suggestion_menu: {\n    no_items_title: \"No items found\",\n    loading: \"Loading…\"\n  },\n  color_picker: {\n    text_title: \"Text\",\n    background_title: \"Background\",\n    colors: {\n      default: \"Default\",\n      gray: \"Gray\",\n      brown: \"Brown\",\n      red: \"Red\",\n      orange: \"Orange\",\n      yellow: \"Yellow\",\n      green: \"Green\",\n      blue: \"Blue\",\n      purple: \"Purple\",\n      pink: \"Pink\"\n    }\n  },\n  formatting_toolbar: {\n    bold: {\n      tooltip: \"Bold\",\n      secondary_tooltip: \"Mod+B\"\n    },\n    italic: {\n      tooltip: \"Italic\",\n      secondary_tooltip: \"Mod+I\"\n    },\n    underline: {\n      tooltip: \"Underline\",\n      secondary_tooltip: \"Mod+U\"\n    },\n    strike: {\n      tooltip: \"Strike\",\n      secondary_tooltip: \"Mod+Shift+X\"\n    },\n    code: {\n      tooltip: \"Code\",\n      secondary_tooltip: \"\"\n    },\n    colors: {\n      tooltip: \"Colors\"\n    },\n    link: {\n      tooltip: \"Create link\",\n      secondary_tooltip: \"Mod+K\"\n    },\n    file_caption: {\n      tooltip: \"Edit caption\",\n      input_placeholder: \"Edit caption\"\n    },\n    file_replace: {\n      tooltip: {\n        image: \"Replace image\",\n        video: \"Replace video\",\n        audio: \"Replace audio\",\n        file: \"Replace file\"\n      }\n    },\n    file_rename: {\n      tooltip: {\n        image: \"Rename image\",\n        video: \"Rename video\",\n        audio: \"Rename audio\",\n        file: \"Rename file\"\n      },\n      input_placeholder: {\n        image: \"Rename image\",\n        video: \"Rename video\",\n        audio: \"Rename audio\",\n        file: \"Rename file\"\n      }\n    },\n    file_download: {\n      tooltip: {\n        image: \"Download image\",\n        video: \"Download video\",\n        audio: \"Download audio\",\n        file: \"Download file\"\n      }\n    },\n    file_delete: {\n      tooltip: {\n        image: \"Delete image\",\n        video: \"Delete video\",\n        audio: \"Delete audio\",\n        file: \"Delete file\"\n      }\n    },\n    file_preview_toggle: {\n      tooltip: \"Toggle preview\"\n    },\n    nest: {\n      tooltip: \"Nest block\",\n      secondary_tooltip: \"Tab\"\n    },\n    unnest: {\n      tooltip: \"Unnest block\",\n      secondary_tooltip: \"Shift+Tab\"\n    },\n    align_left: {\n      tooltip: \"Align text left\"\n    },\n    align_center: {\n      tooltip: \"Align text center\"\n    },\n    align_right: {\n      tooltip: \"Align text right\"\n    },\n    align_justify: {\n      tooltip: \"Justify text\"\n    }\n  },\n  file_panel: {\n    upload: {\n      title: \"Upload\",\n      file_placeholder: {\n        image: \"Upload image\",\n        video: \"Upload video\",\n        audio: \"Upload audio\",\n        file: \"Upload file\"\n      },\n      upload_error: \"Error: Upload failed\"\n    },\n    embed: {\n      title: \"Embed\",\n      embed_button: {\n        image: \"Embed image\",\n        video: \"Embed video\",\n        audio: \"Embed audio\",\n        file: \"Embed file\"\n      },\n      url_placeholder: \"Enter URL\"\n    }\n  },\n  link_toolbar: {\n    delete: {\n      tooltip: \"Remove link\"\n    },\n    edit: {\n      text: \"Edit link\",\n      tooltip: \"Edit\"\n    },\n    open: {\n      tooltip: \"Open in new tab\"\n    },\n    form: {\n      title_placeholder: \"Edit title\",\n      url_placeholder: \"Edit URL\"\n    }\n  },\n  generic: {\n    ctrl_shortcut: \"Ctrl\"\n  }\n}, ho = {\n  slash_menu: {\n    heading: {\n      title: \"Titre 1\",\n      subtext: \"Utilisé pour un titre de premier niveau\",\n      aliases: [\"h\", \"titre1\", \"h1\"],\n      group: \"Titres\"\n    },\n    heading_2: {\n      title: \"Titre 2\",\n      subtext: \"Utilisé pour les sections clés\",\n      aliases: [\"h2\", \"titre2\", \"sous-titre\"],\n      group: \"Titres\"\n    },\n    heading_3: {\n      title: \"Titre 3\",\n      subtext: \"Utilisé pour les sous-sections et les titres de groupe\",\n      aliases: [\"h3\", \"titre3\", \"sous-titre\"],\n      group: \"Titres\"\n    },\n    numbered_list: {\n      title: \"Liste Numérotée\",\n      subtext: \"Utilisé pour afficher une liste numérotée\",\n      aliases: [\"ol\", \"li\", \"liste\", \"listenumérotée\", \"liste numérotée\"],\n      group: \"Blocs de base\"\n    },\n    bullet_list: {\n      title: \"Liste à Puces\",\n      subtext: \"Utilisé pour afficher une liste non ordonnée\",\n      aliases: [\"ul\", \"li\", \"liste\", \"listeàpuces\", \"liste à puces\"],\n      group: \"Blocs de base\"\n    },\n    paragraph: {\n      title: \"Paragraphe\",\n      subtext: \"Utilisé pour le corps de votre document\",\n      aliases: [\"p\", \"paragraphe\"],\n      group: \"Blocs de base\"\n    },\n    table: {\n      title: \"Tableau\",\n      subtext: \"Utilisé pour les tableaux\",\n      aliases: [\"tableau\"],\n      group: \"Avancé\"\n    },\n    image: {\n      title: \"Image\",\n      subtext: \"Insérer une image\",\n      aliases: [\n        \"image\",\n        \"uploadImage\",\n        \"télécharger\",\n        \"img\",\n        \"photo\",\n        \"média\",\n        \"url\"\n      ],\n      group: \"Médias\"\n    },\n    video: {\n      title: \"Vidéo\",\n      subtext: \"Insérer une vidéo\",\n      aliases: [\n        \"vidéo\",\n        \"téléchargerVidéo\",\n        \"téléverser\",\n        \"mp4\",\n        \"film\",\n        \"média\",\n        \"url\"\n      ],\n      group: \"Média\"\n    },\n    audio: {\n      title: \"Audio\",\n      subtext: \"Insérer un audio\",\n      aliases: [\n        \"audio\",\n        \"téléchargerAudio\",\n        \"téléverser\",\n        \"mp3\",\n        \"son\",\n        \"média\",\n        \"url\"\n      ],\n      group: \"Média\"\n    },\n    file: {\n      title: \"Fichier\",\n      subtext: \"Insérer un fichier\",\n      aliases: [\"fichier\", \"téléverser\", \"intégrer\", \"média\", \"url\"],\n      group: \"Média\"\n    }\n  },\n  placeholders: {\n    default: \"Entrez du texte ou tapez '/' pour les commandes\",\n    heading: \"Titre\",\n    bulletListItem: \"Liste\",\n    numberedListItem: \"Liste\"\n  },\n  file_blocks: {\n    image: {\n      add_button_text: \"Ajouter une image\"\n    },\n    video: {\n      add_button_text: \"Ajouter une vidéo\"\n    },\n    audio: {\n      add_button_text: \"Ajouter un audio\"\n    },\n    file: {\n      add_button_text: \"Ajouter un fichier\"\n    }\n  },\n  // from react package:\n  side_menu: {\n    add_block_label: \"Ajouter un bloc\",\n    drag_handle_label: \"Ouvrir le menu du bloc\"\n  },\n  drag_handle: {\n    delete_menuitem: \"Supprimer\",\n    colors_menuitem: \"Couleurs\"\n  },\n  table_handle: {\n    delete_column_menuitem: \"Supprimer la colonne\",\n    delete_row_menuitem: \"Supprimer la ligne\",\n    add_left_menuitem: \"Ajouter une colonne à gauche\",\n    add_right_menuitem: \"Ajouter une colonne à droite\",\n    add_above_menuitem: \"Ajouter une ligne au-dessus\",\n    add_below_menuitem: \"Ajouter une ligne en dessous\"\n  },\n  suggestion_menu: {\n    no_items_title: \"Aucun élément trouvé\",\n    loading: \"Chargement…\"\n  },\n  color_picker: {\n    text_title: \"Texte\",\n    background_title: \"Fond\",\n    colors: {\n      default: \"Défaut\",\n      gray: \"Gris\",\n      brown: \"Marron\",\n      red: \"Rouge\",\n      orange: \"Orange\",\n      yellow: \"Jaune\",\n      green: \"Vert\",\n      blue: \"Bleu\",\n      purple: \"Violet\",\n      pink: \"Rose\"\n    }\n  },\n  formatting_toolbar: {\n    bold: {\n      tooltip: \"Gras\",\n      secondary_tooltip: \"Mod+B\"\n    },\n    italic: {\n      tooltip: \"Italique\",\n      secondary_tooltip: \"Mod+I\"\n    },\n    underline: {\n      tooltip: \"Souligner\",\n      secondary_tooltip: \"Mod+U\"\n    },\n    strike: {\n      tooltip: \"Barré\",\n      secondary_tooltip: \"Mod+Shift+X\"\n    },\n    code: {\n      tooltip: \"Code\",\n      secondary_tooltip: \"\"\n    },\n    colors: {\n      tooltip: \"Couleurs\"\n    },\n    link: {\n      tooltip: \"Créer un lien\",\n      secondary_tooltip: \"Mod+K\"\n    },\n    file_caption: {\n      tooltip: \"Modifier la légende\",\n      input_placeholder: \"Modifier la légende\"\n    },\n    file_replace: {\n      tooltip: {\n        image: \"Remplacer l'image\",\n        video: \"Remplacer la vidéo\",\n        audio: \"Remplacer l'audio\",\n        file: \"Remplacer le fichier\"\n      }\n    },\n    file_rename: {\n      tooltip: {\n        image: \"Renommer l'image\",\n        video: \"Renommer la vidéo\",\n        audio: \"Renommer l'audio\",\n        file: \"Renommer le fichier\"\n      },\n      input_placeholder: {\n        image: \"Renommer l'image\",\n        video: \"Renommer la vidéo\",\n        audio: \"Renommer l'audio\",\n        file: \"Renommer le fichier\"\n      }\n    },\n    file_download: {\n      tooltip: {\n        image: \"Télécharger l'image\",\n        video: \"Télécharger la vidéo\",\n        audio: \"Télécharger l'audio\",\n        file: \"Télécharger le fichier\"\n      }\n    },\n    file_delete: {\n      tooltip: {\n        image: \"Supprimer l'image\",\n        video: \"Supprimer la vidéo\",\n        audio: \"Supprimer l'audio\",\n        file: \"Supprimer le fichier\"\n      }\n    },\n    file_preview_toggle: {\n      tooltip: \"Basculer l'aperçu\"\n    },\n    nest: {\n      tooltip: \"Emboîter le bloc\",\n      secondary_tooltip: \"Tab\"\n    },\n    unnest: {\n      tooltip: \"Démboîter le bloc\",\n      secondary_tooltip: \"Shift+Tab\"\n    },\n    align_left: {\n      tooltip: \"Aligner le texte à gauche\"\n    },\n    align_center: {\n      tooltip: \"Aligner le texte au centre\"\n    },\n    align_right: {\n      tooltip: \"Aligner le texte à droite\"\n    },\n    align_justify: {\n      tooltip: \"Justifier le texte\"\n    }\n  },\n  file_panel: {\n    upload: {\n      title: \"Télécharger\",\n      file_placeholder: {\n        image: \"Télécharger une image\",\n        video: \"Télécharger une vidéo\",\n        audio: \"Télécharger un fichier audio\",\n        file: \"Télécharger un fichier\"\n      },\n      upload_error: \"Erreur : Échec du téléchargement\"\n    },\n    embed: {\n      title: \"Intégrer\",\n      embed_button: {\n        image: \"Intégrer une image\",\n        video: \"Intégrer une vidéo\",\n        audio: \"Intégrer un fichier audio\",\n        file: \"Intégrer un fichier\"\n      },\n      url_placeholder: \"Entrez l'URL\"\n    }\n  },\n  link_toolbar: {\n    delete: {\n      tooltip: \"Supprimer le lien\"\n    },\n    edit: {\n      text: \"Modifier le lien\",\n      tooltip: \"Modifier\"\n    },\n    open: {\n      tooltip: \"Ouvrir dans un nouvel onglet\"\n    },\n    form: {\n      title_placeholder: \"Modifier le titre\",\n      url_placeholder: \"Modifier l'URL\"\n    }\n  },\n  generic: {\n    ctrl_shortcut: \"Ctrl\"\n  }\n}, mo = {\n  slash_menu: {\n    heading: {\n      title: \"Fyrirsögn 1\",\n      subtext: \"Notað fyrir efstu fyrirsögn\",\n      aliases: [\"h\", \"fyrirsogn1\", \"h1\"],\n      group: \"Fyrirsagnir\"\n    },\n    heading_2: {\n      title: \"Fyrirsögn 2\",\n      subtext: \"Notað fyrir lykilhluta\",\n      aliases: [\"h2\", \"fyrirsogn2\", \"undirfyrirsogn\"],\n      group: \"Fyrirsagnir\"\n    },\n    heading_3: {\n      title: \"Fyrirsögn 3\",\n      subtext: \"Notað fyrir undirhluta og hópfyrirsagnir\",\n      aliases: [\"h3\", \"fyrirsogn3\", \"undirfyrirsogn\"],\n      group: \"Fyrirsagnir\"\n    },\n    numbered_list: {\n      title: \"Númeruð listi\",\n      subtext: \"Notað til að birta númeraðan lista\",\n      aliases: [\"ol\", \"li\", \"listi\", \"numeradurlisti\"],\n      group: \"Grunnblokkar\"\n    },\n    bullet_list: {\n      title: \"Punktalisti\",\n      subtext: \"Notað til að birta óraðaðan lista\",\n      aliases: [\"ul\", \"li\", \"listi\", \"punktalisti\"],\n      group: \"Grunnblokkar\"\n    },\n    paragraph: {\n      title: \"Málsgrein\",\n      subtext: \"Notað fyrir meginmál skjalsins\",\n      aliases: [\"p\", \"malsgrein\"],\n      group: \"Grunnblokkar\"\n    },\n    table: {\n      title: \"Tafla\",\n      subtext: \"Notað fyrir töflur\",\n      aliases: [\"tafla\"],\n      group: \"Ítarlegt\"\n    },\n    image: {\n      title: \"Mynd\",\n      subtext: \"Settu inn mynd\",\n      aliases: [\n        \"mynd\",\n        \"myndaupphlaed\",\n        \"upphlaed\",\n        \"img\",\n        \"mynd\",\n        \"media\",\n        \"url\"\n      ],\n      group: \"Miðlar\"\n    },\n    video: {\n      title: \"Myndband\",\n      subtext: \"Setja inn myndband\",\n      aliases: [\n        \"myndband\",\n        \"videoUpphala\",\n        \"hlaða upp\",\n        \"mp4\",\n        \"kvikmynd\",\n        \"miðill\",\n        \"url\"\n      ],\n      group: \"Miðill\"\n    },\n    audio: {\n      title: \"Hljóð\",\n      subtext: \"Setja inn hljóð\",\n      aliases: [\n        \"hljóð\",\n        \"audioUpphala\",\n        \"hlaða upp\",\n        \"mp3\",\n        \"hljóð\",\n        \"miðill\",\n        \"url\"\n      ],\n      group: \"Miðlar\"\n    },\n    file: {\n      title: \"Skrá\",\n      subtext: \"Setja inn skrá\",\n      aliases: [\"skrá\", \"hlaða upp\", \"fella inn\", \"miðill\", \"url\"],\n      group: \"Miðlar\"\n    }\n  },\n  placeholders: {\n    default: \"Sláðu inn texta eða skrifaðu '/' fyrir skipanir\",\n    heading: \"Fyrirsögn\",\n    bulletListItem: \"Listi\",\n    numberedListItem: \"Listi\"\n  },\n  file_blocks: {\n    image: {\n      add_button_text: \"Bæta við mynd\"\n    },\n    video: {\n      add_button_text: \"Bæta við myndbandi\"\n    },\n    audio: {\n      add_button_text: \"Bæta við hljóði\"\n    },\n    file: {\n      add_button_text: \"Bæta við skrá\"\n    }\n  },\n  side_menu: {\n    add_block_label: \"Bæta við blokki\",\n    drag_handle_label: \"Opna blokkarvalmynd\"\n  },\n  drag_handle: {\n    delete_menuitem: \"Eyða\",\n    colors_menuitem: \"Litir\"\n  },\n  table_handle: {\n    delete_column_menuitem: \"Eyða dálki\",\n    delete_row_menuitem: \"Eyða röð\",\n    add_left_menuitem: \"Bæta dálki við til vinstri\",\n    add_right_menuitem: \"Bæta dálki við til hægri\",\n    add_above_menuitem: \"Bæta röð við fyrir ofan\",\n    add_below_menuitem: \"Bæta röð við fyrir neðan\"\n  },\n  suggestion_menu: {\n    no_items_title: \"Engir hlutir fundust\",\n    loading: \"Hleður…\"\n  },\n  color_picker: {\n    text_title: \"Texti\",\n    background_title: \"Bakgrunnur\",\n    colors: {\n      default: \"Sjálfgefið\",\n      gray: \"Grár\",\n      brown: \"Brúnn\",\n      red: \"Rauður\",\n      orange: \"Appelsínugulur\",\n      yellow: \"Gulur\",\n      green: \"Grænn\",\n      blue: \"Blár\",\n      purple: \"Fjólublár\",\n      pink: \"Bleikur\"\n    }\n  },\n  formatting_toolbar: {\n    bold: {\n      tooltip: \"Feitletrað\",\n      secondary_tooltip: \"Mod+B\"\n    },\n    italic: {\n      tooltip: \"Skáletrað\",\n      secondary_tooltip: \"Mod+I\"\n    },\n    underline: {\n      tooltip: \"Undirstrikað\",\n      secondary_tooltip: \"Mod+U\"\n    },\n    strike: {\n      tooltip: \"Yfirstrikað\",\n      secondary_tooltip: \"Mod+Shift+X\"\n    },\n    code: {\n      tooltip: \"Kóði\",\n      secondary_tooltip: \"\"\n    },\n    colors: {\n      tooltip: \"Litir\"\n    },\n    link: {\n      tooltip: \"Búa til tengil\",\n      secondary_tooltip: \"Mod+K\"\n    },\n    file_caption: {\n      tooltip: \"Breyta myndatexta\",\n      input_placeholder: \"Breyta myndatexta\"\n    },\n    file_replace: {\n      tooltip: {\n        image: \"Skipta um mynd\",\n        video: \"Skipta um myndband\",\n        audio: \"Skipta um hljóð\",\n        file: \"Skipta um skrá\"\n      }\n    },\n    file_rename: {\n      tooltip: {\n        image: \"Endurnefna mynd\",\n        video: \"Endurnefna myndband\",\n        audio: \"Endurnefna hljóð\",\n        file: \"Endurnefna skrá\"\n      },\n      input_placeholder: {\n        image: \"Endurnefna mynd\",\n        video: \"Endurnefna myndband\",\n        audio: \"Endurnefna hljóð\",\n        file: \"Endurnefna skrá\"\n      }\n    },\n    file_download: {\n      tooltip: {\n        image: \"Sækja mynd\",\n        video: \"Sækja myndband\",\n        audio: \"Sækja hljóð\",\n        file: \"Sækja skrá\"\n      }\n    },\n    file_delete: {\n      tooltip: {\n        image: \"Eyða mynd\",\n        video: \"Eyða myndbandi\",\n        audio: \"Eyða hljóði\",\n        file: \"Eyða skrá\"\n      }\n    },\n    file_preview_toggle: {\n      tooltip: \"Skipta um forskoðun\"\n    },\n    nest: {\n      tooltip: \"Fella blokk saman\",\n      secondary_tooltip: \"Tab\"\n    },\n    unnest: {\n      tooltip: \"Afþýða blokk\",\n      secondary_tooltip: \"Shift+Tab\"\n    },\n    align_left: {\n      tooltip: \"Vinstrijafna texta\"\n    },\n    align_center: {\n      tooltip: \"Miðjustilla texta\"\n    },\n    align_right: {\n      tooltip: \"Hægrijafna texta\"\n    },\n    align_justify: {\n      tooltip: \"Jafna texta\"\n    }\n  },\n  file_panel: {\n    upload: {\n      title: \"Hlaða upp\",\n      file_placeholder: {\n        image: \"Hlaða upp mynd\",\n        video: \"Hlaða upp myndband\",\n        audio: \"Hlaða upp hljóð\",\n        file: \"Hlaða upp skrá\"\n      },\n      upload_error: \"Villa: Upphleðsla mistókst\"\n    },\n    embed: {\n      title: \"Innsetja\",\n      embed_button: {\n        image: \"Innsetja mynd\",\n        video: \"Innsetja myndband\",\n        audio: \"Innsetja hljóð\",\n        file: \"Innsetja skrá\"\n      },\n      url_placeholder: \"Sláðu inn URL\"\n    }\n  },\n  link_toolbar: {\n    delete: {\n      tooltip: \"Fjarlægja tengil\"\n    },\n    edit: {\n      text: \"Breyta tengli\",\n      tooltip: \"Breyta\"\n    },\n    open: {\n      tooltip: \"Opna í nýjum flipa\"\n    },\n    form: {\n      title_placeholder: \"Breyta titli\",\n      url_placeholder: \"Breyta URL\"\n    }\n  },\n  generic: {\n    ctrl_shortcut: \"Ctrl\"\n  }\n}, fo = {\n  slash_menu: {\n    heading: {\n      title: \"見出し１\",\n      subtext: \"トップレベルの見出しに使用\",\n      aliases: [\"h\", \"見出し１\", \"h1\", \"大見出し\"],\n      group: \"見出し\"\n    },\n    heading_2: {\n      title: \"見出し２\",\n      subtext: \"重要なセクションに使用\",\n      aliases: [\"h2\", \"見出し2\", \"subheading\", \"中見出し\"],\n      group: \"見出し\"\n    },\n    heading_3: {\n      title: \"見出し３\",\n      subtext: \"セクションやグループの見出しに使用\",\n      aliases: [\"h3\", \"見出し3\", \"subheading\", \"小見出し\"],\n      group: \"見出し\"\n    },\n    numbered_list: {\n      title: \"番号付リスト\",\n      subtext: \"番号付リストを表示するために使用\",\n      aliases: [\n        \"ol\",\n        \"li\",\n        \"numberedlist\",\n        \"numbered list\",\n        \"リスト\",\n        \"番号付リスト\",\n        \"番号 リスト\"\n      ],\n      group: \"基本ブロック\"\n    },\n    bullet_list: {\n      title: \"箇条書き\",\n      subtext: \"箇条書きを表示するために使用\",\n      aliases: [\"ul\", \"li\", \"リスト\", \"箇条書きリスト\"],\n      group: \"基本ブロック\"\n    },\n    paragraph: {\n      title: \"標準テキスト\",\n      subtext: \"本文に使用\",\n      aliases: [\"p\", \"paragraph\", \"標準テキスト\"],\n      group: \"基本ブロック\"\n    },\n    table: {\n      title: \"表\",\n      subtext: \"表に使用\",\n      aliases: [\"table\", \"表\", \"テーブル\"],\n      group: \"高度なブロック\"\n    },\n    image: {\n      title: \"画像\",\n      subtext: \"画像を挿入\",\n      aliases: [\n        \"image\",\n        \"imageUpload\",\n        \"upload\",\n        \"img\",\n        \"picture\",\n        \"media\",\n        \"url\",\n        \"画像\"\n      ],\n      group: \"メディア\"\n    },\n    video: {\n      title: \"ビデオ\",\n      subtext: \"ビデオを挿入\",\n      aliases: [\n        \"video\",\n        \"videoUpload\",\n        \"upload\",\n        \"mp4\",\n        \"film\",\n        \"media\",\n        \"url\",\n        \"ビデオ\"\n      ],\n      group: \"メディア\"\n    },\n    audio: {\n      title: \"オーディオ\",\n      subtext: \"オーディオを挿入\",\n      aliases: [\n        \"audio\",\n        \"audioUpload\",\n        \"upload\",\n        \"mp3\",\n        \"sound\",\n        \"media\",\n        \"url\",\n        \"オーディオ\"\n      ],\n      group: \"メディア\"\n    },\n    file: {\n      title: \"ファイル\",\n      subtext: \"ファイルを挿入\",\n      aliases: [\"file\", \"upload\", \"embed\", \"media\", \"url\", \"ファイル\"],\n      group: \"メディア\"\n    }\n  },\n  placeholders: {\n    default: \"テキストを入力するか'/' を入力してコマンド選択\",\n    heading: \"見出し\",\n    bulletListItem: \"リストを追加\",\n    numberedListItem: \"リストを追加\"\n  },\n  file_blocks: {\n    image: {\n      add_button_text: \"画像を追加\"\n    },\n    video: {\n      add_button_text: \"ビデオを追加\"\n    },\n    audio: {\n      add_button_text: \"オーディオを追加\"\n    },\n    file: {\n      add_button_text: \"ファイルを追加\"\n    }\n  },\n  // from react package:\n  side_menu: {\n    add_block_label: \"ブロックを追加\",\n    drag_handle_label: \"ブロックメニュー\"\n  },\n  drag_handle: {\n    delete_menuitem: \"削除\",\n    colors_menuitem: \"色を変更\"\n  },\n  table_handle: {\n    delete_column_menuitem: \"列を削除\",\n    delete_row_menuitem: \"行を削除\",\n    add_left_menuitem: \"左に列を追加\",\n    add_right_menuitem: \"右に列を追加\",\n    add_above_menuitem: \"上に行を追加\",\n    add_below_menuitem: \"下に行を追加\"\n  },\n  suggestion_menu: {\n    no_items_title: \"アイテムが見つかりません\",\n    loading: \"読込中…\"\n  },\n  color_picker: {\n    text_title: \"文字色\",\n    background_title: \"背景色\",\n    colors: {\n      default: \"デフォルト\",\n      gray: \"グレー\",\n      brown: \"茶色\",\n      red: \"赤\",\n      orange: \"オレンジ\",\n      yellow: \"黄色\",\n      green: \"緑\",\n      blue: \"青\",\n      purple: \"紫\",\n      pink: \"ピンク\"\n    }\n  },\n  formatting_toolbar: {\n    bold: {\n      tooltip: \"太字\",\n      secondary_tooltip: \"Mod+B\"\n    },\n    italic: {\n      tooltip: \"斜体\",\n      secondary_tooltip: \"Mod+I\"\n    },\n    underline: {\n      tooltip: \"下線\",\n      secondary_tooltip: \"Mod+U\"\n    },\n    strike: {\n      tooltip: \"打ち消し\",\n      secondary_tooltip: \"Mod+Shift+X\"\n    },\n    code: {\n      tooltip: \"コード\",\n      secondary_tooltip: \"\"\n    },\n    colors: {\n      tooltip: \"色\"\n    },\n    link: {\n      tooltip: \"リンク\",\n      secondary_tooltip: \"Mod+K\"\n    },\n    file_caption: {\n      tooltip: \"キャプションを編集\",\n      input_placeholder: \"キャプションを編集\"\n    },\n    file_replace: {\n      tooltip: {\n        image: \"画像を置換\",\n        video: \"ビデオを置換\",\n        audio: \"オーディオを置換\",\n        file: \"ファイルを置換\"\n      }\n    },\n    file_rename: {\n      tooltip: {\n        image: \"画像の名前を変更\",\n        video: \"ビデオの名前を変更\",\n        audio: \"オーディオの名前を変更\",\n        file: \"ファイルの名前を変更\"\n      },\n      input_placeholder: {\n        image: \"画像の名前を変更\",\n        video: \"ビデオの名前を変更\",\n        audio: \"オーディオの名前を変更\",\n        file: \"ファイルの名前を変更\"\n      }\n    },\n    file_download: {\n      tooltip: {\n        image: \"画像をダウンロード\",\n        video: \"ビデオをダウンロード\",\n        audio: \"オーディオをダウンロード\",\n        file: \"ファイルをダウンロード\"\n      }\n    },\n    file_delete: {\n      tooltip: {\n        image: \"画像を削除\",\n        video: \"ビデオを削除\",\n        audio: \"オーディオを削除\",\n        file: \"ファイルを削除\"\n      }\n    },\n    file_preview_toggle: {\n      tooltip: \"プレビューの切り替え\"\n    },\n    nest: {\n      tooltip: \"インデント増\",\n      secondary_tooltip: \"Tab\"\n    },\n    unnest: {\n      tooltip: \"インデント減\",\n      secondary_tooltip: \"Shift+Tab\"\n    },\n    align_left: {\n      tooltip: \"左揃え\"\n    },\n    align_center: {\n      tooltip: \"中央揃え\"\n    },\n    align_right: {\n      tooltip: \"右揃え\"\n    },\n    align_justify: {\n      tooltip: \"両端揃え\"\n    }\n  },\n  file_panel: {\n    upload: {\n      title: \"アップロード\",\n      file_placeholder: {\n        image: \"画像をアップロード\",\n        video: \"ビデオをアップロード\",\n        audio: \"オーディオをアップロード\",\n        file: \"ファイルをアップロード\"\n      },\n      upload_error: \"エラー: アップロードが失敗しました\"\n    },\n    embed: {\n      title: \"埋め込み\",\n      embed_button: {\n        image: \"画像を埋め込む\",\n        video: \"ビデオを埋め込む\",\n        audio: \"オーディオを埋め込む\",\n        file: \"ファイルを埋め込む\"\n      },\n      url_placeholder: \"URLを入力\"\n    }\n  },\n  link_toolbar: {\n    delete: {\n      tooltip: \"リンクを解除\"\n    },\n    edit: {\n      text: \"リンクを編集\",\n      tooltip: \"編集\"\n    },\n    open: {\n      tooltip: \"新しいタブでリンクを開く\"\n    },\n    form: {\n      title_placeholder: \"タイトルを編集\",\n      url_placeholder: \"URLを編集\"\n    }\n  },\n  generic: {\n    ctrl_shortcut: \"Ctrl\"\n  }\n}, go = {\n  slash_menu: {\n    heading: {\n      title: \"제목1\",\n      subtext: \"섹션 제목(대)\",\n      aliases: [\"h\", \"제목1\", \"h1\", \"대제목\"],\n      group: \"제목\"\n    },\n    heading_2: {\n      title: \"제목2\",\n      subtext: \"섹션 제목(중)\",\n      aliases: [\"h2\", \"제목2\", \"중제목\"],\n      group: \"제목\"\n    },\n    heading_3: {\n      title: \"제목3\",\n      subtext: \"섹션 제목(소)\",\n      aliases: [\"h3\", \"제목3\", \"subheading\"],\n      group: \"제목\"\n    },\n    numbered_list: {\n      title: \"번호 매기기 목록\",\n      subtext: \"번호가 매겨진 목록을 추가합니다.\",\n      aliases: [\"ol\", \"li\", \"목록\", \"번호 매기기 목록\", \"번호 목록\"],\n      group: \"기본 블록\"\n    },\n    bullet_list: {\n      title: \"글머리 기호 목록\",\n      subtext: \"간단한 글머리 기호를 추가합니다.\",\n      aliases: [\"ul\", \"li\", \"목록\", \"글머리 기호 목록\", \"글머리 목록\"],\n      group: \"기본 블록\"\n    },\n    paragraph: {\n      title: \"본문\",\n      subtext: \"일반 텍스트\",\n      aliases: [\"p\", \"paragraph\", \"본문\"],\n      group: \"기본 블록\"\n    },\n    table: {\n      title: \"표\",\n      subtext: \"간단한 표를 추가합니다.\",\n      aliases: [\"표\"],\n      group: \"고급\"\n    },\n    image: {\n      title: \"이미지\",\n      subtext: \"이미지 파일을 업로드합니다.\",\n      aliases: [\n        \"image\",\n        \"imageUpload\",\n        \"upload\",\n        \"img\",\n        \"picture\",\n        \"media\",\n        \"이미지\",\n        \"url\"\n      ],\n      group: \"미디어\"\n    },\n    video: {\n      title: \"비디오\",\n      subtext: \"비디오 삽입\",\n      aliases: [\n        \"video\",\n        \"videoUpload\",\n        \"upload\",\n        \"mp4\",\n        \"film\",\n        \"media\",\n        \"동영상\",\n        \"url\"\n      ],\n      group: \"미디어\"\n    },\n    audio: {\n      title: \"오디오\",\n      subtext: \"오디오 삽입\",\n      aliases: [\n        \"audio\",\n        \"audioUpload\",\n        \"upload\",\n        \"mp3\",\n        \"sound\",\n        \"media\",\n        \"오디오\",\n        \"url\"\n      ],\n      group: \"미디어\"\n    },\n    file: {\n      title: \"파일\",\n      subtext: \"파일 삽입\",\n      aliases: [\"file\", \"upload\", \"embed\", \"media\", \"파일\", \"url\"],\n      group: \"미디어\"\n    }\n  },\n  placeholders: {\n    default: \"텍스트를 입력하거나 /를 입력하여 명령을 입력하세요.\",\n    heading: \"제목\",\n    bulletListItem: \"목록\",\n    numberedListItem: \"목록\"\n  },\n  file_blocks: {\n    image: {\n      add_button_text: \"이미지 추가\"\n    },\n    video: {\n      add_button_text: \"비디오 추가\"\n    },\n    audio: {\n      add_button_text: \"오디오 추가\"\n    },\n    file: {\n      add_button_text: \"파일 추가\"\n    }\n  },\n  // from react package:\n  side_menu: {\n    add_block_label: \"블록 추가\",\n    drag_handle_label: \"블록 메뉴 열기\"\n  },\n  drag_handle: {\n    delete_menuitem: \"삭제\",\n    colors_menuitem: \"색깔\"\n  },\n  table_handle: {\n    delete_column_menuitem: \"열 1개 삭제\",\n    delete_row_menuitem: \"행 삭제\",\n    add_left_menuitem: \"왼쪽에 열 1개 추가\",\n    add_right_menuitem: \"오른쪽에 열 1개 추가\",\n    add_above_menuitem: \"위에 행 1개 추가\",\n    add_below_menuitem: \"아래에 행 1개 추가\"\n  },\n  suggestion_menu: {\n    no_items_title: \"항목을 찾을 수 없음\",\n    loading: \"로딩 중…\"\n  },\n  color_picker: {\n    text_title: \"텍스트\",\n    background_title: \"배경\",\n    colors: {\n      default: \"기본\",\n      gray: \"회색\",\n      brown: \"갈색\",\n      red: \"빨간색\",\n      orange: \"주황색\",\n      yellow: \"노란색\",\n      green: \"녹색\",\n      blue: \"파란색\",\n      purple: \"보라색\",\n      pink: \"분홍색\"\n    }\n  },\n  formatting_toolbar: {\n    bold: {\n      tooltip: \"진하게\",\n      secondary_tooltip: \"Mod+B\"\n    },\n    italic: {\n      tooltip: \"기울임\",\n      secondary_tooltip: \"Mod+I\"\n    },\n    underline: {\n      tooltip: \"밑줄\",\n      secondary_tooltip: \"Mod+U\"\n    },\n    strike: {\n      tooltip: \"취소선\",\n      secondary_tooltip: \"Mod+Shift+X\"\n    },\n    code: {\n      tooltip: \"코드\",\n      secondary_tooltip: \"\"\n    },\n    colors: {\n      tooltip: \"색깔\"\n    },\n    link: {\n      tooltip: \"링크 만들기\",\n      secondary_tooltip: \"Mod+K\"\n    },\n    file_caption: {\n      tooltip: \"이미지 캡션 수정\",\n      input_placeholder: \"이미지 캡션 수정\"\n    },\n    file_replace: {\n      tooltip: {\n        image: \"이미지 교체\",\n        video: \"비디오 교체\",\n        audio: \"오디오 교체\",\n        file: \"파일 교체\"\n      }\n    },\n    file_rename: {\n      tooltip: {\n        image: \"이미지 이름 변경\",\n        video: \"비디오 이름 변경\",\n        audio: \"오디오 이름 변경\",\n        file: \"파일 이름 변경\"\n      },\n      input_placeholder: {\n        image: \"이미지 이름 변경\",\n        video: \"비디오 이름 변경\",\n        audio: \"오디오 이름 변경\",\n        file: \"파일 이름 변경\"\n      }\n    },\n    file_download: {\n      tooltip: {\n        image: \"이미지 다운로드\",\n        video: \"비디오 다운로드\",\n        audio: \"오디오 다운로드\",\n        file: \"파일 다운로드\"\n      }\n    },\n    file_delete: {\n      tooltip: {\n        image: \"이미지 삭제\",\n        video: \"비디오 삭제\",\n        audio: \"오디오 삭제\",\n        file: \"파일 삭제\"\n      }\n    },\n    file_preview_toggle: {\n      tooltip: \"미리보기 전환\"\n    },\n    nest: {\n      tooltip: \"중첩 블록\",\n      secondary_tooltip: \"Tab\"\n    },\n    unnest: {\n      tooltip: \"비중첩 블록\",\n      secondary_tooltip: \"Shift+Tab\"\n    },\n    align_left: {\n      tooltip: \"텍스트 왼쪽 맞춤\"\n    },\n    align_center: {\n      tooltip: \"텍스트 가운데 맞춤\"\n    },\n    align_right: {\n      tooltip: \"텍스트 오른쪽 맞춤\"\n    },\n    align_justify: {\n      tooltip: \"텍스트 양쪽 맞춤\"\n    }\n  },\n  file_panel: {\n    upload: {\n      title: \"업로드\",\n      file_placeholder: {\n        image: \"이미지 업로드\",\n        video: \"비디오 업로드\",\n        audio: \"오디오 업로드\",\n        file: \"파일 업로드\"\n      },\n      upload_error: \"오류: 업로드 실패\"\n    },\n    embed: {\n      title: \"임베드\",\n      embed_button: {\n        image: \"이미지 삽입\",\n        video: \"비디오 삽입\",\n        audio: \"오디오 삽입\",\n        file: \"파일 삽입\"\n      },\n      url_placeholder: \"URL을 입력하세요.\"\n    }\n  },\n  link_toolbar: {\n    delete: {\n      tooltip: \"링크 삭제\"\n    },\n    edit: {\n      text: \"링크 수정\",\n      tooltip: \"수정\"\n    },\n    open: {\n      tooltip: \"새 탭으로 열기\"\n    },\n    form: {\n      title_placeholder: \"제목 수정\",\n      url_placeholder: \"URL 수정\"\n    }\n  },\n  generic: {\n    ctrl_shortcut: \"Ctrl\"\n  }\n}, bo = {\n  slash_menu: {\n    heading: {\n      title: \"Kop 1\",\n      subtext: \"Gebruikt voor een hoofdkop\",\n      aliases: [\"h\", \"kop1\", \"h1\"],\n      group: \"Koppen\"\n    },\n    heading_2: {\n      title: \"Kop 2\",\n      subtext: \"Gebruikt voor belangrijke secties\",\n      aliases: [\"h2\", \"kop2\", \"subkop\"],\n      group: \"Koppen\"\n    },\n    heading_3: {\n      title: \"Kop 3\",\n      subtext: \"Gebruikt voor subsecties en groepskoppen\",\n      aliases: [\"h3\", \"kop3\", \"subkop\"],\n      group: \"Koppen\"\n    },\n    numbered_list: {\n      title: \"Genummerde Lijst\",\n      subtext: \"Gebruikt om een genummerde lijst weer te geven\",\n      aliases: [\"ol\", \"li\", \"lijst\", \"genummerdelijst\", \"genummerde lijst\"],\n      group: \"Basisblokken\"\n    },\n    bullet_list: {\n      title: \"Puntenlijst\",\n      subtext: \"Gebruikt om een ongeordende lijst weer te geven\",\n      aliases: [\"ul\", \"li\", \"lijst\", \"puntenlijst\", \"punten lijst\"],\n      group: \"Basisblokken\"\n    },\n    paragraph: {\n      title: \"Paragraaf\",\n      subtext: \"Gebruikt voor de hoofdtekst van uw document\",\n      aliases: [\"p\", \"paragraaf\"],\n      group: \"Basisblokken\"\n    },\n    table: {\n      title: \"Tabel\",\n      subtext: \"Gebruikt voor tabellen\",\n      aliases: [\"tabel\"],\n      group: \"Geavanceerd\"\n    },\n    image: {\n      title: \"Afbeelding\",\n      subtext: \"Voeg een afbeelding in\",\n      aliases: [\n        \"afbeelding\",\n        \"imageUpload\",\n        \"upload\",\n        \"img\",\n        \"foto\",\n        \"media\",\n        \"url\"\n      ],\n      group: \"Media\"\n    },\n    video: {\n      title: \"Video\",\n      subtext: \"Voeg een video in\",\n      aliases: [\n        \"video\",\n        \"videoUploaden\",\n        \"upload\",\n        \"mp4\",\n        \"film\",\n        \"media\",\n        \"url\",\n        \"drive\",\n        \"dropbox\"\n      ],\n      group: \"Media\"\n    },\n    audio: {\n      title: \"Audio\",\n      subtext: \"Voeg audio in\",\n      aliases: [\n        \"audio\",\n        \"audioUploaden\",\n        \"upload\",\n        \"mp3\",\n        \"geluid\",\n        \"media\",\n        \"url\"\n      ],\n      group: \"Media\"\n    },\n    file: {\n      title: \"Bestand\",\n      subtext: \"Voeg een bestand in\",\n      aliases: [\"bestand\", \"upload\", \"insluiten\", \"media\", \"url\"],\n      group: \"Media\"\n    }\n  },\n  placeholders: {\n    default: \"Voer tekst in of type '/' voor commando's\",\n    heading: \"Kop\",\n    bulletListItem: \"Lijst\",\n    numberedListItem: \"Lijst\"\n  },\n  file_blocks: {\n    image: {\n      add_button_text: \"Afbeelding toevoegen\"\n    },\n    video: {\n      add_button_text: \"Video toevoegen\"\n    },\n    audio: {\n      add_button_text: \"Audio toevoegen\"\n    },\n    file: {\n      add_button_text: \"Bestand toevoegen\"\n    }\n  },\n  // from react package:\n  side_menu: {\n    add_block_label: \"Nieuw blok\",\n    drag_handle_label: \"Open blok menu\"\n  },\n  drag_handle: {\n    delete_menuitem: \"Verwijder\",\n    colors_menuitem: \"Kleuren\"\n  },\n  table_handle: {\n    delete_column_menuitem: \"Verwijder kolom\",\n    delete_row_menuitem: \"Verwijder rij\",\n    add_left_menuitem: \"Voeg kolom links toe\",\n    add_right_menuitem: \"Voeg kolom rechts toe\",\n    add_above_menuitem: \"Voeg rij boven toe\",\n    add_below_menuitem: \"Voeg rij onder toe\"\n  },\n  suggestion_menu: {\n    no_items_title: \"Geen items gevonden\",\n    loading: \"Laden…\"\n  },\n  color_picker: {\n    text_title: \"Tekst\",\n    background_title: \"Achtergrond\",\n    colors: {\n      default: \"Standaard\",\n      gray: \"Grijs\",\n      brown: \"Bruin\",\n      red: \"Rood\",\n      orange: \"Oranje\",\n      yellow: \"Geel\",\n      green: \"Groen\",\n      blue: \"Blauw\",\n      purple: \"Paars\",\n      pink: \"Roze\"\n    }\n  },\n  formatting_toolbar: {\n    bold: {\n      tooltip: \"Vet\",\n      secondary_tooltip: \"Mod+B\"\n    },\n    italic: {\n      tooltip: \"Cursief\",\n      secondary_tooltip: \"Mod+I\"\n    },\n    underline: {\n      tooltip: \"Onderstrepen\",\n      secondary_tooltip: \"Mod+U\"\n    },\n    strike: {\n      tooltip: \"Doorstrepen\",\n      secondary_tooltip: \"Mod+Shift+X\"\n    },\n    code: {\n      tooltip: \"Code\",\n      secondary_tooltip: \"\"\n    },\n    colors: {\n      tooltip: \"Kleuren\"\n    },\n    link: {\n      tooltip: \"Maak link\",\n      secondary_tooltip: \"Mod+K\"\n    },\n    file_caption: {\n      tooltip: \"Bewerk onderschrift\",\n      input_placeholder: \"Bewerk onderschrift\"\n    },\n    file_replace: {\n      tooltip: {\n        image: \"Afbeelding vervangen\",\n        video: \"Video vervangen\",\n        audio: \"Audio vervangen\",\n        file: \"Bestand vervangen\"\n      }\n    },\n    file_rename: {\n      tooltip: {\n        image: \"Afbeelding hernoemen\",\n        video: \"Video hernoemen\",\n        audio: \"Audio hernoemen\",\n        file: \"Bestand hernoemen\"\n      },\n      input_placeholder: {\n        image: \"Afbeelding hernoemen\",\n        video: \"Video hernoemen\",\n        audio: \"Audio hernoemen\",\n        file: \"Bestand hernoemen\"\n      }\n    },\n    file_download: {\n      tooltip: {\n        image: \"Afbeelding downloaden\",\n        video: \"Video downloaden\",\n        audio: \"Audio downloaden\",\n        file: \"Bestand downloaden\"\n      }\n    },\n    file_delete: {\n      tooltip: {\n        image: \"Afbeelding verwijderen\",\n        video: \"Video verwijderen\",\n        audio: \"Audio verwijderen\",\n        file: \"Bestand verwijderen\"\n      }\n    },\n    file_preview_toggle: {\n      tooltip: \"Voorbeeldschakelaar\"\n    },\n    nest: {\n      tooltip: \"Nest blok\",\n      secondary_tooltip: \"Tab\"\n    },\n    unnest: {\n      tooltip: \"Ontnest blok\",\n      secondary_tooltip: \"Shift+Tab\"\n    },\n    align_left: {\n      tooltip: \"Tekst links uitlijnen\"\n    },\n    align_center: {\n      tooltip: \"Tekst centreren\"\n    },\n    align_right: {\n      tooltip: \"Tekst rechts uitlijnen\"\n    },\n    align_justify: {\n      tooltip: \"Tekst uitvullen\"\n    }\n  },\n  file_panel: {\n    upload: {\n      title: \"Upload\",\n      file_placeholder: {\n        image: \"Afbeelding uploaden\",\n        video: \"Video uploaden\",\n        audio: \"Audio uploaden\",\n        file: \"Bestand uploaden\"\n      },\n      upload_error: \"Fout: Upload mislukt\"\n    },\n    embed: {\n      title: \"Insluiten\",\n      embed_button: {\n        image: \"Afbeelding insluiten\",\n        video: \"Video insluiten\",\n        audio: \"Audio insluiten\",\n        file: \"Bestand insluiten\"\n      },\n      url_placeholder: \"Voer URL in\"\n    }\n  },\n  link_toolbar: {\n    delete: {\n      tooltip: \"Verwijder link\"\n    },\n    edit: {\n      text: \"Bewerk link\",\n      tooltip: \"Bewerk\"\n    },\n    open: {\n      tooltip: \"Open in nieuw tabblad\"\n    },\n    form: {\n      title_placeholder: \"Bewerk titel\",\n      url_placeholder: \"Bewerk URL\"\n    }\n  },\n  generic: {\n    ctrl_shortcut: \"Ctrl\"\n  }\n}, ko = {\n  slash_menu: {\n    heading: {\n      title: \"Nagłówek 1\",\n      subtext: \"Używany dla nagłówka najwyższego poziomu\",\n      aliases: [\"h\", \"naglowek1\", \"h1\"],\n      group: \"Nagłówki\"\n    },\n    heading_2: {\n      title: \"Nagłówek 2\",\n      subtext: \"Używany dla kluczowych sekcji\",\n      aliases: [\"h2\", \"naglowek2\", \"podnaglowek\"],\n      group: \"Nagłówki\"\n    },\n    heading_3: {\n      title: \"Nagłówek 3\",\n      subtext: \"Używany dla podsekcji i grup nagłówków\",\n      aliases: [\"h3\", \"naglowek3\", \"podnaglowek\"],\n      group: \"Nagłówki\"\n    },\n    numbered_list: {\n      title: \"Lista numerowana\",\n      subtext: \"Używana do wyświetlania listy numerowanej\",\n      aliases: [\"ol\", \"li\", \"lista\", \"numerowana lista\"],\n      group: \"Podstawowe bloki\"\n    },\n    bullet_list: {\n      title: \"Lista punktowana\",\n      subtext: \"Używana do wyświetlania listy bez numeracji\",\n      aliases: [\"ul\", \"li\", \"lista\", \"punktowana lista\"],\n      group: \"Podstawowe bloki\"\n    },\n    paragraph: {\n      title: \"Akapit\",\n      subtext: \"Używany dla treści dokumentu\",\n      aliases: [\"p\", \"akapit\"],\n      group: \"Podstawowe bloki\"\n    },\n    table: {\n      title: \"Tabela\",\n      subtext: \"Używana do tworzenia tabel\",\n      aliases: [\"tabela\"],\n      group: \"Zaawansowane\"\n    },\n    image: {\n      title: \"Zdjęcie\",\n      subtext: \"Wstaw zdjęcie\",\n      aliases: [\n        \"obraz\",\n        \"wrzućZdjęcie\",\n        \"wrzuć\",\n        \"img\",\n        \"zdjęcie\",\n        \"media\",\n        \"url\"\n      ],\n      group: \"Media\"\n    },\n    video: {\n      title: \"Wideo\",\n      subtext: \"Wstaw wideo\",\n      aliases: [\"wideo\", \"wrzućWideo\", \"wrzuć\", \"mp4\", \"film\", \"media\", \"url\"],\n      group: \"Media\"\n    },\n    audio: {\n      title: \"Audio\",\n      subtext: \"Wstaw audio\",\n      aliases: [\n        \"audio\",\n        \"wrzućAudio\",\n        \"wrzuć\",\n        \"mp3\",\n        \"dźwięk\",\n        \"media\",\n        \"url\"\n      ],\n      group: \"Media\"\n    },\n    file: {\n      title: \"Plik\",\n      subtext: \"Wstaw plik\",\n      aliases: [\"plik\", \"wrzuć\", \"wstaw\", \"media\", \"url\"],\n      group: \"Media\"\n    }\n  },\n  placeholders: {\n    default: \"Wprowadź tekst lub wpisz '/' aby użyć poleceń\",\n    heading: \"Nagłówek\",\n    bulletListItem: \"Lista\",\n    numberedListItem: \"Lista\"\n  },\n  file_blocks: {\n    image: {\n      add_button_text: \"Dodaj zdjęcie\"\n    },\n    video: {\n      add_button_text: \"Dodaj wideo\"\n    },\n    audio: {\n      add_button_text: \"Dodaj audio\"\n    },\n    file: {\n      add_button_text: \"Dodaj plik\"\n    }\n  },\n  side_menu: {\n    add_block_label: \"Dodaj blok\",\n    drag_handle_label: \"Otwórz menu bloków\"\n  },\n  drag_handle: {\n    delete_menuitem: \"Usuń\",\n    colors_menuitem: \"Kolory\"\n  },\n  table_handle: {\n    delete_column_menuitem: \"Usuń kolumnę\",\n    delete_row_menuitem: \"Usuń wiersz\",\n    add_left_menuitem: \"Dodaj kolumnę po lewej\",\n    add_right_menuitem: \"Dodaj kolumnę po prawej\",\n    add_above_menuitem: \"Dodaj wiersz powyżej\",\n    add_below_menuitem: \"Dodaj wiersz poniżej\"\n  },\n  suggestion_menu: {\n    no_items_title: \"Nie znaleziono elementów\",\n    loading: \"Ładowanie…\"\n  },\n  color_picker: {\n    text_title: \"Tekst\",\n    background_title: \"Tło\",\n    colors: {\n      default: \"Domyślny\",\n      gray: \"Szary\",\n      brown: \"Brązowy\",\n      red: \"Czerwony\",\n      orange: \"Pomarańczowy\",\n      yellow: \"Żółty\",\n      green: \"Zielony\",\n      blue: \"Niebieski\",\n      purple: \"Fioletowy\",\n      pink: \"Różowy\"\n    }\n  },\n  formatting_toolbar: {\n    bold: {\n      tooltip: \"Pogrubienie\",\n      secondary_tooltip: \"Mod+B\"\n    },\n    italic: {\n      tooltip: \"Kursywa\",\n      secondary_tooltip: \"Mod+I\"\n    },\n    underline: {\n      tooltip: \"Podkreślenie\",\n      secondary_tooltip: \"Mod+U\"\n    },\n    strike: {\n      tooltip: \"Przekreślenie\",\n      secondary_tooltip: \"Mod+Shift+X\"\n    },\n    code: {\n      tooltip: \"Kod\",\n      secondary_tooltip: \"\"\n    },\n    colors: {\n      tooltip: \"Kolory\"\n    },\n    link: {\n      tooltip: \"Utwórz link\",\n      secondary_tooltip: \"Mod+K\"\n    },\n    file_caption: {\n      tooltip: \"Zmień podpis\",\n      input_placeholder: \"Zmień podpis\"\n    },\n    file_replace: {\n      tooltip: {\n        image: \"Zmień obraz\",\n        video: \"Zmień wideo\",\n        audio: \"Zmień audio\",\n        file: \"Zmień plik\"\n      }\n    },\n    file_rename: {\n      tooltip: {\n        image: \"Zmień nazwę zdjęcia\",\n        video: \"Zmień nazwę wideo\",\n        audio: \"Zmień nazwę audio\",\n        file: \"Zmień nazwę pliku\"\n      },\n      input_placeholder: {\n        image: \"Zmień nazwę zdjęcia\",\n        video: \"Zmień nazwę wideo\",\n        audio: \"Zmień nazwę audio\",\n        file: \"Zmień nazwę pliku\"\n      }\n    },\n    file_download: {\n      tooltip: {\n        image: \"Pobierz zdjęcie\",\n        video: \"Pobierz wideo\",\n        audio: \"Pobierz audio\",\n        file: \"Pobierz plik\"\n      }\n    },\n    file_delete: {\n      tooltip: {\n        image: \"Usuń zdjęcie\",\n        video: \"Usuń wideo\",\n        audio: \"Usuń audio\",\n        file: \"Usuń plik\"\n      }\n    },\n    file_preview_toggle: {\n      tooltip: \"Przełącz podgląd\"\n    },\n    nest: {\n      tooltip: \"Zagnieźdź blok\",\n      secondary_tooltip: \"Tab\"\n    },\n    unnest: {\n      tooltip: \"Odgagnieźdź blok\",\n      secondary_tooltip: \"Shift+Tab\"\n    },\n    align_left: {\n      tooltip: \"Wyrównaj tekst do lewej\"\n    },\n    align_center: {\n      tooltip: \"Wyśrodkuj tekst\"\n    },\n    align_right: {\n      tooltip: \"Wyrównaj tekst do prawej\"\n    },\n    align_justify: {\n      tooltip: \"Wyjustuj tekst\"\n    }\n  },\n  file_panel: {\n    upload: {\n      title: \"Wrzuć\",\n      file_placeholder: {\n        image: \"Wrzuć zdjęcie\",\n        video: \"Wrzuć wideo\",\n        audio: \"Wrzuć audio\",\n        file: \"Wrzuć plik\"\n      },\n      upload_error: \"Błąd: Przesyłanie nie powiodło się\"\n    },\n    embed: {\n      title: \"Wstaw\",\n      embed_button: {\n        image: \"Wstaw zdjęice\",\n        video: \"Wstaw wideo\",\n        audio: \"Wstaw audio\",\n        file: \"Wstaw plik\"\n      },\n      url_placeholder: \"Wprowadź URL\"\n    }\n  },\n  link_toolbar: {\n    delete: {\n      tooltip: \"Usuń link\"\n    },\n    edit: {\n      text: \"Edytuj link\",\n      tooltip: \"Edytuj\"\n    },\n    open: {\n      tooltip: \"Otwórz w nowej karcie\"\n    },\n    form: {\n      title_placeholder: \"Edytuj tytuł\",\n      url_placeholder: \"Edytuj URL\"\n    }\n  },\n  generic: {\n    ctrl_shortcut: \"Ctrl\"\n  }\n}, yo = {\n  slash_menu: {\n    heading: {\n      title: \"Título\",\n      subtext: \"Usado para um título de nível superior\",\n      aliases: [\"h\", \"titulo1\", \"h1\"],\n      group: \"Títulos\"\n    },\n    heading_2: {\n      title: \"Título 2\",\n      subtext: \"Usado para seções principais\",\n      aliases: [\"h2\", \"titulo2\", \"subtitulo\"],\n      group: \"Títulos\"\n    },\n    heading_3: {\n      title: \"Título 3\",\n      subtext: \"Usado para subseções e títulos de grupo\",\n      aliases: [\"h3\", \"titulo3\", \"subtitulo\"],\n      group: \"Títulos\"\n    },\n    numbered_list: {\n      title: \"Lista Numerada\",\n      subtext: \"Usado para exibir uma lista numerada\",\n      aliases: [\"ol\", \"li\", \"lista\", \"listanumerada\", \"lista numerada\"],\n      group: \"Blocos Básicos\"\n    },\n    bullet_list: {\n      title: \"Lista com Marcadores\",\n      subtext: \"Usado para exibir uma lista não ordenada\",\n      aliases: [\"ul\", \"li\", \"lista\", \"listamarcadores\", \"lista com marcadores\"],\n      group: \"Blocos Básicos\"\n    },\n    paragraph: {\n      title: \"Parágrafo\",\n      subtext: \"Usado para o corpo do seu documento\",\n      aliases: [\"p\", \"paragrafo\"],\n      group: \"Blocos Básicos\"\n    },\n    table: {\n      title: \"Tabela\",\n      subtext: \"Usado para tabelas\",\n      aliases: [\"tabela\"],\n      group: \"Avançado\"\n    },\n    image: {\n      title: \"Imagem\",\n      subtext: \"Inserir uma imagem\",\n      aliases: [\n        \"imagem\",\n        \"uploadImagem\",\n        \"upload\",\n        \"img\",\n        \"foto\",\n        \"media\",\n        \"url\"\n      ],\n      group: \"Mídia\"\n    },\n    video: {\n      title: \"Vídeo\",\n      subtext: \"Inserir um vídeo\",\n      aliases: [\n        \"vídeo\",\n        \"uploadVídeo\",\n        \"upload\",\n        \"mp4\",\n        \"filme\",\n        \"mídia\",\n        \"url\"\n      ],\n      group: \"Mídia\"\n    },\n    audio: {\n      title: \"Áudio\",\n      subtext: \"Inserir um áudio\",\n      aliases: [\"áudio\", \"uploadÁudio\", \"upload\", \"mp3\", \"som\", \"mídia\", \"url\"],\n      group: \"Mídia\"\n    },\n    file: {\n      title: \"Arquivo\",\n      subtext: \"Inserir um arquivo\",\n      aliases: [\"arquivo\", \"upload\", \"incorporar\", \"mídia\", \"url\"],\n      group: \"Mídia\"\n    }\n  },\n  placeholders: {\n    default: \"Digite texto ou use '/' para comandos\",\n    heading: \"Título\",\n    bulletListItem: \"Lista\",\n    numberedListItem: \"Lista\"\n  },\n  file_blocks: {\n    image: {\n      add_button_text: \"Adicionar imagem\"\n    },\n    video: {\n      add_button_text: \"Adicionar vídeo\"\n    },\n    audio: {\n      add_button_text: \"Adicionar áudio\"\n    },\n    file: {\n      add_button_text: \"Adicionar arquivo\"\n    }\n  },\n  // from react package:\n  side_menu: {\n    add_block_label: \"Adicionar bloco\",\n    drag_handle_label: \"Abrir menu do bloco\"\n  },\n  drag_handle: {\n    delete_menuitem: \"Excluir\",\n    colors_menuitem: \"Cores\"\n  },\n  table_handle: {\n    delete_column_menuitem: \"Excluir coluna\",\n    delete_row_menuitem: \"Excluir linha\",\n    add_left_menuitem: \"Adicionar coluna à esquerda\",\n    add_right_menuitem: \"Adicionar coluna à direita\",\n    add_above_menuitem: \"Adicionar linha acima\",\n    add_below_menuitem: \"Adicionar linha abaixo\"\n  },\n  suggestion_menu: {\n    no_items_title: \"Nenhum item encontrado\",\n    loading: \"Carregando…\"\n  },\n  color_picker: {\n    text_title: \"Texto\",\n    background_title: \"Fundo\",\n    colors: {\n      default: \"Padrão\",\n      gray: \"Cinza\",\n      brown: \"Marrom\",\n      red: \"Vermelho\",\n      orange: \"Laranja\",\n      yellow: \"Amarelo\",\n      green: \"Verde\",\n      blue: \"Azul\",\n      purple: \"Roxo\",\n      pink: \"Rosa\"\n    }\n  },\n  formatting_toolbar: {\n    bold: {\n      tooltip: \"Negrito\",\n      secondary_tooltip: \"Mod+B\"\n    },\n    italic: {\n      tooltip: \"Itálico\",\n      secondary_tooltip: \"Mod+I\"\n    },\n    underline: {\n      tooltip: \"Sublinhado\",\n      secondary_tooltip: \"Mod+U\"\n    },\n    strike: {\n      tooltip: \"Riscado\",\n      secondary_tooltip: \"Mod+Shift+X\"\n    },\n    code: {\n      tooltip: \"Código\",\n      secondary_tooltip: \"\"\n    },\n    colors: {\n      tooltip: \"Cores\"\n    },\n    link: {\n      tooltip: \"Criar link\",\n      secondary_tooltip: \"Mod+K\"\n    },\n    file_caption: {\n      tooltip: \"Editar legenda\",\n      input_placeholder: \"Editar legenda\"\n    },\n    file_replace: {\n      tooltip: {\n        image: \"Substituir imagem\",\n        video: \"Substituir vídeo\",\n        audio: \"Substituir áudio\",\n        file: \"Substituir arquivo\"\n      }\n    },\n    file_rename: {\n      tooltip: {\n        image: \"Renomear imagem\",\n        video: \"Renomear vídeo\",\n        audio: \"Renomear áudio\",\n        file: \"Renomear arquivo\"\n      },\n      input_placeholder: {\n        image: \"Renomear imagem\",\n        video: \"Renomear vídeo\",\n        audio: \"Renomear áudio\",\n        file: \"Renomear arquivo\"\n      }\n    },\n    file_download: {\n      tooltip: {\n        image: \"Baixar imagem\",\n        video: \"Baixar vídeo\",\n        audio: \"Baixar áudio\",\n        file: \"Baixar arquivo\"\n      }\n    },\n    file_delete: {\n      tooltip: {\n        image: \"Excluir imagem\",\n        video: \"Excluir vídeo\",\n        audio: \"Excluir áudio\",\n        file: \"Excluir arquivo\"\n      }\n    },\n    file_preview_toggle: {\n      tooltip: \"Alternar visualização\"\n    },\n    nest: {\n      tooltip: \"Aninhar bloco\",\n      secondary_tooltip: \"Tab\"\n    },\n    unnest: {\n      tooltip: \"Desaninhar bloco\",\n      secondary_tooltip: \"Shift+Tab\"\n    },\n    align_left: {\n      tooltip: \"Alinhar à esquerda\"\n    },\n    align_center: {\n      tooltip: \"Alinhar ao centro\"\n    },\n    align_right: {\n      tooltip: \"Alinhar à direita\"\n    },\n    align_justify: {\n      tooltip: \"Justificar texto\"\n    }\n  },\n  file_panel: {\n    upload: {\n      title: \"Upload\",\n      file_placeholder: {\n        image: \"Upload de imagem\",\n        video: \"Upload de vídeo\",\n        audio: \"Upload de áudio\",\n        file: \"Upload de arquivo\"\n      },\n      upload_error: \"Erro: Falha no upload\"\n    },\n    embed: {\n      title: \"Incorporar\",\n      embed_button: {\n        image: \"Incorporar imagem\",\n        video: \"Incorporar vídeo\",\n        audio: \"Incorporar áudio\",\n        file: \"Incorporar arquivo\"\n      },\n      url_placeholder: \"Insira a URL\"\n    }\n  },\n  link_toolbar: {\n    delete: {\n      tooltip: \"Remover link\"\n    },\n    edit: {\n      text: \"Editar link\",\n      tooltip: \"Editar\"\n    },\n    open: {\n      tooltip: \"Abrir em nova aba\"\n    },\n    form: {\n      title_placeholder: \"Editar título\",\n      url_placeholder: \"Editar URL\"\n    }\n  },\n  generic: {\n    ctrl_shortcut: \"Ctrl\"\n  }\n}, _o = {\n  slash_menu: {\n    heading: {\n      title: \"Tiêu đề H1\",\n      subtext: \"Sử dụng cho tiêu đề cấp cao nhất\",\n      aliases: [\"h\", \"tieude1\", \"dd1\"],\n      group: \"Tiêu đề\"\n    },\n    heading_2: {\n      title: \"Tiêu đề H2\",\n      subtext: \"Sử dụng cho các phần chính\",\n      aliases: [\"h2\", \"tieude2\", \"tieudephu\"],\n      group: \"Tiêu đề\"\n    },\n    heading_3: {\n      title: \"Tiêu đề H3\",\n      subtext: \"Sử dụng cho phụ đề và tiêu đề nhóm\",\n      aliases: [\"h3\", \"tieude3\", \"tieudephu\"],\n      group: \"Tiêu đề\"\n    },\n    numbered_list: {\n      title: \"Danh sách đánh số\",\n      subtext: \"Sử dụng để hiển thị danh sách có đánh số\",\n      aliases: [\"ol\", \"li\", \"ds\", \"danhsachdso\", \"danh sách đánh số\"],\n      group: \"Khối cơ bản\"\n    },\n    bullet_list: {\n      title: \"Danh sách\",\n      subtext: \"Sử dụng để hiển thị danh sách không đánh số\",\n      aliases: [\"ul\", \"li\", \"ds\", \"danhsach\", \"danh sách\"],\n      group: \"Khối cơ bản\"\n    },\n    paragraph: {\n      title: \"Đoạn văn\",\n      subtext: \"Sử dụng cho nội dung chính của tài liệu\",\n      aliases: [\"p\", \"doanvan\"],\n      group: \"Khối cơ bản\"\n    },\n    table: {\n      title: \"Bảng\",\n      subtext: \"Sử dụng để tạo bảng\",\n      aliases: [\"bang\"],\n      group: \"Nâng cao\"\n    },\n    image: {\n      title: \"Hình ảnh\",\n      subtext: \"Chèn hình ảnh\",\n      aliases: [\"anh\", \"tai-len-anh\", \"tai-len\", \"img\", \"hinh\", \"media\", \"url\"],\n      group: \"Phương tiện\"\n    },\n    video: {\n      title: \"Video\",\n      subtext: \"Chèn video\",\n      aliases: [\n        \"video\",\n        \"tai-len-video\",\n        \"tai-len\",\n        \"mp4\",\n        \"phim\",\n        \"media\",\n        \"url\"\n      ],\n      group: \"Phương tiện\"\n    },\n    audio: {\n      title: \"Âm thanh\",\n      subtext: \"Chèn âm thanh\",\n      aliases: [\n        \"âm thanh\",\n        \"tai-len-am-thanh\",\n        \"tai-len\",\n        \"mp3\",\n        \"am thanh\",\n        \"media\",\n        \"url\"\n      ],\n      group: \"Phương tiện\"\n    },\n    file: {\n      title: \"Tệp\",\n      subtext: \"Chèn tệp\",\n      aliases: [\"tep\", \"tai-len\", \"nhung\", \"media\", \"url\"],\n      group: \"Phương tiện\"\n    }\n  },\n  placeholders: {\n    default: \"Nhập văn bản hoặc gõ '/' để thêm định dạng\",\n    heading: \"Tiêu đề\",\n    bulletListItem: \"Danh sách\",\n    numberedListItem: \"Danh sách\"\n  },\n  file_blocks: {\n    image: {\n      add_button_text: \"Thêm ảnh\"\n    },\n    video: {\n      add_button_text: \"Thêm video\"\n    },\n    audio: {\n      add_button_text: \"Thêm âm thanh\"\n    },\n    file: {\n      add_button_text: \"Thêm tệp\"\n    }\n  },\n  // từ gói phản ứng:\n  side_menu: {\n    add_block_label: \"Thêm khối\",\n    drag_handle_label: \"Mở trình đơn khối\"\n  },\n  drag_handle: {\n    delete_menuitem: \"Xóa\",\n    colors_menuitem: \"Màu sắc\"\n  },\n  table_handle: {\n    delete_column_menuitem: \"Xóa cột\",\n    delete_row_menuitem: \"Xóa hàng\",\n    add_left_menuitem: \"Thêm cột bên trái\",\n    add_right_menuitem: \"Thêm cột bên phải\",\n    add_above_menuitem: \"Thêm hàng phía trên\",\n    add_below_menuitem: \"Thêm hàng phía dưới\"\n  },\n  suggestion_menu: {\n    no_items_title: \"Không tìm thấy mục nào\",\n    loading: \"Đang tải...\"\n  },\n  color_picker: {\n    text_title: \"Văn bản\",\n    background_title: \"Nền\",\n    colors: {\n      default: \"Mặc định\",\n      gray: \"Xám\",\n      brown: \"Nâu\",\n      red: \"Đỏ\",\n      orange: \"Cam\",\n      yellow: \"Vàng\",\n      green: \"Xanh lá\",\n      blue: \"Xanh dương\",\n      purple: \"Tím\",\n      pink: \"Hồng\"\n    }\n  },\n  formatting_toolbar: {\n    bold: {\n      tooltip: \"In đậm\",\n      secondary_tooltip: \"Mod+B\"\n    },\n    italic: {\n      tooltip: \"In nghiêng\",\n      secondary_tooltip: \"Mod+I\"\n    },\n    underline: {\n      tooltip: \"Gạch dưới\",\n      secondary_tooltip: \"Mod+U\"\n    },\n    strike: {\n      tooltip: \"Gạch ngang\",\n      secondary_tooltip: \"Mod+Shift+X\"\n    },\n    code: {\n      tooltip: \"Code\",\n      secondary_tooltip: \"\"\n    },\n    colors: {\n      tooltip: \"Màu sắc\"\n    },\n    link: {\n      tooltip: \"Tạo liên kết\",\n      secondary_tooltip: \"Mod+K\"\n    },\n    file_caption: {\n      tooltip: \"Chỉnh sửa chú thích\",\n      input_placeholder: \"Chỉnh sửa chú thích\"\n    },\n    file_replace: {\n      tooltip: {\n        image: \"Thay thế hình ảnh\",\n        video: \"Thay thế video\",\n        audio: \"Thay thế âm thanh\",\n        file: \"Thay thế tệp\"\n      }\n    },\n    file_rename: {\n      tooltip: {\n        image: \"Đổi tên hình ảnh\",\n        video: \"Đổi tên video\",\n        audio: \"Đổi tên âm thanh\",\n        file: \"Đổi tên tệp\"\n      },\n      input_placeholder: {\n        image: \"Đổi tên hình ảnh\",\n        video: \"Đổi tên video\",\n        audio: \"Đổi tên âm thanh\",\n        file: \"Đổi tên tệp\"\n      }\n    },\n    file_download: {\n      tooltip: {\n        image: \"Tải xuống hình ảnh\",\n        video: \"Tải xuống video\",\n        audio: \"Tải xuống âm thanh\",\n        file: \"Tải xuống tệp\"\n      }\n    },\n    file_delete: {\n      tooltip: {\n        image: \"Xóa hình ảnh\",\n        video: \"Xóa video\",\n        audio: \"Xóa âm thanh\",\n        file: \"Xóa tệp\"\n      }\n    },\n    file_preview_toggle: {\n      tooltip: \"Chuyển đổi xem trước\"\n    },\n    nest: {\n      tooltip: \"Lồng khối\",\n      secondary_tooltip: \"Tab\"\n    },\n    unnest: {\n      tooltip: \"Bỏ lồng khối\",\n      secondary_tooltip: \"Shift+Tab\"\n    },\n    align_left: {\n      tooltip: \"Căn trái văn bản\"\n    },\n    align_center: {\n      tooltip: \"Căn giữa văn bản\"\n    },\n    align_right: {\n      tooltip: \"Căn phải văn bản\"\n    },\n    align_justify: {\n      tooltip: \"Căn đều văn bản\"\n    }\n  },\n  file_panel: {\n    upload: {\n      title: \"Tải lên\",\n      file_placeholder: {\n        image: \"Tải lên hình ảnh\",\n        video: \"Tải lên video\",\n        audio: \"Tải lên âm thanh\",\n        file: \"Tải lên tệp\"\n      },\n      upload_error: \"Lỗi: Tải lên thất bại\"\n    },\n    embed: {\n      title: \"Nhúng\",\n      embed_button: {\n        image: \"Nhúng hình ảnh\",\n        video: \"Nhúng video\",\n        audio: \"Nhúng âm thanh\",\n        file: \"Nhúng tệp\"\n      },\n      url_placeholder: \"Nhập URL\"\n    }\n  },\n  link_toolbar: {\n    delete: {\n      tooltip: \"Xóa liên kết\"\n    },\n    edit: {\n      text: \"Chỉnh sửa liên kết\",\n      tooltip: \"Chỉnh sửa\"\n    },\n    open: {\n      tooltip: \"Mở trong tab mới\"\n    },\n    form: {\n      title_placeholder: \"Chỉnh sửa tiêu đề\",\n      url_placeholder: \"Chỉnh sửa URL\"\n    }\n  },\n  generic: {\n    ctrl_shortcut: \"Ctrl\"\n  }\n}, wo = {\n  slash_menu: {\n    heading: {\n      title: \"一级标题\",\n      subtext: \"用于顶级标题\",\n      aliases: [\"h\", \"heading1\", \"h1\", \"标题\", \"一级标题\"],\n      group: \"标题\"\n    },\n    heading_2: {\n      title: \"二级标题\",\n      subtext: \"用于关键部分\",\n      aliases: [\"h2\", \"heading2\", \"subheading\", \"标题\", \"二级标题\", \"副标题\"],\n      group: \"标题\"\n    },\n    heading_3: {\n      title: \"三级标题\",\n      subtext: \"用于小节和分组标题\",\n      aliases: [\"h3\", \"heading3\", \"subheading\", \"标题\", \"三级标题\"],\n      group: \"标题\"\n    },\n    numbered_list: {\n      title: \"有序列表\",\n      subtext: \"用于显示有序列表\",\n      aliases: [\n        \"ol\",\n        \"li\",\n        \"list\",\n        \"numberedlist\",\n        \"numbered list\",\n        \"列表\",\n        \"有序列表\"\n      ],\n      group: \"基础\"\n    },\n    bullet_list: {\n      title: \"无序列表\",\n      subtext: \"用于显示无序列表\",\n      aliases: [\n        \"ul\",\n        \"li\",\n        \"list\",\n        \"bulletlist\",\n        \"bullet list\",\n        \"列表\",\n        \"无序列表\"\n      ],\n      group: \"基础\"\n    },\n    paragraph: {\n      title: \"段落\",\n      subtext: \"用于文档正文\",\n      aliases: [\"p\", \"paragraph\", \"text\", \"正文\"],\n      group: \"基础\"\n    },\n    table: {\n      title: \"表格\",\n      subtext: \"使用表格\",\n      aliases: [\"table\", \"表格\"],\n      group: \"高级功能\"\n    },\n    image: {\n      title: \"图片\",\n      subtext: \"插入图片\",\n      aliases: [\n        \"图片\",\n        \"上传图片\",\n        \"上传\",\n        \"image\",\n        \"img\",\n        \"相册\",\n        \"媒体\",\n        \"url\"\n      ],\n      group: \"媒体\"\n    },\n    video: {\n      title: \"视频\",\n      subtext: \"插入视频\",\n      aliases: [\n        \"视频\",\n        \"视频上传\",\n        \"上传\",\n        \"video\",\n        \"mp4\",\n        \"电影\",\n        \"媒体\",\n        \"url\",\n        \"驱动\",\n        \"dropbox\"\n      ],\n      group: \"媒体\"\n    },\n    audio: {\n      title: \"音频\",\n      subtext: \"插入音频\",\n      aliases: [\n        \"音频\",\n        \"音频上传\",\n        \"上传\",\n        \"audio\",\n        \"mp3\",\n        \"声音\",\n        \"媒体\",\n        \"url\",\n        \"驱动\",\n        \"dropbox\"\n      ],\n      group: \"媒体\"\n    },\n    file: {\n      title: \"文件\",\n      subtext: \"插入文件\",\n      aliases: [\"文件\", \"上传\", \"file\", \"嵌入\", \"媒体\", \"url\"],\n      group: \"媒体\"\n    }\n  },\n  placeholders: {\n    default: \"输入 '/' 以使用命令\",\n    heading: \"标题\",\n    bulletListItem: \"列表\",\n    numberedListItem: \"列表\"\n  },\n  file_blocks: {\n    image: {\n      add_button_text: \"添加图片\"\n    },\n    video: {\n      add_button_text: \"添加视频\"\n    },\n    audio: {\n      add_button_text: \"添加音频\"\n    },\n    file: {\n      add_button_text: \"添加文件\"\n    }\n  },\n  // from react package:\n  side_menu: {\n    add_block_label: \"添加块\",\n    drag_handle_label: \"打开菜单\"\n  },\n  drag_handle: {\n    delete_menuitem: \"删除\",\n    colors_menuitem: \"颜色\"\n  },\n  table_handle: {\n    delete_column_menuitem: \"删除列\",\n    delete_row_menuitem: \"删除行\",\n    add_left_menuitem: \"左侧添加列\",\n    add_right_menuitem: \"右侧添加列\",\n    add_above_menuitem: \"上方添加行\",\n    add_below_menuitem: \"下方添加行\"\n  },\n  suggestion_menu: {\n    no_items_title: \"无匹配项\",\n    loading: \"加载中…\"\n  },\n  color_picker: {\n    text_title: \"文本\",\n    background_title: \"背景色\",\n    colors: {\n      default: \"默认\",\n      gray: \"灰色\",\n      brown: \"棕色\",\n      red: \"红色\",\n      orange: \"橙色\",\n      yellow: \"黄色\",\n      green: \"绿色\",\n      blue: \"蓝色\",\n      purple: \"紫色\",\n      pink: \"粉色\"\n    }\n  },\n  formatting_toolbar: {\n    bold: {\n      tooltip: \"加粗\",\n      secondary_tooltip: \"Mod+B\"\n    },\n    italic: {\n      tooltip: \"斜体\",\n      secondary_tooltip: \"Mod+I\"\n    },\n    underline: {\n      tooltip: \"下划线\",\n      secondary_tooltip: \"Mod+U\"\n    },\n    strike: {\n      tooltip: \"删除线\",\n      secondary_tooltip: \"Mod+Shift+X\"\n    },\n    code: {\n      tooltip: \"代码标记\",\n      secondary_tooltip: \"\"\n    },\n    colors: {\n      tooltip: \"颜色\"\n    },\n    link: {\n      tooltip: \"添加链接\",\n      secondary_tooltip: \"Mod+K\"\n    },\n    file_caption: {\n      tooltip: \"编辑标题\",\n      input_placeholder: \"编辑标题\"\n    },\n    file_replace: {\n      tooltip: {\n        image: \"替换图片\",\n        video: \"替换视频\",\n        audio: \"替换音频\",\n        file: \"替换文件\"\n      }\n    },\n    file_rename: {\n      tooltip: {\n        image: \"重命名图片\",\n        video: \"重命名视频\",\n        audio: \"重命名音频\",\n        file: \"重命名文件\"\n      },\n      input_placeholder: {\n        image: \"重命名图片\",\n        video: \"重命名视频\",\n        audio: \"重命名音频\",\n        file: \"重命名文件\"\n      }\n    },\n    file_download: {\n      tooltip: {\n        image: \"下载图片\",\n        video: \"下载视频\",\n        audio: \"下载音频\",\n        file: \"下载文件\"\n      }\n    },\n    file_delete: {\n      tooltip: {\n        image: \"删除图片\",\n        video: \"删除视频\",\n        audio: \"删除音频\",\n        file: \"删除文件\"\n      }\n    },\n    file_preview_toggle: {\n      tooltip: \"切换预览\"\n    },\n    nest: {\n      tooltip: \"嵌套\",\n      secondary_tooltip: \"Tab\"\n    },\n    unnest: {\n      tooltip: \"取消嵌套\",\n      secondary_tooltip: \"Shift+Tab\"\n    },\n    align_left: {\n      tooltip: \"左对齐\"\n    },\n    align_center: {\n      tooltip: \"居中\"\n    },\n    align_right: {\n      tooltip: \"右对齐\"\n    },\n    align_justify: {\n      tooltip: \"文本对齐\"\n    }\n  },\n  file_panel: {\n    upload: {\n      title: \"上传\",\n      file_placeholder: {\n        image: \"上传图片\",\n        video: \"上传视频\",\n        audio: \"上传音频\",\n        file: \"上传文件\"\n      },\n      upload_error: \"Error：上传失败\"\n    },\n    embed: {\n      title: \"嵌入\",\n      embed_button: {\n        image: \"嵌入图片\",\n        video: \"嵌入视频\",\n        audio: \"嵌入音频\",\n        file: \"嵌入文件\"\n      },\n      url_placeholder: \"输入图片地址\"\n    }\n  },\n  link_toolbar: {\n    delete: {\n      tooltip: \"清除链接\"\n    },\n    edit: {\n      text: \"编辑链接\",\n      tooltip: \"编辑\"\n    },\n    open: {\n      tooltip: \"新窗口打开\"\n    },\n    form: {\n      title_placeholder: \"编辑标题\",\n      url_placeholder: \"编辑链接地址\"\n    }\n  },\n  generic: {\n    ctrl_shortcut: \"Ctrl\"\n  }\n}, vr = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  en: Ze,\n  fr: ho,\n  is: mo,\n  ja: fo,\n  ko: go,\n  nl: bo,\n  pl: ko,\n  pt: yo,\n  vi: _o,\n  zh: wo\n}, Symbol.toStringTag, { value: \"Module\" }));\nfunction vo(t, e = JSON.stringify) {\n  const o = {};\n  return t.filter((i) => {\n    const n = e(i);\n    return Object.prototype.hasOwnProperty.call(o, n) ? !1 : o[n] = !0;\n  });\n}\nfunction xo(t) {\n  const e = t.filter(\n    (i, n) => t.indexOf(i) !== n\n  );\n  return vo(e);\n}\nconst J = _tiptap_core__WEBPACK_IMPORTED_MODULE_17__.Extension.create({\n  name: \"uniqueID\",\n  // we’ll set a very high priority to make sure this runs first\n  // and is compatible with `appendTransaction` hooks of other extensions\n  priority: 1e4,\n  addOptions() {\n    return {\n      attributeName: \"id\",\n      types: [],\n      generateID: () => {\n        if (typeof window < \"u\" && window.__TEST_OPTIONS) {\n          const t = window.__TEST_OPTIONS;\n          return t.mockID === void 0 ? t.mockID = 0 : t.mockID++, t.mockID.toString();\n        }\n        return (0,uuid__WEBPACK_IMPORTED_MODULE_18__[\"default\"])();\n      },\n      filterTransaction: null\n    };\n  },\n  addGlobalAttributes() {\n    return [\n      {\n        types: this.options.types,\n        attributes: {\n          [this.options.attributeName]: {\n            default: null,\n            parseHTML: (t) => t.getAttribute(`data-${this.options.attributeName}`),\n            renderHTML: (t) => ({\n              [`data-${this.options.attributeName}`]: t[this.options.attributeName]\n            })\n          }\n        }\n      }\n    ];\n  },\n  // check initial content for missing ids\n  // onCreate() {\n  //   // Don’t do this when the collaboration extension is active\n  //   // because this may update the content, so Y.js tries to merge these changes.\n  //   // This leads to empty block nodes.\n  //   // See: https://github.com/ueberdosis/tiptap/issues/2400\n  //   if (\n  //     this.editor.extensionManager.extensions.find(\n  //       (extension) => extension.name === \"collaboration\"\n  //     )\n  //   ) {\n  //     return;\n  //   }\n  //   const { view, state } = this.editor;\n  //   const { tr, doc } = state;\n  //   const { types, attributeName, generateID } = this.options;\n  //   const nodesWithoutId = findChildren(doc, (node) => {\n  //     return (\n  //       types.includes(node.type.name) && node.attrs[attributeName] === null\n  //     );\n  //   });\n  //   nodesWithoutId.forEach(({ node, pos }) => {\n  //     tr.setNodeMarkup(pos, undefined, {\n  //       ...node.attrs,\n  //       [attributeName]: generateID(),\n  //     });\n  //   });\n  //   tr.setMeta(\"addToHistory\", false);\n  //   view.dispatch(tr);\n  // },\n  addProseMirrorPlugins() {\n    let t = null, e = !1;\n    return [\n      new prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.Plugin({\n        key: new prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.PluginKey(\"uniqueID\"),\n        appendTransaction: (o, i, n) => {\n          const r = o.some((m) => m.docChanged) && !i.doc.eq(n.doc), a = this.options.filterTransaction && o.some((m) => {\n            let g, y;\n            return !(!((y = (g = this.options).filterTransaction) === null || y === void 0) && y.call(g, m));\n          });\n          if (!r || a)\n            return;\n          const { tr: s } = n, { types: l, attributeName: d, generateID: u } = this.options, p = (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_17__.combineTransactionSteps)(\n            i.doc,\n            o\n          ), { mapping: h } = p;\n          if ((0,_tiptap_core__WEBPACK_IMPORTED_MODULE_17__.getChangedRanges)(p).forEach(({ newRange: m }) => {\n            const g = (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_17__.findChildrenInRange)(\n              n.doc,\n              m,\n              (E) => l.includes(E.type.name)\n            ), y = g.map(({ node: E }) => E.attrs[d]).filter((E) => E !== null), B = xo(y);\n            g.forEach(({ node: E, pos: $ }) => {\n              let ce;\n              const Be = (ce = s.doc.nodeAt($)) === null || ce === void 0 ? void 0 : ce.attrs[d];\n              if (Be === null) {\n                const Le = i.doc.type.createAndFill().content;\n                if (i.doc.content.findDiffStart(Le) === null) {\n                  const Ie = JSON.parse(\n                    JSON.stringify(n.doc.toJSON())\n                  );\n                  if (Ie.content[0].content[0].attrs.id = \"initialBlockId\", JSON.stringify(Ie.content) === JSON.stringify(Le.toJSON())) {\n                    s.setNodeMarkup($, void 0, {\n                      ...E.attrs,\n                      [d]: \"initialBlockId\"\n                    });\n                    return;\n                  }\n                }\n                s.setNodeMarkup($, void 0, {\n                  ...E.attrs,\n                  [d]: u()\n                });\n                return;\n              }\n              const { deleted: xt } = h.invert().mapResult($);\n              xt && B.includes(Be) && s.setNodeMarkup($, void 0, {\n                ...E.attrs,\n                [d]: u()\n              });\n            });\n          }), !!s.steps.length)\n            return s;\n        },\n        // we register a global drag handler to track the current drag source element\n        view(o) {\n          const i = (n) => {\n            let r;\n            t = !((r = o.dom.parentElement) === null || r === void 0) && r.contains(n.target) ? o.dom.parentElement : null;\n          };\n          return window.addEventListener(\"dragstart\", i), {\n            destroy() {\n              window.removeEventListener(\"dragstart\", i);\n            }\n          };\n        },\n        props: {\n          // `handleDOMEvents` is called before `transformPasted`\n          // so we can do some checks before\n          handleDOMEvents: {\n            // only create new ids for dropped content while holding `alt`\n            // or content is dragged from another editor\n            drop: (o, i) => {\n              let n;\n              return (t !== o.dom.parentElement || ((n = i.dataTransfer) === null || n === void 0 ? void 0 : n.effectAllowed) === \"copy\") && (t = null, e = !0), !1;\n            },\n            // always create new ids on pasted content\n            paste: () => (e = !0, !1)\n          },\n          // we’ll remove ids for every pasted node\n          // so we can create a new one within `appendTransaction`\n          transformPasted: (o) => {\n            if (!e)\n              return o;\n            const { types: i, attributeName: n } = this.options, r = (a) => {\n              const s = [];\n              return a.forEach((l) => {\n                if (l.isText) {\n                  s.push(l);\n                  return;\n                }\n                if (!i.includes(l.type.name)) {\n                  s.push(l.copy(r(l.content)));\n                  return;\n                }\n                const d = l.type.create(\n                  {\n                    ...l.attrs,\n                    [n]: null\n                  },\n                  r(l.content),\n                  l.marks\n                );\n                s.push(d);\n              }), prosemirror_model__WEBPACK_IMPORTED_MODULE_20__.Fragment.from(s);\n            };\n            return e = !1, new prosemirror_model__WEBPACK_IMPORTED_MODULE_20__.Slice(\n              r(o.content),\n              o.openStart,\n              o.openEnd\n            );\n          }\n        }\n      })\n    ];\n  }\n});\nfunction Je(t) {\n  const e = t.attrs.id, o = t.firstChild, i = o.type, n = t.childCount === 2 ? t.lastChild.childCount : 0;\n  return {\n    id: e,\n    node: t,\n    contentNode: o,\n    contentType: i,\n    numChildBlocks: n\n  };\n}\nfunction b(t, e) {\n  const i = t.nodeSize - 2;\n  if (e <= 1)\n    for (e = 1 + 1; t.resolve(e).parent.type.name !== \"blockContainer\" && e < i; )\n      e++;\n  else if (e >= i)\n    for (e = i - 1; t.resolve(e).parent.type.name !== \"blockContainer\" && e > 1; )\n      e--;\n  t.resolve(e).parent.type.name === \"blockGroup\" && e++;\n  const n = t.resolve(e), r = n.depth;\n  let a = n.node(r), s = r;\n  for (; ; ) {\n    if (s < 0)\n      throw new Error(\n        \"Could not find blockContainer node. This can only happen if the underlying BlockNote schema has been edited.\"\n      );\n    if (a.type.name === \"blockContainer\")\n      break;\n    s -= 1, a = n.node(s);\n  }\n  const { id: l, contentNode: d, contentType: u, numChildBlocks: p } = Je(a), h = n.start(s), f = n.end(s);\n  return {\n    id: l,\n    node: a,\n    contentNode: d,\n    contentType: u,\n    numChildBlocks: p,\n    startPos: h,\n    endPos: f,\n    depth: s\n  };\n}\nfunction He(t) {\n  return t.type === \"link\";\n}\nfunction Ye(t) {\n  return typeof t != \"string\" && t.type === \"link\";\n}\nfunction Z(t) {\n  return typeof t != \"string\" && t.type === \"text\";\n}\nclass I extends Error {\n  constructor(e) {\n    super(`Unreachable case: ${e}`);\n  }\n}\nfunction xr(t, e = !0) {\n  const { \"data-test\": o, ...i } = t;\n  if (Object.keys(i).length > 0 && e)\n    throw new Error(\"Object must be empty \" + JSON.stringify(t));\n}\nfunction Ue(t, e, o) {\n  const i = [];\n  for (const [n, r] of Object.entries(t.styles)) {\n    const a = o[n];\n    if (!a)\n      throw new Error(`style ${n} not found in styleSchema`);\n    if (a.propSchema === \"boolean\")\n      i.push(e.mark(n));\n    else if (a.propSchema === \"string\")\n      i.push(e.mark(n, { stringValue: r }));\n    else\n      throw new I(a.propSchema);\n  }\n  return t.text.split(/(\\n)/g).filter((n) => n.length > 0).map((n) => n === `\n` ? e.nodes.hardBreak.create() : e.text(n, i));\n}\nfunction Eo(t, e, o) {\n  const i = e.marks.link.create({\n    href: t.href\n  });\n  return be(t.content, e, o).map(\n    (n) => {\n      if (n.type.name === \"text\")\n        return n.mark([...n.marks, i]);\n      if (n.type.name === \"hardBreak\")\n        return n;\n      throw new Error(\"unexpected node type\");\n    }\n  );\n}\nfunction be(t, e, o) {\n  const i = [];\n  if (typeof t == \"string\")\n    return i.push(\n      ...Ue(\n        { type: \"text\", text: t, styles: {} },\n        e,\n        o\n      )\n    ), i;\n  for (const n of t)\n    i.push(...Ue(n, e, o));\n  return i;\n}\nfunction ie(t, e, o) {\n  const i = [];\n  for (const n of t)\n    typeof n == \"string\" ? i.push(...be(n, e, o)) : Ye(n) ? i.push(...Eo(n, e, o)) : Z(n) ? i.push(...be([n], e, o)) : i.push(\n      et(n, e, o)\n    );\n  return i;\n}\nfunction Qe(t, e, o) {\n  const i = [];\n  for (const n of t.rows) {\n    const r = [];\n    for (const s of n.cells) {\n      let l;\n      if (!s)\n        l = e.nodes.tableParagraph.create({});\n      else if (typeof s == \"string\")\n        l = e.nodes.tableParagraph.create({}, e.text(s));\n      else {\n        const u = ie(s, e, o);\n        l = e.nodes.tableParagraph.create({}, u);\n      }\n      const d = e.nodes.tableCell.create({}, l);\n      r.push(d);\n    }\n    const a = e.nodes.tableRow.create({}, r);\n    i.push(a);\n  }\n  return i;\n}\nfunction et(t, e, o) {\n  let i, n = t.type;\n  if (n === void 0 && (n = \"paragraph\"), !e.nodes[n])\n    throw new Error(`node type ${n} not found in schema`);\n  if (!t.content)\n    i = e.nodes[n].create(t.props);\n  else if (typeof t.content == \"string\")\n    i = e.nodes[n].create(\n      t.props,\n      e.text(t.content)\n    );\n  else if (Array.isArray(t.content)) {\n    const r = ie(t.content, e, o);\n    i = e.nodes[n].create(t.props, r);\n  } else if (t.content.type === \"tableContent\") {\n    const r = Qe(t.content, e, o);\n    i = e.nodes[n].create(t.props, r);\n  } else\n    throw new I(t.content.type);\n  return i;\n}\nfunction N(t, e, o) {\n  let i = t.id;\n  i === void 0 && (i = J.options.generateID());\n  const n = et(\n    t,\n    e,\n    o\n  ), r = [];\n  if (t.children)\n    for (const s of t.children)\n      r.push(N(s, e, o));\n  const a = e.nodes.blockGroup.create({}, r);\n  return e.nodes.blockContainer.create(\n    {\n      id: i,\n      ...t.props\n    },\n    r.length > 0 ? [n, a] : n\n  );\n}\nfunction Co(t, e, o) {\n  const i = {\n    type: \"tableContent\",\n    rows: []\n  };\n  return t.content.forEach((n) => {\n    const r = {\n      cells: []\n    };\n    n.content.forEach((a) => {\n      r.cells.push(\n        ve(\n          a.firstChild,\n          e,\n          o\n        )\n      );\n    }), i.rows.push(r);\n  }), i;\n}\nfunction ve(t, e, o) {\n  const i = [];\n  let n;\n  return t.content.forEach((r) => {\n    if (r.type.name === \"hardBreak\") {\n      if (n)\n        if (Z(n))\n          n.text += `\n`;\n        else if (He(n))\n          n.content[n.content.length - 1].text += `\n`;\n        else\n          throw new Error(\"unexpected\");\n      else\n        n = {\n          type: \"text\",\n          text: `\n`,\n          styles: {}\n        };\n      return;\n    }\n    if (r.type.name !== \"link\" && r.type.name !== \"text\" && e[r.type.name]) {\n      n && (i.push(n), n = void 0), i.push(\n        tt(r, e, o)\n      );\n      return;\n    }\n    const a = {};\n    let s;\n    for (const l of r.marks)\n      if (l.type.name === \"link\")\n        s = l;\n      else {\n        const d = o[l.type.name];\n        if (!d)\n          throw new Error(`style ${l.type.name} not found in styleSchema`);\n        if (d.propSchema === \"boolean\")\n          a[d.type] = !0;\n        else if (d.propSchema === \"string\")\n          a[d.type] = l.attrs.stringValue;\n        else\n          throw new I(d.propSchema);\n      }\n    n ? Z(n) ? s ? (i.push(n), n = {\n      type: \"link\",\n      href: s.attrs.href,\n      content: [\n        {\n          type: \"text\",\n          text: r.textContent,\n          styles: a\n        }\n      ]\n    }) : JSON.stringify(n.styles) === JSON.stringify(a) ? n.text += r.textContent : (i.push(n), n = {\n      type: \"text\",\n      text: r.textContent,\n      styles: a\n    }) : He(n) && (s ? n.href === s.attrs.href ? JSON.stringify(\n      n.content[n.content.length - 1].styles\n    ) === JSON.stringify(a) ? n.content[n.content.length - 1].text += r.textContent : n.content.push({\n      type: \"text\",\n      text: r.textContent,\n      styles: a\n    }) : (i.push(n), n = {\n      type: \"link\",\n      href: s.attrs.href,\n      content: [\n        {\n          type: \"text\",\n          text: r.textContent,\n          styles: a\n        }\n      ]\n    }) : (i.push(n), n = {\n      type: \"text\",\n      text: r.textContent,\n      styles: a\n    })) : s ? n = {\n      type: \"link\",\n      href: s.attrs.href,\n      content: [\n        {\n          type: \"text\",\n          text: r.textContent,\n          styles: a\n        }\n      ]\n    } : n = {\n      type: \"text\",\n      text: r.textContent,\n      styles: a\n    };\n  }), n && i.push(n), i;\n}\nfunction tt(t, e, o) {\n  if (t.type.name === \"text\" || t.type.name === \"link\")\n    throw new Error(\"unexpected\");\n  const i = {}, n = e[t.type.name];\n  for (const [s, l] of Object.entries(t.attrs)) {\n    if (!n)\n      throw Error(\"ic node is of an unrecognized type: \" + t.type.name);\n    const d = n.propSchema;\n    s in d && (i[s] = l);\n  }\n  let r;\n  return n.content === \"styled\" ? r = ve(\n    t,\n    e,\n    o\n  ) : r = void 0, {\n    type: t.type.name,\n    props: i,\n    content: r\n  };\n}\nfunction _(t, e, o, i, n) {\n  if (t.type.name !== \"blockContainer\")\n    throw Error(\n      \"Node must be of type blockContainer, but is of type\" + t.type.name + \".\"\n    );\n  const r = n == null ? void 0 : n.get(t);\n  if (r)\n    return r;\n  const a = Je(t);\n  let s = a.id;\n  s === null && (s = J.options.generateID());\n  const l = {};\n  for (const [f, m] of Object.entries({\n    ...t.attrs,\n    ...a.contentNode.attrs\n  })) {\n    const g = e[a.contentType.name];\n    if (!g)\n      throw Error(\n        \"Block is of an unrecognized type: \" + a.contentType.name\n      );\n    const y = g.propSchema;\n    f in y && (l[f] = m);\n  }\n  const d = e[a.contentType.name], u = [];\n  for (let f = 0; f < a.numChildBlocks; f++)\n    u.push(\n      _(\n        t.lastChild.child(f),\n        e,\n        o,\n        i,\n        n\n      )\n    );\n  let p;\n  if (d.content === \"inline\")\n    p = ve(\n      a.contentNode,\n      o,\n      i\n    );\n  else if (d.content === \"table\")\n    p = Co(\n      a.contentNode,\n      o,\n      i\n    );\n  else if (d.content === \"none\")\n    p = void 0;\n  else\n    throw new I(d.content);\n  const h = {\n    id: s,\n    type: d.type,\n    props: l,\n    content: p,\n    children: u\n  };\n  return n == null || n.set(t, h), h;\n}\nfunction So(t) {\n  return t.document || window.document;\n}\nconst ot = (t, e, o, i, n) => {\n  if (!o.nodes[t.type.name])\n    throw new Error(\"Serializer is missing a node type: \" + t.type.name);\n  const { dom: r, contentDOM: a } = prosemirror_model__WEBPACK_IMPORTED_MODULE_20__.DOMSerializer.renderSpec(\n    So(e),\n    o.nodes[t.type.name](t)\n  );\n  if (a) {\n    if (t.isLeaf)\n      throw new RangeError(\"Content hole not allowed in a leaf node spec\");\n    if (t.type.name === \"blockContainer\") {\n      const s = t.childCount > 0 && t.firstChild.type.spec.group === \"blockContent\" ? t.firstChild : void 0, l = t.childCount > 0 && t.lastChild.type.spec.group === \"blockGroup\" ? t.lastChild : void 0;\n      if (s !== void 0) {\n        const d = i.blockImplementations[s.type.name].implementation, p = (n ? d.toExternalHTML : d.toInternalHTML)(\n          _(\n            t,\n            i.schema.blockSchema,\n            i.schema.inlineContentSchema,\n            i.schema.styleSchema,\n            i.blockCache\n          ),\n          i\n        );\n        if (p.contentDOM !== void 0) {\n          if (t.isLeaf)\n            throw new RangeError(\n              \"Content hole not allowed in a leaf node spec\"\n            );\n          p.contentDOM.appendChild(\n            o.serializeFragment(s.content, e)\n          );\n        }\n        a.appendChild(p.dom);\n      }\n      l !== void 0 && o.serializeFragment(\n        prosemirror_model__WEBPACK_IMPORTED_MODULE_20__.Fragment.from(l),\n        e,\n        a\n      );\n    } else\n      o.serializeFragment(t.content, e, a);\n  }\n  return r;\n}, it = (t, e) => {\n  const o = e.serializeFragment(t), i = document.createElement(\"div\");\n  return i.appendChild(o), i.innerHTML;\n};\nfunction Mo(t) {\n  const e = /* @__PURE__ */ new Set([\n    ...t.orderedListItemBlockTypes,\n    ...t.unorderedListItemBlockTypes\n  ]), o = (i) => {\n    var a;\n    if (i.children.length === 1 && ((a = i.children[0].properties) == null ? void 0 : a.dataNodeType) === \"blockGroup\") {\n      const s = i.children[0];\n      i.children.pop(), i.children.push(...s.children);\n    }\n    let n = i.children.length, r;\n    for (let s = 0; s < n; s++) {\n      const d = i.children[s].children[0], u = d.children[0], p = d.children.length === 2 ? d.children[1] : null, h = e.has(\n        u.properties.dataContentType\n      ), f = h ? t.orderedListItemBlockTypes.has(\n        u.properties.dataContentType\n      ) ? \"ol\" : \"ul\" : null;\n      if (p !== null && o(p), r && r.tagName !== f) {\n        i.children.splice(\n          s - r.children.length,\n          r.children.length,\n          r\n        );\n        const m = r.children.length - 1;\n        s -= m, n -= m, r = void 0;\n      }\n      if (h) {\n        r || (r = (0,hast_util_from_dom__WEBPACK_IMPORTED_MODULE_21__.fromDom)(\n          document.createElement(f)\n        ));\n        const m = (0,hast_util_from_dom__WEBPACK_IMPORTED_MODULE_21__.fromDom)(\n          document.createElement(\"li\")\n        );\n        m.children.push(u.children[0]), p !== null && m.children.push(...p.children), r.children.push(m);\n      } else if (p !== null) {\n        i.children.splice(s + 1, 0, ...p.children), i.children[s] = u.children[0];\n        const m = p.children.length;\n        s += m, n += m;\n      } else\n        i.children[s] = u.children[0];\n    }\n    r && i.children.splice(\n      n - r.children.length,\n      r.children.length,\n      r\n    );\n  };\n  return o;\n}\nconst ne = (t, e) => {\n  const o = prosemirror_model__WEBPACK_IMPORTED_MODULE_20__.DOMSerializer.fromSchema(t);\n  return o.serializeNodeInner = (i, n) => ot(i, n, o, e, !0), o.exportProseMirrorFragment = (i) => (0,unified__WEBPACK_IMPORTED_MODULE_22__.unified)().use(rehype_parse__WEBPACK_IMPORTED_MODULE_23__[\"default\"], { fragment: !0 }).use(Mo, {\n    orderedListItemBlockTypes: /* @__PURE__ */ new Set([\"numberedListItem\"]),\n    unorderedListItemBlockTypes: /* @__PURE__ */ new Set([\"bulletListItem\"])\n  }).use(rehype_stringify__WEBPACK_IMPORTED_MODULE_24__[\"default\"]).processSync(it(i, o)).value, o.exportBlocks = (i) => {\n    const n = i.map(\n      (a) => N(a, t, e.schema.styleSchema)\n    ), r = t.nodes.blockGroup.create(null, n);\n    return o.exportProseMirrorFragment(prosemirror_model__WEBPACK_IMPORTED_MODULE_20__.Fragment.from(r));\n  }, o;\n}, nt = (t, e) => {\n  const o = prosemirror_model__WEBPACK_IMPORTED_MODULE_20__.DOMSerializer.fromSchema(t);\n  return o.serializeNodeInner = (i, n) => ot(i, n, o, e, !1), o.serializeProseMirrorFragment = (i) => it(i, o), o.serializeBlocks = (i) => {\n    const n = i.map(\n      (a) => N(a, t, e.schema.styleSchema)\n    ), r = t.nodes.blockGroup.create(null, n);\n    return o.serializeProseMirrorFragment(prosemirror_model__WEBPACK_IMPORTED_MODULE_20__.Fragment.from(r));\n  }, o;\n}, To = () => typeof navigator < \"u\" && (/Mac/.test(navigator.platform) || /AppleWebKit/.test(navigator.userAgent) && /Mobile\\/\\w+/.test(navigator.userAgent));\nfunction R(t, e = \"Ctrl\") {\n  return To() ? t.replace(\"Mod\", \"⌘\") : t.replace(\"Mod\", e);\n}\nfunction D(...t) {\n  return t.filter((e) => e).join(\" \");\n}\nconst Er = () => /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\nfunction Y(t, e, o, i) {\n  const n = document.createElement(\"div\");\n  n.className = D(\n    \"bn-block-content\",\n    o.class\n  ), n.setAttribute(\"data-content-type\", t);\n  for (const [a, s] of Object.entries(o))\n    a !== \"class\" && n.setAttribute(a, s);\n  const r = document.createElement(e);\n  r.className = D(\n    \"bn-inline-content\",\n    i.class\n  );\n  for (const [a, s] of Object.entries(\n    i\n  ))\n    a !== \"class\" && r.setAttribute(a, s);\n  return n.appendChild(r), {\n    dom: n,\n    contentDOM: r\n  };\n}\nconst De = (t, e) => {\n  const o = N(\n    t,\n    e._tiptapEditor.schema,\n    e.schema.styleSchema\n  ).firstChild, i = e._tiptapEditor.schema.nodes[o.type.name].spec.toDOM;\n  if (i === void 0)\n    throw new Error(\n      \"This block has no default HTML serialization as its corresponding TipTap node doesn't implement `renderHTML`.\"\n    );\n  const n = i(o);\n  if (typeof n != \"object\" || !(\"dom\" in n))\n    throw new Error(\n      \"Cannot use this block's default HTML serialization as its corresponding TipTap node's `renderHTML` function does not return an object with the `dom` property.\"\n    );\n  return n;\n}, k = {\n  backgroundColor: {\n    default: \"default\"\n  },\n  textColor: {\n    default: \"default\"\n  },\n  textAlignment: {\n    default: \"left\",\n    values: [\"left\", \"center\", \"right\", \"justify\"]\n  }\n}, rt = [\"backgroundColor\", \"textColor\"];\nfunction oe(t) {\n  return \"data-\" + t.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n}\nfunction Cr(t) {\n  const e = t.split(\"/\");\n  return !e.length || // invalid?\n  e[e.length - 1] === \"\" ? t : e[e.length - 1];\n}\nfunction at(t) {\n  const e = {};\n  return Object.entries(t).filter(([o, i]) => !rt.includes(o)).forEach(([o, i]) => {\n    e[o] = {\n      default: i.default,\n      keepOnSplit: !0,\n      // Props are displayed in kebab-case as HTML attributes. If a prop's\n      // value is the same as its default, we don't display an HTML\n      // attribute for it.\n      parseHTML: (n) => {\n        const r = n.getAttribute(oe(o));\n        if (r === null)\n          return null;\n        if (typeof i.default == \"boolean\")\n          return r === \"true\" ? !0 : r === \"false\" ? !1 : null;\n        if (typeof i.default == \"number\") {\n          const a = parseFloat(r);\n          return !Number.isNaN(a) && Number.isFinite(a) ? a : null;\n        }\n        return r;\n      },\n      renderHTML: (n) => n[o] !== i.default ? {\n        [oe(o)]: n[o]\n      } : {}\n    };\n  }), e;\n}\nfunction Bo(t, e, o, i) {\n  if (typeof t == \"boolean\")\n    throw new Error(\n      \"Cannot find node position as getPos is a boolean, not a function.\"\n    );\n  const n = t(), a = o.state.doc.resolve(n).node().attrs.id;\n  if (!a)\n    throw new Error(\"Block doesn't have id\");\n  const s = e.getBlock(a);\n  if (s.type !== i)\n    throw new Error(\"Block type does not match\");\n  return s;\n}\nfunction pe(t, e, o, i, n = !1, r) {\n  const a = document.createElement(\"div\");\n  if (r !== void 0)\n    for (const [s, l] of Object.entries(r))\n      s !== \"class\" && a.setAttribute(s, l);\n  a.className = D(\n    \"bn-block-content\",\n    (r == null ? void 0 : r.class) || \"\"\n  ), a.setAttribute(\"data-content-type\", e);\n  for (const [s, l] of Object.entries(o))\n    !rt.includes(s) && l !== i[s].default && a.setAttribute(oe(s), l);\n  return n && a.setAttribute(\"data-file-block\", \"\"), a.appendChild(t.dom), t.contentDOM !== void 0 && (t.contentDOM.className = D(\n    \"bn-inline-content\",\n    t.contentDOM.className\n  ), t.contentDOM.setAttribute(\"data-editable\", \"\")), {\n    ...t,\n    dom: a\n  };\n}\nfunction G(t) {\n  return _tiptap_core__WEBPACK_IMPORTED_MODULE_17__.Node.create(t);\n}\nfunction st(t, e) {\n  return {\n    config: t,\n    implementation: e\n  };\n}\nfunction Q(t, e, o) {\n  return st(\n    {\n      type: t.name,\n      content: t.config.content === \"inline*\" ? \"inline\" : t.config.content === \"tableRow+\" ? \"table\" : \"none\",\n      propSchema: e\n    },\n    {\n      node: t,\n      requiredExtensions: o,\n      toInternalHTML: De,\n      toExternalHTML: De\n      // parse: () => undefined, // parse rules are in node already\n    }\n  );\n}\nfunction lt(t) {\n  return Object.fromEntries(\n    Object.entries(t).map(([e, o]) => [e, o.config])\n  );\n}\nfunction Lo(t, e) {\n  const o = [\n    {\n      tag: \"[data-content-type=\" + t.type + \"]\",\n      contentElement: \"[data-editable]\"\n    }\n  ];\n  return e && o.push({\n    tag: \"*\",\n    getAttrs(i) {\n      if (typeof i == \"string\")\n        return !1;\n      const n = e == null ? void 0 : e(i);\n      return n === void 0 ? !1 : n;\n    }\n  }), o;\n}\nfunction re(t, e) {\n  const o = G({\n    name: t.type,\n    content: t.content === \"inline\" ? \"inline*\" : \"\",\n    group: \"blockContent\",\n    selectable: !0,\n    addAttributes() {\n      return at(t.propSchema);\n    },\n    parseHTML() {\n      return Lo(t, e.parse);\n    },\n    renderHTML() {\n      const i = document.createElement(\"div\");\n      return i.setAttribute(\"data-tmp-placeholder\", \"true\"), {\n        dom: i\n      };\n    },\n    addNodeView() {\n      return ({ getPos: i }) => {\n        var l;\n        const n = this.options.editor, r = Bo(\n          i,\n          n,\n          this.editor,\n          t.type\n        ), a = ((l = this.options.domAttributes) == null ? void 0 : l.blockContent) || {}, s = e.render(r, n);\n        return pe(\n          s,\n          r.type,\n          r.props,\n          t.propSchema,\n          a\n        );\n      };\n    }\n  });\n  if (o.name !== t.type)\n    throw new Error(\n      \"Node name does not match block type. This is a bug in BlockNote.\"\n    );\n  return st(t, {\n    node: o,\n    toInternalHTML: (i, n) => {\n      var s;\n      const r = ((s = o.options.domAttributes) == null ? void 0 : s.blockContent) || {}, a = e.render(i, n);\n      return pe(\n        a,\n        i.type,\n        i.props,\n        t.propSchema,\n        t.isFileBlock,\n        r\n      );\n    },\n    toExternalHTML: (i, n) => {\n      var s, l;\n      const r = ((s = o.options.domAttributes) == null ? void 0 : s.blockContent) || {};\n      let a = (l = e.toExternalHTML) == null ? void 0 : l.call(\n        e,\n        i,\n        n\n      );\n      return a === void 0 && (a = e.render(i, n)), pe(\n        a,\n        i.type,\n        i.props,\n        t.propSchema,\n        r\n      );\n    }\n  });\n}\nfunction Io(t, e, o, i) {\n  return t.dom.setAttribute(\"data-inline-content-type\", e), Object.entries(o).filter(([n, r]) => r !== i[n].default).map(([n, r]) => [oe(n), r]).forEach(([n, r]) => t.dom.setAttribute(n, r)), t.contentDOM !== void 0 && t.contentDOM.setAttribute(\"data-editable\", \"\"), t;\n}\nfunction Ao(t) {\n  return {\n    Backspace: ({ editor: e }) => {\n      const o = e.state.selection.$from;\n      return e.state.selection.empty && o.node().type.name === t.type && o.parentOffset === 0;\n    }\n  };\n}\nfunction No(t, e) {\n  return {\n    config: t,\n    implementation: e\n  };\n}\nfunction Po(t, e) {\n  return No(\n    {\n      type: t.name,\n      propSchema: e,\n      content: t.config.content === \"inline*\" ? \"styled\" : \"none\"\n    },\n    {\n      node: t\n    }\n  );\n}\nfunction dt(t) {\n  return Object.fromEntries(\n    Object.entries(t).map(([e, o]) => [e, o.config])\n  );\n}\nfunction Ho(t) {\n  return [\n    {\n      tag: `[data-inline-content-type=\"${t.type}\"]`,\n      contentElement: (e) => {\n        const o = e;\n        return o.matches(\"[data-editable]\") ? o : o.querySelector(\"[data-editable]\") || o;\n      }\n    }\n  ];\n}\nfunction Sr(t, e) {\n  const o = _tiptap_core__WEBPACK_IMPORTED_MODULE_17__.Node.create({\n    name: t.type,\n    inline: !0,\n    group: \"inline\",\n    selectable: t.content === \"styled\",\n    atom: t.content === \"none\",\n    content: t.content === \"styled\" ? \"inline*\" : \"\",\n    addAttributes() {\n      return at(t.propSchema);\n    },\n    addKeyboardShortcuts() {\n      return Ao(t);\n    },\n    parseHTML() {\n      return Ho(t);\n    },\n    renderHTML({ node: i }) {\n      const n = this.options.editor, r = e.render(\n        tt(\n          i,\n          n.schema.inlineContentSchema,\n          n.schema.styleSchema\n        )\n        // TODO: fix cast\n      );\n      return Io(\n        r,\n        t.type,\n        i.attrs,\n        t.propSchema\n      );\n    }\n  });\n  return Po(\n    o,\n    t.propSchema\n  );\n}\nfunction Uo(t) {\n  return t === \"boolean\" ? {} : {\n    stringValue: {\n      default: void 0,\n      keepOnSplit: !0,\n      parseHTML: (e) => e.getAttribute(\"data-value\"),\n      renderHTML: (e) => e.stringValue !== void 0 ? {\n        \"data-value\": e.stringValue\n      } : {}\n    }\n  };\n}\nfunction Do(t, e, o, i) {\n  return t.dom.setAttribute(\"data-style-type\", e), i === \"string\" && t.dom.setAttribute(\"data-value\", o), t.contentDOM !== void 0 && t.contentDOM.setAttribute(\"data-editable\", \"\"), t;\n}\nfunction ct(t, e) {\n  return {\n    config: t,\n    implementation: e\n  };\n}\nfunction P(t, e) {\n  return ct(\n    {\n      type: t.name,\n      propSchema: e\n    },\n    {\n      mark: t\n    }\n  );\n}\nfunction ut(t) {\n  return Object.fromEntries(\n    Object.entries(t).map(([e, o]) => [e, o.config])\n  );\n}\nfunction Oo(t) {\n  return [\n    {\n      tag: `[data-style-type=\"${t.type}\"]`,\n      contentElement: (e) => {\n        const o = e;\n        return o.matches(\"[data-editable]\") ? o : o.querySelector(\"[data-editable]\") || o;\n      }\n    }\n  ];\n}\nfunction Mr(t, e) {\n  const o = _tiptap_core__WEBPACK_IMPORTED_MODULE_17__.Mark.create({\n    name: t.type,\n    addAttributes() {\n      return Uo(t.propSchema);\n    },\n    parseHTML() {\n      return Oo(t);\n    },\n    renderHTML({ mark: i }) {\n      let n;\n      if (t.propSchema === \"boolean\")\n        n = e.render();\n      else if (t.propSchema === \"string\")\n        n = e.render(i.attrs.stringValue);\n      else\n        throw new I(t.propSchema);\n      return Do(\n        n,\n        t.type,\n        i.attrs.stringValue,\n        t.propSchema\n      );\n    }\n  });\n  return ct(t, {\n    mark: o\n  });\n}\nconst ae = (t) => {\n  const e = document.createElement(\"div\");\n  e.className = \"bn-file-default-preview\";\n  const o = document.createElement(\"div\");\n  o.className = \"bn-file-default-preview-icon\", o.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M3 8L9.00319 2H19.9978C20.5513 2 21 2.45531 21 2.9918V21.0082C21 21.556 20.5551 22 20.0066 22H3.9934C3.44476 22 3 21.5501 3 20.9932V8ZM10 4V9H5V20H19V4H10Z\"></path></svg>';\n  const i = document.createElement(\"p\");\n  return i.className = \"bn-file-default-preview-name\", i.textContent = t.props.name || \"\", e.appendChild(o), e.appendChild(i), {\n    dom: e\n  };\n}, O = (t, e) => {\n  const o = document.createElement(\"div\");\n  o.className = \"bn-file-and-caption-wrapper\";\n  const i = document.createElement(\"p\");\n  return i.className = \"bn-file-caption\", i.textContent = t.props.caption, o.appendChild(e), o.appendChild(i), {\n    dom: o\n  };\n}, se = (t, e, o, i) => {\n  const n = document.createElement(\"div\");\n  n.className = \"bn-add-file-button\";\n  const r = document.createElement(\"div\");\n  r.className = \"bn-add-file-button-icon\", i ? r.appendChild(i) : r.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M3 8L9.00319 2H19.9978C20.5513 2 21 2.45531 21 2.9918V21.0082C21 21.556 20.5551 22 20.0066 22H3.9934C3.44476 22 3 21.5501 3 20.9932V8ZM10 4V9H5V20H19V4H10Z\"></path></svg>';\n  const a = document.createElement(\"p\");\n  a.className = \"bn-add-file-button-text\", a.innerHTML = o || e.dictionary.file_blocks.file.add_button_text;\n  const s = (d) => {\n    d.preventDefault();\n  }, l = () => {\n    e._tiptapEditor.view.dispatch(\n      e._tiptapEditor.state.tr.setMeta(e.filePanel.plugin, {\n        block: t\n      })\n    );\n  };\n  return n.appendChild(r), n.appendChild(a), n.addEventListener(\n    \"mousedown\",\n    s,\n    !0\n  ), n.addEventListener(\"click\", l, !0), {\n    dom: n,\n    destroy: () => {\n      n.removeEventListener(\n        \"mousedown\",\n        s,\n        !0\n      ), n.removeEventListener(\n        \"click\",\n        l,\n        !0\n      );\n    }\n  };\n}, Oe = (t) => ({ url: t.src || void 0 }), le = (t, e) => {\n  const o = t.querySelector(\n    e\n  );\n  if (!o)\n    return;\n  const i = t.querySelector(\"figcaption\"), n = (i == null ? void 0 : i.textContent) ?? void 0;\n  return { targetElement: o, caption: n };\n}, de = (t, e) => {\n  const o = document.createElement(\"div\"), i = document.createElement(\"p\");\n  return i.textContent = e, o.appendChild(t), o.appendChild(i), {\n    dom: o\n  };\n}, xe = (t, e) => {\n  const o = document.createElement(\"figure\"), i = document.createElement(\"figcaption\");\n  return i.textContent = e, o.appendChild(t), o.appendChild(i), { dom: o };\n}, pt = (t, e, o, i, n) => {\n  if (!t.props.previewWidth)\n    throw new Error(\"Block must have a `previewWidth` prop.\");\n  const r = document.createElement(\"div\");\n  r.className = \"bn-visual-media-wrapper\";\n  const a = document.createElement(\"div\");\n  a.className = \"bn-visual-media-resize-handle\", a.style.left = \"4px\";\n  const s = document.createElement(\"div\");\n  s.className = \"bn-visual-media-resize-handle\", s.style.right = \"4px\";\n  let l;\n  const d = (g) => {\n    if (!l) {\n      !e.isEditable && r.contains(a) && r.contains(s) && (r.removeChild(a), r.removeChild(s));\n      return;\n    }\n    let y;\n    t.props.textAlignment === \"center\" ? l.handleUsed === \"left\" ? y = l.initialWidth + (l.initialClientX - g.clientX) * 2 : y = l.initialWidth + (g.clientX - l.initialClientX) * 2 : l.handleUsed === \"left\" ? y = l.initialWidth + l.initialClientX - g.clientX : y = l.initialWidth + g.clientX - l.initialClientX;\n    const B = 64;\n    y < B ? n(B) : y > e.domElement.firstElementChild.clientWidth ? n(e.domElement.firstElementChild.clientWidth) : n(y);\n  }, u = (g) => {\n    (!g.target || !r.contains(g.target) || !e.isEditable) && r.contains(a) && r.contains(s) && (r.removeChild(a), r.removeChild(s)), l && (l = void 0, e.updateBlock(t, {\n      props: {\n        previewWidth: i()\n      }\n    }));\n  }, p = () => {\n    e.isEditable && (r.appendChild(a), r.appendChild(s));\n  }, h = (g) => {\n    g.relatedTarget === a || g.relatedTarget === s || l || e.isEditable && r.contains(a) && r.contains(s) && (r.removeChild(a), r.removeChild(s));\n  }, f = (g) => {\n    g.preventDefault(), r.appendChild(a), r.appendChild(s), l = {\n      handleUsed: \"left\",\n      initialWidth: t.props.previewWidth,\n      initialClientX: g.clientX\n    };\n  }, m = (g) => {\n    g.preventDefault(), r.appendChild(a), r.appendChild(s), l = {\n      handleUsed: \"right\",\n      initialWidth: t.props.previewWidth,\n      initialClientX: g.clientX\n    };\n  };\n  return r.appendChild(o), window.addEventListener(\"mousemove\", d), window.addEventListener(\"mouseup\", u), o.addEventListener(\"mouseenter\", p), o.addEventListener(\"mouseleave\", h), a.addEventListener(\n    \"mousedown\",\n    f\n  ), s.addEventListener(\n    \"mousedown\",\n    m\n  ), {\n    dom: r,\n    destroy: () => {\n      window.removeEventListener(\"mousemove\", d), window.removeEventListener(\"mouseup\", u), o.removeEventListener(\"mouseenter\", p), o.removeEventListener(\"mouseleave\", h), a.removeEventListener(\n        \"mousedown\",\n        f\n      ), s.removeEventListener(\n        \"mousedown\",\n        m\n      );\n    }\n  };\n}, Ro = {\n  backgroundColor: k.backgroundColor,\n  // File name.\n  name: {\n    default: \"\"\n  },\n  // File url.\n  url: {\n    default: \"\"\n  },\n  // File caption.\n  caption: {\n    default: \"\"\n  }\n}, Vo = {\n  type: \"file\",\n  propSchema: Ro,\n  content: \"none\",\n  isFileBlock: !0,\n  isFileBlockPlaceholder: (t) => !t.props.url\n}, jo = (t, e) => {\n  const o = document.createElement(\"div\");\n  if (o.className = \"bn-file-block-content-wrapper\", t.props.url === \"\") {\n    const i = se(t, e);\n    return o.appendChild(i.dom), {\n      dom: o,\n      destroy: i.destroy\n    };\n  } else {\n    const i = ae(t).dom, n = O(t, i);\n    return o.appendChild(n.dom), {\n      dom: o\n    };\n  }\n}, zo = (t) => {\n  if (t.tagName === \"EMBED\")\n    return Oe(t);\n  if (t.tagName === \"FIGURE\") {\n    const e = le(t, \"embed\");\n    if (!e)\n      return;\n    const { targetElement: o, caption: i } = e;\n    return {\n      ...Oe(o),\n      caption: i\n    };\n  }\n}, Fo = (t) => {\n  if (!t.props.url) {\n    const o = document.createElement(\"p\");\n    return o.textContent = \"Add file\", {\n      dom: o\n    };\n  }\n  const e = document.createElement(\"a\");\n  return e.href = t.props.url, e.textContent = t.props.name || t.props.url, t.props.caption ? de(e, t.props.caption) : {\n    dom: e\n  };\n}, Go = re(Vo, {\n  render: jo,\n  parse: zo,\n  toExternalHTML: Fo\n}), Re = (t) => {\n  const e = t.src || void 0, o = t.width || void 0;\n  return { url: e, previewWidth: o };\n}, Wo = {\n  textAlignment: k.textAlignment,\n  backgroundColor: k.backgroundColor,\n  // File name.\n  name: {\n    default: \"\"\n  },\n  // File url.\n  url: {\n    default: \"\"\n  },\n  // File caption.\n  caption: {\n    default: \"\"\n  },\n  showPreview: {\n    default: !0\n  },\n  // File preview width in px.\n  previewWidth: {\n    default: 512\n  }\n}, $o = {\n  type: \"image\",\n  propSchema: Wo,\n  content: \"none\",\n  isFileBlock: !0,\n  isFileBlockPlaceholder: (t) => !t.props.url,\n  fileBlockAcceptMimeTypes: [\"image/*\"]\n}, Ko = (t, e) => {\n  const o = document.createElement(\"div\");\n  if (o.className = \"bn-file-block-content-wrapper\", t.props.url === \"\") {\n    const i = document.createElement(\"div\");\n    i.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M5 11.1005L7 9.1005L12.5 14.6005L16 11.1005L19 14.1005V5H5V11.1005ZM4 3H20C20.5523 3 21 3.44772 21 4V20C21 20.5523 20.5523 21 20 21H4C3.44772 21 3 20.5523 3 20V4C3 3.44772 3.44772 3 4 3ZM15.5 10C14.6716 10 14 9.32843 14 8.5C14 7.67157 14.6716 7 15.5 7C16.3284 7 17 7.67157 17 8.5C17 9.32843 16.3284 10 15.5 10Z\"></path></svg>';\n    const n = se(\n      t,\n      e,\n      e.dictionary.file_blocks.image.add_button_text,\n      i.firstElementChild\n    );\n    return o.appendChild(n.dom), {\n      dom: o,\n      destroy: () => {\n        var r;\n        (r = n == null ? void 0 : n.destroy) == null || r.call(n);\n      }\n    };\n  } else if (t.props.showPreview) {\n    const i = document.createElement(\"img\");\n    i.className = \"bn-visual-media\", i.src = t.props.url, i.alt = t.props.name || t.props.caption || \"BlockNote image\", i.contentEditable = \"false\", i.draggable = !1, i.width = Math.min(\n      t.props.previewWidth,\n      e.domElement.firstElementChild.clientWidth\n    );\n    const n = pt(\n      t,\n      e,\n      i,\n      () => i.width,\n      (a) => i.width = a\n    ), r = O(t, n.dom);\n    return o.appendChild(r.dom), {\n      dom: o,\n      destroy: n.destroy\n    };\n  } else {\n    const i = ae(t).dom;\n    return {\n      dom: O(t, i).dom\n    };\n  }\n}, qo = (t) => {\n  if (t.tagName === \"IMG\")\n    return Re(t);\n  if (t.tagName === \"FIGURE\") {\n    const e = le(t, \"img\");\n    if (!e)\n      return;\n    const { targetElement: o, caption: i } = e;\n    return {\n      ...Re(o),\n      caption: i\n    };\n  }\n}, Xo = (t) => {\n  if (!t.props.url) {\n    const o = document.createElement(\"p\");\n    return o.textContent = \"Add image\", {\n      dom: o\n    };\n  }\n  let e;\n  return t.props.showPreview ? (e = document.createElement(\"img\"), e.src = t.props.url, e.alt = t.props.name || t.props.caption || \"BlockNote image\", e.width = t.props.previewWidth) : (e = document.createElement(\"a\"), e.href = t.props.url, e.textContent = t.props.name || t.props.url), t.props.caption ? t.props.showPreview ? xe(e, t.props.caption) : de(e, t.props.caption) : {\n    dom: e\n  };\n}, Zo = re($o, {\n  render: Ko,\n  parse: qo,\n  toExternalHTML: Xo\n}), Ve = (t) => {\n  const e = t.src || void 0, o = t.width || void 0;\n  return { url: e, previewWidth: o };\n}, Jo = {\n  textAlignment: k.textAlignment,\n  backgroundColor: k.backgroundColor,\n  // File name.\n  name: {\n    default: \"\"\n  },\n  // File url.\n  url: {\n    default: \"\"\n  },\n  // File caption.\n  caption: {\n    default: \"\"\n  },\n  showPreview: {\n    default: !0\n  },\n  // File preview width in px.\n  previewWidth: {\n    default: 512\n  }\n}, Yo = {\n  type: \"video\",\n  propSchema: Jo,\n  content: \"none\",\n  isFileBlock: !0,\n  isFileBlockPlaceholder: (t) => !t.props.url,\n  fileBlockAcceptMimeTypes: [\"video/*\"]\n}, Qo = (t, e) => {\n  const o = document.createElement(\"div\");\n  if (o.className = \"bn-file-block-content-wrapper\", t.props.url === \"\") {\n    const i = document.createElement(\"div\");\n    i.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M2 3.9934C2 3.44476 2.45531 3 2.9918 3H21.0082C21.556 3 22 3.44495 22 3.9934V20.0066C22 20.5552 21.5447 21 21.0082 21H2.9918C2.44405 21 2 20.5551 2 20.0066V3.9934ZM8 5V19H16V5H8ZM4 5V7H6V5H4ZM18 5V7H20V5H18ZM4 9V11H6V9H4ZM18 9V11H20V9H18ZM4 13V15H6V13H4ZM18 13V15H20V13H18ZM4 17V19H6V17H4ZM18 17V19H20V17H18Z\"></path></svg>';\n    const n = se(\n      t,\n      e,\n      e.dictionary.file_blocks.video.add_button_text,\n      i.firstElementChild\n    );\n    return o.appendChild(n.dom), {\n      dom: o,\n      destroy: () => {\n        var r;\n        (r = n == null ? void 0 : n.destroy) == null || r.call(n);\n      }\n    };\n  } else if (t.props.showPreview) {\n    const i = document.createElement(\"video\");\n    i.className = \"bn-visual-media\", i.src = t.props.url, i.controls = !0, i.contentEditable = \"false\", i.draggable = !1, i.width = Math.min(\n      t.props.previewWidth,\n      e.domElement.firstElementChild.clientWidth\n    );\n    const n = pt(\n      t,\n      e,\n      i,\n      () => i.width,\n      (a) => i.width = a\n    ), r = O(t, n.dom);\n    return o.appendChild(r.dom), {\n      dom: o,\n      destroy: n.destroy\n    };\n  } else {\n    const i = ae(t).dom;\n    return {\n      dom: O(t, i).dom\n    };\n  }\n}, ei = (t) => {\n  if (t.tagName === \"VIDEO\")\n    return Ve(t);\n  if (t.tagName === \"FIGURE\") {\n    const e = le(t, \"video\");\n    if (!e)\n      return;\n    const { targetElement: o, caption: i } = e;\n    return {\n      ...Ve(o),\n      caption: i\n    };\n  }\n}, ti = (t) => {\n  if (!t.props.url) {\n    const o = document.createElement(\"p\");\n    return o.textContent = \"Add video\", {\n      dom: o\n    };\n  }\n  let e;\n  return t.props.showPreview ? (e = document.createElement(\"video\"), e.src = t.props.url, e.width = t.props.previewWidth) : (e = document.createElement(\"a\"), e.href = t.props.url, e.textContent = t.props.name || t.props.url), t.props.caption ? t.props.showPreview ? xe(e, t.props.caption) : de(e, t.props.caption) : {\n    dom: e\n  };\n}, oi = re(Yo, {\n  render: Qo,\n  parse: ei,\n  toExternalHTML: ti\n}), je = (t) => ({ url: t.src || void 0 }), ii = {\n  backgroundColor: k.backgroundColor,\n  // File name.\n  name: {\n    default: \"\"\n  },\n  // File url.\n  url: {\n    default: \"\"\n  },\n  // File caption.\n  caption: {\n    default: \"\"\n  },\n  showPreview: {\n    default: !0\n  }\n}, ni = {\n  type: \"audio\",\n  propSchema: ii,\n  content: \"none\",\n  isFileBlock: !0,\n  isFileBlockPlaceholder: (t) => !t.props.url,\n  fileBlockAcceptMimeTypes: [\"audio/*\"]\n}, ri = (t, e) => {\n  const o = document.createElement(\"div\");\n  if (o.className = \"bn-file-block-content-wrapper\", t.props.url === \"\") {\n    const i = document.createElement(\"div\");\n    i.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M2 16.0001H5.88889L11.1834 20.3319C11.2727 20.405 11.3846 20.4449 11.5 20.4449C11.7761 20.4449 12 20.2211 12 19.9449V4.05519C12 3.93977 11.9601 3.8279 11.887 3.73857C11.7121 3.52485 11.3971 3.49335 11.1834 3.66821L5.88889 8.00007H2C1.44772 8.00007 1 8.44778 1 9.00007V15.0001C1 15.5524 1.44772 16.0001 2 16.0001ZM23 12C23 15.292 21.5539 18.2463 19.2622 20.2622L17.8445 18.8444C19.7758 17.1937 21 14.7398 21 12C21 9.26016 19.7758 6.80629 17.8445 5.15557L19.2622 3.73779C21.5539 5.75368 23 8.70795 23 12ZM18 12C18 10.0883 17.106 8.38548 15.7133 7.28673L14.2842 8.71584C15.3213 9.43855 16 10.64 16 12C16 13.36 15.3213 14.5614 14.2842 15.2841L15.7133 16.7132C17.106 15.6145 18 13.9116 18 12Z\"></path></svg>';\n    const n = se(\n      t,\n      e,\n      e.dictionary.file_blocks.audio.add_button_text,\n      i.firstElementChild\n    );\n    return o.appendChild(n.dom), {\n      dom: o,\n      destroy: () => {\n        var r;\n        (r = n == null ? void 0 : n.destroy) == null || r.call(n);\n      }\n    };\n  } else if (t.props.showPreview) {\n    const i = document.createElement(\"audio\");\n    i.className = \"bn-audio\", i.src = t.props.url, i.controls = !0, i.contentEditable = \"false\", i.draggable = !1;\n    const n = O(t, i);\n    return o.appendChild(n.dom), {\n      dom: o\n    };\n  } else {\n    const i = ae(t).dom;\n    return {\n      dom: O(t, i).dom\n    };\n  }\n}, ai = (t) => {\n  if (t.tagName === \"AUDIO\")\n    return je(t);\n  if (t.tagName === \"FIGURE\") {\n    const e = le(t, \"audio\");\n    if (!e)\n      return;\n    const { targetElement: o, caption: i } = e;\n    return {\n      ...je(o),\n      caption: i\n    };\n  }\n}, si = (t) => {\n  if (!t.props.url) {\n    const o = document.createElement(\"p\");\n    return o.textContent = \"Add audio\", {\n      dom: o\n    };\n  }\n  let e;\n  return t.props.showPreview ? (e = document.createElement(\"audio\"), e.src = t.props.url) : (e = document.createElement(\"a\"), e.href = t.props.url, e.textContent = t.props.name || t.props.url), t.props.caption ? t.props.showPreview ? xe(e, t.props.caption) : de(e, t.props.caption) : {\n    dom: e\n  };\n}, li = re(ni, {\n  render: ri,\n  parse: ai,\n  toExternalHTML: si\n}), Tr = async (t) => {\n  const e = new FormData();\n  return e.append(\"file\", t), (await (await fetch(\"https://tmpfiles.org/api/v1/upload\", {\n    method: \"POST\",\n    body: e\n  })).json()).data.url.replace(\n    \"tmpfiles.org/\",\n    \"tmpfiles.org/dl/\"\n  );\n}, di = _tiptap_core__WEBPACK_IMPORTED_MODULE_17__.Mark.create({\n  name: \"backgroundColor\",\n  addAttributes() {\n    return {\n      stringValue: {\n        default: void 0,\n        parseHTML: (t) => t.getAttribute(\"data-background-color\"),\n        renderHTML: (t) => ({\n          \"data-background-color\": t.stringValue\n        })\n      }\n    };\n  },\n  parseHTML() {\n    return [\n      {\n        tag: \"span\",\n        getAttrs: (t) => typeof t == \"string\" ? !1 : t.hasAttribute(\"data-background-color\") ? {\n          stringValue: t.getAttribute(\"data-background-color\")\n        } : !1\n      }\n    ];\n  },\n  renderHTML({ HTMLAttributes: t }) {\n    return [\"span\", t, 0];\n  }\n}), ci = P(\n  di,\n  \"string\"\n), ui = _tiptap_core__WEBPACK_IMPORTED_MODULE_17__.Mark.create({\n  name: \"textColor\",\n  addAttributes() {\n    return {\n      stringValue: {\n        default: void 0,\n        parseHTML: (t) => t.getAttribute(\"data-text-color\"),\n        renderHTML: (t) => ({\n          \"data-text-color\": t.stringValue\n        })\n      }\n    };\n  },\n  parseHTML() {\n    return [\n      {\n        tag: \"span\",\n        getAttrs: (t) => typeof t == \"string\" ? !1 : t.hasAttribute(\"data-text-color\") ? { stringValue: t.getAttribute(\"data-text-color\") } : !1\n      }\n    ];\n  },\n  renderHTML({ HTMLAttributes: t }) {\n    return [\"span\", t, 0];\n  }\n}), pi = P(ui, \"string\"), L = (t) => {\n  const { contentType: e } = b(\n    t.state.doc,\n    t.state.selection.from\n  );\n  return e.spec.content;\n}, hi = {\n  ...k,\n  level: { default: 1, values: [1, 2, 3] }\n}, mi = G({\n  name: \"heading\",\n  content: \"inline*\",\n  group: \"blockContent\",\n  addAttributes() {\n    return {\n      level: {\n        default: 1,\n        // instead of \"level\" attributes, use \"data-level\"\n        parseHTML: (t) => {\n          const e = t.getAttribute(\"data-level\"), o = parseInt(e);\n          if (isFinite(o))\n            return o;\n        },\n        renderHTML: (t) => ({\n          \"data-level\": t.level.toString()\n        })\n      }\n    };\n  },\n  addInputRules() {\n    return [\n      ...[1, 2, 3].map((t) => new _tiptap_core__WEBPACK_IMPORTED_MODULE_17__.InputRule({\n        find: new RegExp(`^(#{${t}})\\\\s$`),\n        handler: ({ state: e, chain: o, range: i }) => {\n          L(this.editor) === \"inline*\" && o().BNUpdateBlock(e.selection.from, {\n            type: \"heading\",\n            props: {\n              level: t\n            }\n          }).deleteRange({ from: i.from, to: i.to });\n        }\n      }))\n    ];\n  },\n  addKeyboardShortcuts() {\n    return {\n      \"Mod-Alt-1\": () => L(this.editor) !== \"inline*\" ? !0 : this.editor.commands.BNUpdateBlock(\n        this.editor.state.selection.anchor,\n        {\n          type: \"heading\",\n          props: {\n            level: 1\n          }\n        }\n      ),\n      \"Mod-Alt-2\": () => L(this.editor) !== \"inline*\" ? !0 : this.editor.commands.BNUpdateBlock(\n        this.editor.state.selection.anchor,\n        {\n          type: \"heading\",\n          props: {\n            level: 2\n          }\n        }\n      ),\n      \"Mod-Alt-3\": () => L(this.editor) !== \"inline*\" ? !0 : this.editor.commands.BNUpdateBlock(\n        this.editor.state.selection.anchor,\n        {\n          type: \"heading\",\n          props: {\n            level: 3\n          }\n        }\n      )\n    };\n  },\n  parseHTML() {\n    return [\n      {\n        tag: \"div[data-content-type=\" + this.name + \"]\",\n        getAttrs: (t) => typeof t == \"string\" ? !1 : {\n          level: t.getAttribute(\"data-level\")\n        }\n      },\n      {\n        tag: \"h1\",\n        attrs: { level: 1 },\n        node: \"heading\"\n      },\n      {\n        tag: \"h2\",\n        attrs: { level: 2 },\n        node: \"heading\"\n      },\n      {\n        tag: \"h3\",\n        attrs: { level: 3 },\n        node: \"heading\"\n      }\n    ];\n  },\n  renderHTML({ node: t, HTMLAttributes: e }) {\n    var o, i;\n    return Y(\n      this.name,\n      `h${t.attrs.level}`,\n      {\n        ...((o = this.options.domAttributes) == null ? void 0 : o.blockContent) || {},\n        ...e\n      },\n      ((i = this.options.domAttributes) == null ? void 0 : i.inlineContent) || {}\n    );\n  }\n}), fi = Q(\n  mi,\n  hi\n), Ee = (t) => {\n  const { node: e, contentType: o } = b(\n    t.state.doc,\n    t.state.selection.from\n  ), i = t.state.selection.anchor === t.state.selection.head;\n  return !(o.name === \"bulletListItem\" || o.name === \"numberedListItem\") || !i ? !1 : t.commands.first(({ state: n, chain: r, commands: a }) => [\n    () => (\n      // Changes list item block to a text block if the content is empty.\n      a.command(() => e.textContent.length === 0 ? a.BNUpdateBlock(n.selection.from, {\n        type: \"paragraph\",\n        props: {}\n      }) : !1)\n    ),\n    () => (\n      // Splits the current block, moving content inside that's after the cursor to a new block of the same type\n      // below.\n      a.command(() => e.textContent.length > 0 ? (r().deleteSelection().BNSplitBlock(n.selection.from, !0).run(), !0) : !1)\n    )\n  ]);\n}, gi = {\n  ...k\n}, bi = G({\n  name: \"bulletListItem\",\n  content: \"inline*\",\n  group: \"blockContent\",\n  addInputRules() {\n    return [\n      // Creates an unordered list when starting with \"-\", \"+\", or \"*\".\n      new _tiptap_core__WEBPACK_IMPORTED_MODULE_17__.InputRule({\n        find: new RegExp(\"^[-+*]\\\\s$\"),\n        handler: ({ state: t, chain: e, range: o }) => {\n          L(this.editor) === \"inline*\" && e().BNUpdateBlock(t.selection.from, {\n            type: \"bulletListItem\",\n            props: {}\n          }).deleteRange({ from: o.from, to: o.to });\n        }\n      })\n    ];\n  },\n  addKeyboardShortcuts() {\n    return {\n      Enter: () => Ee(this.editor),\n      \"Mod-Shift-8\": () => L(this.editor) !== \"inline*\" ? !0 : this.editor.commands.BNUpdateBlock(\n        this.editor.state.selection.anchor,\n        {\n          type: \"bulletListItem\",\n          props: {}\n        }\n      )\n    };\n  },\n  parseHTML() {\n    return [\n      // Case for regular HTML list structure.\n      {\n        tag: \"div[data-content-type=\" + this.name + \"]\"\n        // TODO: remove if we can't come up with test case that needs this\n      },\n      {\n        tag: \"li\",\n        getAttrs: (t) => {\n          if (typeof t == \"string\")\n            return !1;\n          const e = t.parentElement;\n          return e === null ? !1 : e.tagName === \"UL\" || e.tagName === \"DIV\" && e.parentElement.tagName === \"UL\" ? {} : !1;\n        },\n        node: \"bulletListItem\"\n      },\n      // Case for BlockNote list structure.\n      {\n        tag: \"p\",\n        getAttrs: (t) => {\n          if (typeof t == \"string\")\n            return !1;\n          const e = t.parentElement;\n          return e === null ? !1 : e.getAttribute(\"data-content-type\") === \"bulletListItem\" ? {} : !1;\n        },\n        priority: 300,\n        node: \"bulletListItem\"\n      }\n    ];\n  },\n  renderHTML({ HTMLAttributes: t }) {\n    var e, o;\n    return Y(\n      this.name,\n      // We use a <p> tag, because for <li> tags we'd need a <ul> element to put\n      // them in to be semantically correct, which we can't have due to the\n      // schema.\n      \"p\",\n      {\n        ...((e = this.options.domAttributes) == null ? void 0 : e.blockContent) || {},\n        ...t\n      },\n      ((o = this.options.domAttributes) == null ? void 0 : o.inlineContent) || {}\n    );\n  }\n}), ki = Q(\n  bi,\n  gi\n), yi = new prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.PluginKey(\"numbered-list-indexing\"), _i = () => new prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.Plugin({\n  key: yi,\n  appendTransaction: (t, e, o) => {\n    const i = o.tr;\n    i.setMeta(\"numberedListIndexing\", !0);\n    let n = !1;\n    return o.doc.descendants((r, a) => {\n      if (r.type.name === \"blockContainer\" && r.firstChild.type.name === \"numberedListItem\") {\n        let s = \"1\";\n        const l = a === 1, d = b(i.doc, a + 1);\n        if (d === void 0)\n          return;\n        if (!l) {\n          const h = b(i.doc, a - 2);\n          if (h === void 0)\n            return;\n          if (!(d.depth !== h.depth)) {\n            const m = h.contentNode;\n            if (h.contentType.name === \"numberedListItem\") {\n              const B = m.attrs.index;\n              s = (parseInt(B) + 1).toString();\n            }\n          }\n        }\n        d.contentNode.attrs.index !== s && (n = !0, i.setNodeMarkup(a + 1, void 0, {\n          index: s\n        }));\n      }\n    }), n ? i : null;\n  }\n}), wi = {\n  ...k\n}, vi = G({\n  name: \"numberedListItem\",\n  content: \"inline*\",\n  group: \"blockContent\",\n  addAttributes() {\n    return {\n      index: {\n        default: null,\n        parseHTML: (t) => t.getAttribute(\"data-index\"),\n        renderHTML: (t) => ({\n          \"data-index\": t.index\n        })\n      }\n    };\n  },\n  addInputRules() {\n    return [\n      // Creates an ordered list when starting with \"1.\".\n      new _tiptap_core__WEBPACK_IMPORTED_MODULE_17__.InputRule({\n        find: new RegExp(\"^1\\\\.\\\\s$\"),\n        handler: ({ state: t, chain: e, range: o }) => {\n          L(this.editor) === \"inline*\" && e().BNUpdateBlock(t.selection.from, {\n            type: \"numberedListItem\",\n            props: {}\n          }).deleteRange({ from: o.from, to: o.to });\n        }\n      })\n    ];\n  },\n  addKeyboardShortcuts() {\n    return {\n      Enter: () => Ee(this.editor),\n      \"Mod-Shift-7\": () => L(this.editor) !== \"inline*\" ? !0 : this.editor.commands.BNUpdateBlock(\n        this.editor.state.selection.anchor,\n        {\n          type: \"numberedListItem\",\n          props: {}\n        }\n      )\n    };\n  },\n  addProseMirrorPlugins() {\n    return [_i()];\n  },\n  parseHTML() {\n    return [\n      {\n        tag: \"div[data-content-type=\" + this.name + \"]\"\n        // TODO: remove if we can't come up with test case that needs this\n      },\n      // Case for regular HTML list structure.\n      // (e.g.: when pasting from other apps)\n      {\n        tag: \"li\",\n        getAttrs: (t) => {\n          if (typeof t == \"string\")\n            return !1;\n          const e = t.parentElement;\n          return e === null ? !1 : e.tagName === \"OL\" || e.tagName === \"DIV\" && e.parentElement.tagName === \"OL\" ? {} : !1;\n        },\n        node: \"numberedListItem\"\n      },\n      // Case for BlockNote list structure.\n      // (e.g.: when pasting from blocknote)\n      {\n        tag: \"p\",\n        getAttrs: (t) => {\n          if (typeof t == \"string\")\n            return !1;\n          const e = t.parentElement;\n          return e === null ? !1 : e.getAttribute(\"data-content-type\") === \"numberedListItem\" ? {} : !1;\n        },\n        priority: 300,\n        node: \"numberedListItem\"\n      }\n    ];\n  },\n  renderHTML({ HTMLAttributes: t }) {\n    var e, o;\n    return Y(\n      this.name,\n      // We use a <p> tag, because for <li> tags we'd need an <ol> element to\n      // put them in to be semantically correct, which we can't have due to the\n      // schema.\n      \"p\",\n      {\n        ...((e = this.options.domAttributes) == null ? void 0 : e.blockContent) || {},\n        ...t\n      },\n      ((o = this.options.domAttributes) == null ? void 0 : o.inlineContent) || {}\n    );\n  }\n}), xi = Q(\n  vi,\n  wi\n), Ei = {\n  ...k\n}, Ci = G({\n  name: \"paragraph\",\n  content: \"inline*\",\n  group: \"blockContent\",\n  addKeyboardShortcuts() {\n    return {\n      Enter: () => Ee(this.editor),\n      \"Mod-Alt-0\": () => L(this.editor) !== \"inline*\" ? !0 : this.editor.commands.BNUpdateBlock(\n        this.editor.state.selection.anchor,\n        {\n          type: \"paragraph\",\n          props: {}\n        }\n      )\n    };\n  },\n  parseHTML() {\n    return [\n      { tag: \"div[data-content-type=\" + this.name + \"]\" },\n      {\n        tag: \"p\",\n        priority: 200,\n        node: \"paragraph\"\n      }\n    ];\n  },\n  renderHTML({ HTMLAttributes: t }) {\n    var e, o;\n    return Y(\n      this.name,\n      \"p\",\n      {\n        ...((e = this.options.domAttributes) == null ? void 0 : e.blockContent) || {},\n        ...t\n      },\n      ((o = this.options.domAttributes) == null ? void 0 : o.inlineContent) || {}\n    );\n  }\n}), Si = Q(\n  Ci,\n  Ei\n), Mi = _tiptap_core__WEBPACK_IMPORTED_MODULE_17__.Extension.create({\n  name: \"BlockNoteTableExtension\",\n  addProseMirrorPlugins: () => [\n    (0,prosemirror_tables__WEBPACK_IMPORTED_MODULE_8__.columnResizing)({\n      cellMinWidth: 100\n    }),\n    (0,prosemirror_tables__WEBPACK_IMPORTED_MODULE_8__.tableEditing)()\n  ],\n  addKeyboardShortcuts() {\n    return {\n      // Makes enter create a new line within the cell.\n      Enter: () => this.editor.state.selection.empty && this.editor.state.selection.$head.parent.type.name === \"tableParagraph\" ? (this.editor.commands.setHardBreak(), !0) : !1,\n      // Ensures that backspace won't delete the table if the text cursor is at\n      // the start of a cell and the selection is empty.\n      Backspace: () => {\n        const t = this.editor.state.selection, e = t.empty, o = t.$head.parentOffset === 0, i = t.$head.node().type.name === \"tableParagraph\";\n        return e && o && i;\n      }\n    };\n  },\n  extendNodeSchema(t) {\n    const e = {\n      name: t.name,\n      options: t.options,\n      storage: t.storage\n    };\n    return {\n      tableRole: (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_17__.callOrReturn)(\n        (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_17__.getExtensionField)(t, \"tableRole\", e)\n      )\n    };\n  }\n}), Ti = {\n  ...k\n}, Bi = G({\n  name: \"table\",\n  content: \"tableRow+\",\n  group: \"blockContent\",\n  tableRole: \"table\",\n  isolating: !0,\n  parseHTML() {\n    return [{ tag: \"table\" }];\n  },\n  renderHTML({ HTMLAttributes: t }) {\n    var e, o;\n    return Y(\n      this.name,\n      \"table\",\n      {\n        ...((e = this.options.domAttributes) == null ? void 0 : e.blockContent) || {},\n        ...t\n      },\n      ((o = this.options.domAttributes) == null ? void 0 : o.inlineContent) || {}\n    );\n  }\n}), Li = _tiptap_core__WEBPACK_IMPORTED_MODULE_17__.Node.create({\n  name: \"tableParagraph\",\n  group: \"tableContent\",\n  content: \"inline*\",\n  parseHTML() {\n    return [{ tag: \"p\" }];\n  },\n  renderHTML({ HTMLAttributes: t }) {\n    return [\n      \"p\",\n      (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_17__.mergeAttributes)(this.options.HTMLAttributes, t),\n      0\n    ];\n  }\n}), Ii = Q(\n  Bi,\n  Ti,\n  [\n    Mi,\n    Li,\n    _tiptap_extension_table_header__WEBPACK_IMPORTED_MODULE_6__.TableHeader.extend({\n      content: \"tableContent\"\n    }),\n    _tiptap_extension_table_cell__WEBPACK_IMPORTED_MODULE_5__.TableCell.extend({\n      content: \"tableContent\"\n    }),\n    _tiptap_extension_table_row__WEBPACK_IMPORTED_MODULE_7__.TableRow\n  ]\n), ht = {\n  paragraph: Si,\n  heading: fi,\n  bulletListItem: ki,\n  numberedListItem: xi,\n  file: Go,\n  image: Zo,\n  video: oi,\n  audio: li,\n  table: Ii\n}, Ai = lt(ht), mt = {\n  bold: P(_tiptap_extension_bold__WEBPACK_IMPORTED_MODULE_0__[\"default\"], \"boolean\"),\n  italic: P(_tiptap_extension_italic__WEBPACK_IMPORTED_MODULE_2__[\"default\"], \"boolean\"),\n  underline: P(_tiptap_extension_underline__WEBPACK_IMPORTED_MODULE_4__[\"default\"], \"boolean\"),\n  strike: P(_tiptap_extension_strike__WEBPACK_IMPORTED_MODULE_3__[\"default\"], \"boolean\"),\n  code: P(_tiptap_extension_code__WEBPACK_IMPORTED_MODULE_1__[\"default\"], \"boolean\"),\n  textColor: pi,\n  backgroundColor: ci\n}, Br = ut(mt), ft = {\n  text: { config: \"text\", implementation: {} },\n  link: { config: \"link\", implementation: {} }\n}, Lr = dt(\n  ft\n);\nfunction S(t, e) {\n  return t in e.schema.blockSchema && e.schema.blockSchema[t] === Ai[t];\n}\nfunction Ir(t, e, o) {\n  return e.type === t && e.type in o.schema.blockSchema && S(e.type, o);\n}\nfunction Ar(t, e) {\n  return t.type in e.schema.blockSchema && e.schema.blockSchema[t.type].isFileBlock || !1;\n}\nfunction Nr(t, e) {\n  return t.type in e.schema.blockSchema && e.schema.blockSchema[t.type].isFileBlock && \"showPreview\" in e.schema.blockSchema[t.type].propSchema || !1;\n}\nfunction Pr(t, e) {\n  const o = e.schema.blockSchema[t.type];\n  return o.isFileBlock && o.isFileBlockPlaceholder(t);\n}\nfunction Ni(t, e, o) {\n  return e in o.schema.blockSchema && t in o.schema.blockSchema[e].propSchema && o.schema.blockSchema[e].propSchema[t] === k[t];\n}\nfunction Hr(t, e, o) {\n  return Ni(t, e.type, o);\n}\nfunction Ce(t, e) {\n  let o, i;\n  if (e.firstChild.descendants((n, r) => o ? !1 : n.type.name !== \"blockContainer\" || n.attrs.id !== t ? !0 : (o = n, i = r + 1, !1)), o === void 0 || i === void 0)\n    throw Error(\"Could not find block in the editor with matching ID.\");\n  return {\n    node: o,\n    posBeforeNode: i\n  };\n}\nfunction Pi(t, e, o = \"before\", i) {\n  const n = i._tiptapEditor, r = typeof e == \"string\" ? e : e.id, a = [];\n  for (const u of t)\n    a.push(\n      N(u, n.schema, i.schema.styleSchema)\n    );\n  const { node: s, posBeforeNode: l } = Ce(r, n.state.doc);\n  if (o === \"before\" && n.view.dispatch(\n    n.state.tr.insert(l, a)\n  ), o === \"after\" && n.view.dispatch(\n    n.state.tr.insert(l + s.nodeSize, a)\n  ), o === \"nested\" && s.childCount < 2) {\n    const u = n.state.schema.nodes.blockGroup.create(\n      {},\n      a\n    );\n    n.view.dispatch(\n      n.state.tr.insert(\n        l + s.firstChild.nodeSize + 1,\n        u\n      )\n    );\n  }\n  const d = [];\n  for (const u of a)\n    d.push(\n      _(\n        u,\n        i.schema.blockSchema,\n        i.schema.inlineContentSchema,\n        i.schema.styleSchema,\n        i.blockCache\n      )\n    );\n  return d;\n}\nfunction Hi(t, e, o) {\n  const i = o._tiptapEditor, n = typeof t == \"string\" ? t : t.id, { posBeforeNode: r } = Ce(n, i.state.doc);\n  i.commands.BNUpdateBlock(r + 1, e);\n  const a = i.state.doc.resolve(r + 1).node();\n  return _(\n    a,\n    o.schema.blockSchema,\n    o.schema.inlineContentSchema,\n    o.schema.styleSchema,\n    o.blockCache\n  );\n}\nfunction gt(t, e, o) {\n  const i = e._tiptapEditor, n = i.state.tr, r = new Set(\n    t.map(\n      (l) => typeof l == \"string\" ? l : l.id\n    )\n  ), a = [];\n  let s = 0;\n  if (i.state.doc.descendants((l, d) => {\n    if (r.size === 0)\n      return !1;\n    if (l.type.name !== \"blockContainer\" || !r.has(l.attrs.id))\n      return !0;\n    a.push(\n      _(\n        l,\n        e.schema.blockSchema,\n        e.schema.inlineContentSchema,\n        e.schema.styleSchema,\n        e.blockCache\n      )\n    ), r.delete(l.attrs.id), s = (o == null ? void 0 : o(l, d, n, s)) || s;\n    const u = n.doc.nodeSize;\n    n.delete(d - s - 1, d - s + l.nodeSize + 1);\n    const p = n.doc.nodeSize;\n    return s += u - p, !1;\n  }), r.size > 0) {\n    const l = [...r].join(`\n`);\n    throw Error(\n      \"Blocks with the following IDs could not be found in the editor: \" + l\n    );\n  }\n  return i.view.dispatch(n), a;\n}\nfunction Ui(t, e) {\n  return gt(t, e);\n}\nfunction Di(t, e, o) {\n  const i = o._tiptapEditor, n = [];\n  for (const l of e)\n    n.push(\n      N(l, i.schema, o.schema.styleSchema)\n    );\n  const r = typeof t[0] == \"string\" ? t[0] : t[0].id, a = gt(\n    t,\n    o,\n    (l, d, u, p) => {\n      if (l.attrs.id === r) {\n        const h = u.doc.nodeSize;\n        u.insert(d, n);\n        const f = u.doc.nodeSize;\n        return p + h - f;\n      }\n      return p;\n    }\n  ), s = [];\n  for (const l of n)\n    s.push(\n      _(\n        l,\n        o.schema.blockSchema,\n        o.schema.inlineContentSchema,\n        o.schema.styleSchema,\n        o.blockCache\n      )\n    );\n  return { insertedBlocks: s, removedBlocks: a };\n}\nfunction Oi(t, e, o, i = { updateSelection: !0 }) {\n  const n = o._tiptapEditor, r = n.state.tr;\n  let { from: a, to: s } = typeof t == \"number\" ? { from: t, to: t } : { from: t.from, to: t.to }, l = !0, d = !0, u = \"\";\n  if (e.forEach((p) => {\n    p.check(), l && p.isText && p.marks.length === 0 ? u += p.text : l = !1, d = d ? p.isBlock : !1;\n  }), a === s && d) {\n    const { parent: p } = r.doc.resolve(a);\n    p.isTextblock && !p.type.spec.code && !p.childCount && (a -= 1, s += 1);\n  }\n  return l ? r.insertText(u, a, s) : r.replaceWith(a, s, e), i.updateSelection && (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_17__.selectionToInsertionEnd)(r, r.steps.length - 1, -1), n.view.dispatch(r), !0;\n}\nfunction Ri() {\n  const t = (e) => {\n    let o = e.children.length;\n    for (let i = 0; i < o; i++) {\n      const n = e.children[i];\n      if (n.type === \"element\" && (t(n), n.tagName === \"u\"))\n        if (n.children.length > 0) {\n          e.children.splice(i, 1, ...n.children);\n          const r = n.children.length - 1;\n          o += r, i += r;\n        } else\n          e.children.splice(i, 1), o--, i--;\n    }\n  };\n  return t;\n}\nfunction Se(t) {\n  return (0,unified__WEBPACK_IMPORTED_MODULE_22__.unified)().use(rehype_parse__WEBPACK_IMPORTED_MODULE_23__[\"default\"], { fragment: !0 }).use(Ri).use(rehype_remark__WEBPACK_IMPORTED_MODULE_25__[\"default\"]).use(remark_gfm__WEBPACK_IMPORTED_MODULE_26__[\"default\"]).use(remark_stringify__WEBPACK_IMPORTED_MODULE_27__[\"default\"]).processSync(t).value;\n}\nfunction Vi(t, e, o) {\n  const n = ne(e, o).exportBlocks(t);\n  return Se(n);\n}\nfunction ji(t) {\n  return Array.prototype.indexOf.call(t.parentElement.childNodes, t);\n}\nfunction zi(t) {\n  return t.nodeType === 3 && !/\\S/.test(t.nodeValue || \"\");\n}\nfunction Fi(t) {\n  t.querySelectorAll(\"li > ul, li > ol\").forEach((e) => {\n    const o = ji(e), i = e.parentElement, n = Array.from(i.childNodes).slice(\n      o + 1\n    );\n    e.remove(), n.forEach((r) => {\n      r.remove();\n    }), i.insertAdjacentElement(\"afterend\", e), n.reverse().forEach((r) => {\n      if (zi(r))\n        return;\n      const a = document.createElement(\"li\");\n      a.append(r), e.insertAdjacentElement(\"afterend\", a);\n    }), i.childNodes.length === 0 && i.remove();\n  });\n}\nfunction Gi(t) {\n  t.querySelectorAll(\"li + ul, li + ol\").forEach((e) => {\n    var r, a;\n    const o = e.previousElementSibling, i = document.createElement(\"div\");\n    o.insertAdjacentElement(\"afterend\", i), i.append(o);\n    const n = document.createElement(\"div\");\n    for (n.setAttribute(\"data-node-type\", \"blockGroup\"), i.append(n); ((r = i.nextElementSibling) == null ? void 0 : r.nodeName) === \"UL\" || ((a = i.nextElementSibling) == null ? void 0 : a.nodeName) === \"OL\"; )\n      n.append(i.nextElementSibling);\n  });\n}\nlet ze = null;\nfunction Wi() {\n  return ze || (ze = document.implementation.createHTMLDocument(\"title\"));\n}\nfunction bt(t) {\n  if (typeof t == \"string\") {\n    const e = Wi().createElement(\"div\");\n    e.innerHTML = t, t = e;\n  }\n  return Fi(t), Gi(t), t;\n}\nasync function kt(t, e, o, i, n) {\n  const r = bt(t), s = prosemirror_model__WEBPACK_IMPORTED_MODULE_20__.DOMParser.fromSchema(n).parse(r, {\n    topNode: n.nodes.blockGroup.create()\n  }), l = [];\n  for (let d = 0; d < s.childCount; d++)\n    l.push(\n      _(s.child(d), e, o, i)\n    );\n  return l;\n}\nfunction $i(t, e) {\n  const o = e.value ? e.value + `\n` : \"\", i = {};\n  e.lang && (i[\"data-language\"] = e.lang);\n  let n = {\n    type: \"element\",\n    tagName: \"code\",\n    properties: i,\n    children: [{ type: \"text\", value: o }]\n  };\n  return e.meta && (n.data = { meta: e.meta }), t.patch(e, n), n = t.applyData(e, n), n = {\n    type: \"element\",\n    tagName: \"pre\",\n    properties: {},\n    children: [n]\n  }, t.patch(e, n), n;\n}\nfunction Ki(t, e, o, i, n) {\n  const r = (0,unified__WEBPACK_IMPORTED_MODULE_22__.unified)().use(remark_parse__WEBPACK_IMPORTED_MODULE_28__[\"default\"]).use(remark_gfm__WEBPACK_IMPORTED_MODULE_26__[\"default\"]).use(remark_rehype__WEBPACK_IMPORTED_MODULE_29__[\"default\"], {\n    handlers: {\n      ...remark_rehype__WEBPACK_IMPORTED_MODULE_30__.handlers,\n      code: $i\n    }\n  }).use(rehype_stringify__WEBPACK_IMPORTED_MODULE_24__[\"default\"]).processSync(t);\n  return kt(\n    r.value,\n    e,\n    o,\n    i,\n    n\n  );\n}\nclass W {\n  constructor() {\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    c(this, \"callbacks\", {});\n  }\n  on(e, o) {\n    return this.callbacks[e] || (this.callbacks[e] = []), this.callbacks[e].push(o), () => this.off(e, o);\n  }\n  emit(e, ...o) {\n    const i = this.callbacks[e];\n    i && i.forEach((n) => n.apply(this, o));\n  }\n  off(e, o) {\n    const i = this.callbacks[e];\n    i && (o ? this.callbacks[e] = i.filter((n) => n !== o) : delete this.callbacks[e]);\n  }\n  removeAllListeners() {\n    this.callbacks = {};\n  }\n}\nclass qi {\n  constructor(e, o, i) {\n    c(this, \"state\");\n    c(this, \"emitUpdate\");\n    c(this, \"prevWasEditable\", null);\n    c(this, \"mouseDownHandler\", () => {\n      var e;\n      (e = this.state) != null && e.show && (this.state.show = !1, this.emitUpdate());\n    });\n    // For dragging the whole editor.\n    c(this, \"dragstartHandler\", () => {\n      var e;\n      (e = this.state) != null && e.show && (this.state.show = !1, this.emitUpdate());\n    });\n    c(this, \"scrollHandler\", () => {\n      var e;\n      if ((e = this.state) != null && e.show) {\n        const o = document.querySelector(\n          `[data-node-type=\"blockContainer\"][data-id=\"${this.state.block.id}\"]`\n        );\n        this.state.referencePos = o.getBoundingClientRect(), this.emitUpdate();\n      }\n    });\n    c(this, \"closeMenu\", () => {\n      var e;\n      (e = this.state) != null && e.show && (this.state.show = !1, this.emitUpdate());\n    });\n    this.pluginKey = e, this.pmView = o, this.emitUpdate = () => {\n      if (!this.state)\n        throw new Error(\"Attempting to update uninitialized file panel\");\n      i(this.state);\n    }, o.dom.addEventListener(\"mousedown\", this.mouseDownHandler), o.dom.addEventListener(\"dragstart\", this.dragstartHandler), document.addEventListener(\"scroll\", this.scrollHandler);\n  }\n  update(e, o) {\n    var n, r;\n    const i = this.pluginKey.getState(e.state);\n    if (!((n = this.state) != null && n.show) && i.block) {\n      const a = document.querySelector(\n        `[data-node-type=\"blockContainer\"][data-id=\"${i.block.id}\"]`\n      );\n      this.state = {\n        show: !0,\n        referencePos: a.getBoundingClientRect(),\n        block: i.block\n      }, this.emitUpdate();\n      return;\n    }\n    (!e.state.selection.eq(o.selection) || !e.state.doc.eq(o.doc)) && (r = this.state) != null && r.show && (this.state.show = !1, this.emitUpdate());\n  }\n  destroy() {\n    this.pmView.dom.removeEventListener(\"mousedown\", this.mouseDownHandler), this.pmView.dom.removeEventListener(\"dragstart\", this.dragstartHandler), document.removeEventListener(\"scroll\", this.scrollHandler);\n  }\n}\nconst he = new prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.PluginKey(\"FilePanelPlugin\");\nclass Xi extends W {\n  constructor(o) {\n    super();\n    c(this, \"view\");\n    c(this, \"plugin\");\n    c(this, \"closeMenu\", () => this.view.closeMenu());\n    this.plugin = new prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.Plugin({\n      key: he,\n      view: (i) => (this.view = new qi(\n        // editor,\n        he,\n        i,\n        (n) => {\n          this.emit(\"update\", n);\n        }\n      ), this.view),\n      props: {\n        handleKeyDown: (i, n) => n.key === \"Escape\" && this.shown ? (this.view.closeMenu(), !0) : !1\n      },\n      state: {\n        init: () => ({\n          block: void 0\n        }),\n        apply: (i) => {\n          var r;\n          return {\n            block: (r = i.getMeta(he)) == null ? void 0 : r.block\n          };\n        }\n      }\n    });\n  }\n  get shown() {\n    var o, i;\n    return ((i = (o = this.view) == null ? void 0 : o.state) == null ? void 0 : i.show) || !1;\n  }\n  onUpdate(o) {\n    return this.on(\"update\", o);\n  }\n}\nclass Zi {\n  constructor(e, o, i) {\n    c(this, \"state\");\n    c(this, \"emitUpdate\");\n    c(this, \"preventHide\", !1);\n    c(this, \"preventShow\", !1);\n    c(this, \"prevWasEditable\", null);\n    c(this, \"shouldShow\", ({ state: e, from: o, to: i, view: n }) => {\n      const { doc: r, selection: a } = e, { empty: s } = a, l = !r.textBetween(o, i).length && (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_17__.isTextSelection)(e.selection);\n      return !(!n.hasFocus() || s || l);\n    });\n    c(this, \"viewMousedownHandler\", () => {\n      this.preventShow = !0;\n    });\n    c(this, \"viewMouseupHandler\", () => {\n      this.preventShow = !1, setTimeout(() => this.update(this.pmView));\n    });\n    // For dragging the whole editor.\n    c(this, \"dragHandler\", () => {\n      var e;\n      (e = this.state) != null && e.show && (this.state.show = !1, this.emitUpdate());\n    });\n    c(this, \"scrollHandler\", () => {\n      var e;\n      (e = this.state) != null && e.show && (this.state.referencePos = this.getSelectionBoundingBox(), this.emitUpdate());\n    });\n    c(this, \"closeMenu\", () => {\n      var e;\n      (e = this.state) != null && e.show && (this.state.show = !1, this.emitUpdate());\n    });\n    this.editor = e, this.pmView = o, this.emitUpdate = () => {\n      if (!this.state)\n        throw new Error(\n          \"Attempting to update uninitialized formatting toolbar\"\n        );\n      i(this.state);\n    }, o.dom.addEventListener(\"mousedown\", this.viewMousedownHandler), o.dom.addEventListener(\"mouseup\", this.viewMouseupHandler), o.dom.addEventListener(\"dragstart\", this.dragHandler), o.dom.addEventListener(\"dragover\", this.dragHandler), document.addEventListener(\"scroll\", this.scrollHandler);\n  }\n  update(e, o) {\n    var h, f;\n    const { state: i, composing: n } = e, { doc: r, selection: a } = i, s = o && o.doc.eq(r) && o.selection.eq(a);\n    if ((this.prevWasEditable === null || this.prevWasEditable === this.editor.isEditable) && (n || s))\n      return;\n    this.prevWasEditable = this.editor.isEditable;\n    const { ranges: l } = a, d = Math.min(...l.map((m) => m.$from.pos)), u = Math.max(...l.map((m) => m.$to.pos)), p = (h = this.shouldShow) == null ? void 0 : h.call(this, {\n      view: e,\n      state: i,\n      from: d,\n      to: u\n    });\n    if (this.editor.isEditable && !this.preventShow && (p || this.preventHide)) {\n      this.state = {\n        show: !0,\n        referencePos: this.getSelectionBoundingBox()\n      }, this.emitUpdate();\n      return;\n    }\n    if ((f = this.state) != null && f.show && !this.preventHide && (!p || this.preventShow || !this.editor.isEditable)) {\n      this.state.show = !1, this.emitUpdate();\n      return;\n    }\n  }\n  destroy() {\n    this.pmView.dom.removeEventListener(\"mousedown\", this.viewMousedownHandler), this.pmView.dom.removeEventListener(\"mouseup\", this.viewMouseupHandler), this.pmView.dom.removeEventListener(\"dragstart\", this.dragHandler), this.pmView.dom.removeEventListener(\"dragover\", this.dragHandler), document.removeEventListener(\"scroll\", this.scrollHandler);\n  }\n  getSelectionBoundingBox() {\n    const { state: e } = this.pmView, { selection: o } = e, { ranges: i } = o, n = Math.min(...i.map((a) => a.$from.pos)), r = Math.max(...i.map((a) => a.$to.pos));\n    if ((0,_tiptap_core__WEBPACK_IMPORTED_MODULE_17__.isNodeSelection)(o)) {\n      const a = this.pmView.nodeDOM(n);\n      if (a)\n        return a.getBoundingClientRect();\n    }\n    return (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_17__.posToDOMRect)(this.pmView, n, r);\n  }\n}\nconst Ji = new prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.PluginKey(\n  \"FormattingToolbarPlugin\"\n);\nclass Yi extends W {\n  constructor(o) {\n    super();\n    c(this, \"view\");\n    c(this, \"plugin\");\n    c(this, \"closeMenu\", () => this.view.closeMenu());\n    this.plugin = new prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.Plugin({\n      key: Ji,\n      view: (i) => (this.view = new Zi(o, i, (n) => {\n        this.emit(\"update\", n);\n      }), this.view),\n      props: {\n        handleKeyDown: (i, n) => n.key === \"Escape\" && this.shown ? (this.view.closeMenu(), !0) : !1\n      }\n    });\n  }\n  get shown() {\n    var o, i;\n    return ((i = (o = this.view) == null ? void 0 : o.state) == null ? void 0 : i.show) || !1;\n  }\n  onUpdate(o) {\n    return this.on(\"update\", o);\n  }\n}\nclass Qi {\n  constructor(e, o, i) {\n    c(this, \"state\");\n    c(this, \"emitUpdate\");\n    c(this, \"menuUpdateTimer\");\n    c(this, \"startMenuUpdateTimer\");\n    c(this, \"stopMenuUpdateTimer\");\n    c(this, \"mouseHoveredLinkMark\");\n    c(this, \"mouseHoveredLinkMarkRange\");\n    c(this, \"keyboardHoveredLinkMark\");\n    c(this, \"keyboardHoveredLinkMarkRange\");\n    c(this, \"linkMark\");\n    c(this, \"linkMarkRange\");\n    c(this, \"mouseOverHandler\", (e) => {\n      if (this.mouseHoveredLinkMark = void 0, this.mouseHoveredLinkMarkRange = void 0, this.stopMenuUpdateTimer(), e.target instanceof HTMLAnchorElement && e.target.nodeName === \"A\") {\n        const o = e.target, i = this.pmView.posAtDOM(o, 0) + 1, n = this.pmView.state.doc.resolve(i), r = n.marks();\n        for (const a of r)\n          if (a.type.name === this.pmView.state.schema.mark(\"link\").type.name) {\n            this.mouseHoveredLinkMark = a, this.mouseHoveredLinkMarkRange = (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_17__.getMarkRange)(n, a.type, a.attrs) || void 0;\n            break;\n          }\n      }\n      return this.startMenuUpdateTimer(), !1;\n    });\n    c(this, \"clickHandler\", (e) => {\n      var i;\n      const o = this.pmView.dom.parentElement;\n      // Toolbar is open.\n      this.linkMark && // An element is clicked.\n      e && e.target && // The clicked element is not the editor.\n      !(o === e.target || o.contains(e.target)) && (i = this.state) != null && i.show && (this.state.show = !1, this.emitUpdate());\n    });\n    c(this, \"scrollHandler\", () => {\n      var e;\n      this.linkMark !== void 0 && (e = this.state) != null && e.show && (this.state.referencePos = (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_17__.posToDOMRect)(\n        this.pmView,\n        this.linkMarkRange.from,\n        this.linkMarkRange.to\n      ), this.emitUpdate());\n    });\n    c(this, \"closeMenu\", () => {\n      var e;\n      (e = this.state) != null && e.show && (this.state.show = !1, this.emitUpdate());\n    });\n    this.editor = e, this.pmView = o, this.emitUpdate = () => {\n      if (!this.state)\n        throw new Error(\"Attempting to update uninitialized link toolbar\");\n      i(this.state);\n    }, this.startMenuUpdateTimer = () => {\n      this.menuUpdateTimer = setTimeout(() => {\n        this.update();\n      }, 250);\n    }, this.stopMenuUpdateTimer = () => (this.menuUpdateTimer && (clearTimeout(this.menuUpdateTimer), this.menuUpdateTimer = void 0), !1), this.pmView.dom.addEventListener(\"mouseover\", this.mouseOverHandler), document.addEventListener(\"click\", this.clickHandler, !0), document.addEventListener(\"scroll\", this.scrollHandler);\n  }\n  editLink(e, o) {\n    var n;\n    const i = this.pmView.state.tr.insertText(\n      o,\n      this.linkMarkRange.from,\n      this.linkMarkRange.to\n    );\n    i.addMark(\n      this.linkMarkRange.from,\n      this.linkMarkRange.from + o.length,\n      this.pmView.state.schema.mark(\"link\", { href: e })\n    ), this.pmView.dispatch(i), this.pmView.focus(), (n = this.state) != null && n.show && (this.state.show = !1, this.emitUpdate());\n  }\n  deleteLink() {\n    var e;\n    this.pmView.dispatch(\n      this.pmView.state.tr.removeMark(\n        this.linkMarkRange.from,\n        this.linkMarkRange.to,\n        this.linkMark.type\n      ).setMeta(\"preventAutolink\", !0)\n    ), this.pmView.focus(), (e = this.state) != null && e.show && (this.state.show = !1, this.emitUpdate());\n  }\n  update() {\n    var o;\n    if (!this.pmView.hasFocus())\n      return;\n    const e = this.linkMark;\n    if (this.linkMark = void 0, this.linkMarkRange = void 0, this.keyboardHoveredLinkMark = void 0, this.keyboardHoveredLinkMarkRange = void 0, this.pmView.state.selection.empty) {\n      const i = this.pmView.state.selection.$from.marks();\n      for (const n of i)\n        if (n.type.name === this.pmView.state.schema.mark(\"link\").type.name) {\n          this.keyboardHoveredLinkMark = n, this.keyboardHoveredLinkMarkRange = (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_17__.getMarkRange)(\n            this.pmView.state.selection.$from,\n            n.type,\n            n.attrs\n          ) || void 0;\n          break;\n        }\n    }\n    if (this.mouseHoveredLinkMark && (this.linkMark = this.mouseHoveredLinkMark, this.linkMarkRange = this.mouseHoveredLinkMarkRange), this.keyboardHoveredLinkMark && (this.linkMark = this.keyboardHoveredLinkMark, this.linkMarkRange = this.keyboardHoveredLinkMarkRange), this.linkMark && this.editor.isEditable) {\n      this.state = {\n        show: !0,\n        referencePos: (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_17__.posToDOMRect)(\n          this.pmView,\n          this.linkMarkRange.from,\n          this.linkMarkRange.to\n        ),\n        url: this.linkMark.attrs.href,\n        text: this.pmView.state.doc.textBetween(\n          this.linkMarkRange.from,\n          this.linkMarkRange.to\n        )\n      }, this.emitUpdate();\n      return;\n    }\n    if ((o = this.state) != null && o.show && e && (!this.linkMark || !this.editor.isEditable)) {\n      this.state.show = !1, this.emitUpdate();\n      return;\n    }\n  }\n  destroy() {\n    this.pmView.dom.removeEventListener(\"mouseover\", this.mouseOverHandler), document.removeEventListener(\"scroll\", this.scrollHandler), document.removeEventListener(\"click\", this.clickHandler, !0);\n  }\n}\nconst en = new prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.PluginKey(\"LinkToolbarPlugin\");\nclass tn extends W {\n  constructor(o) {\n    super();\n    c(this, \"view\");\n    c(this, \"plugin\");\n    /**\n     * Edit the currently hovered link.\n     */\n    c(this, \"editLink\", (o, i) => {\n      this.view.editLink(o, i);\n    });\n    /**\n     * Delete the currently hovered link.\n     */\n    c(this, \"deleteLink\", () => {\n      this.view.deleteLink();\n    });\n    /**\n     * When hovering on/off links using the mouse cursor, the link toolbar will\n     * open & close with a delay.\n     *\n     * This function starts the delay timer, and should be used for when the mouse\n     * cursor enters the link toolbar.\n     */\n    c(this, \"startHideTimer\", () => {\n      this.view.startMenuUpdateTimer();\n    });\n    /**\n     * When hovering on/off links using the mouse cursor, the link toolbar will\n     * open & close with a delay.\n     *\n     * This function stops the delay timer, and should be used for when the mouse\n     * cursor exits the link toolbar.\n     */\n    c(this, \"stopHideTimer\", () => {\n      this.view.stopMenuUpdateTimer();\n    });\n    c(this, \"closeMenu\", () => this.view.closeMenu());\n    this.plugin = new prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.Plugin({\n      key: en,\n      view: (i) => (this.view = new Qi(o, i, (n) => {\n        this.emit(\"update\", n);\n      }), this.view),\n      props: {\n        handleKeyDown: (i, n) => n.key === \"Escape\" && this.shown ? (this.view.closeMenu(), !0) : !1\n      }\n    });\n  }\n  onUpdate(o) {\n    return this.on(\"update\", o);\n  }\n  get shown() {\n    var o, i;\n    return ((i = (o = this.view) == null ? void 0 : o.state) == null ? void 0 : i.show) || !1;\n  }\n}\nconst on = (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_17__.findParentNode)((t) => t.type.name === \"blockContainer\");\nclass nn {\n  constructor(e, o) {\n    c(this, \"state\");\n    c(this, \"emitUpdate\");\n    c(this, \"pluginState\");\n    c(this, \"handleScroll\", () => {\n      var e;\n      if ((e = this.state) != null && e.show) {\n        const o = document.querySelector(\n          `[data-decoration-id=\"${this.pluginState.decorationId}\"]`\n        );\n        this.state.referencePos = o.getBoundingClientRect(), this.emitUpdate(this.pluginState.triggerCharacter);\n      }\n    });\n    c(this, \"closeMenu\", () => {\n      this.editor._tiptapEditor.view.dispatch(\n        this.editor._tiptapEditor.view.state.tr.setMeta(\n          U,\n          null\n        )\n      );\n    });\n    c(this, \"clearQuery\", () => {\n      this.pluginState !== void 0 && this.editor._tiptapEditor.chain().focus().deleteRange({\n        from: this.pluginState.queryStartPos - (this.pluginState.fromUserInput ? this.pluginState.triggerCharacter.length : 0),\n        to: this.editor._tiptapEditor.state.selection.from\n      }).run();\n    });\n    this.editor = e, this.pluginState = void 0, this.emitUpdate = (i) => {\n      if (!this.state)\n        throw new Error(\"Attempting to update uninitialized suggestions menu\");\n      o(i, this.state);\n    }, document.addEventListener(\"scroll\", this.handleScroll);\n  }\n  update(e, o) {\n    const i = U.getState(o), n = U.getState(\n      e.state\n    ), r = i === void 0 && n !== void 0, a = i !== void 0 && n === void 0;\n    if (!r && !(i !== void 0 && n !== void 0) && !a)\n      return;\n    if (this.pluginState = a ? i : n, a || !this.editor.isEditable) {\n      this.state.show = !1, this.emitUpdate(this.pluginState.triggerCharacter);\n      return;\n    }\n    const l = document.querySelector(\n      `[data-decoration-id=\"${this.pluginState.decorationId}\"]`\n    );\n    this.editor.isEditable && (this.state = {\n      show: !0,\n      referencePos: l.getBoundingClientRect(),\n      query: this.pluginState.query\n    }, this.emitUpdate(this.pluginState.triggerCharacter));\n  }\n  destroy() {\n    document.removeEventListener(\"scroll\", this.handleScroll);\n  }\n}\nconst U = new prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.PluginKey(\"SuggestionMenuPlugin\");\nclass rn extends W {\n  constructor(o) {\n    super();\n    c(this, \"view\");\n    c(this, \"plugin\");\n    c(this, \"triggerCharacters\", []);\n    c(this, \"addTriggerCharacter\", (o) => {\n      this.triggerCharacters.push(o);\n    });\n    // TODO: Should this be called automatically when listeners are removed?\n    c(this, \"removeTriggerCharacter\", (o) => {\n      this.triggerCharacters = this.triggerCharacters.filter(\n        (i) => i !== o\n      );\n    });\n    c(this, \"closeMenu\", () => this.view.closeMenu());\n    c(this, \"clearQuery\", () => this.view.clearQuery());\n    const i = this.triggerCharacters;\n    this.plugin = new prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.Plugin({\n      key: U,\n      view: () => (this.view = new nn(\n        o,\n        (n, r) => {\n          this.emit(`update ${n}`, r);\n        }\n      ), this.view),\n      state: {\n        // Initialize the plugin's internal state.\n        init() {\n        },\n        // Apply changes to the plugin state from an editor transaction.\n        apply(n, r, a, s) {\n          if (n.getMeta(\"orderedListIndexing\") !== void 0)\n            return r;\n          const l = n.getMeta(U);\n          if (typeof l == \"object\" && l !== null && r === void 0)\n            return {\n              triggerCharacter: l.triggerCharacter,\n              fromUserInput: l.fromUserInput !== !1,\n              queryStartPos: s.selection.from,\n              query: \"\",\n              decorationId: `id_${Math.floor(Math.random() * 4294967295)}`\n            };\n          if (r === void 0)\n            return r;\n          if (\n            // Highlighting text should hide the menu.\n            s.selection.from !== s.selection.to || // Transactions with plugin metadata should hide the menu.\n            l === null || // Certain mouse events should hide the menu.\n            // TODO: Change to global mousedown listener.\n            n.getMeta(\"focus\") || n.getMeta(\"blur\") || n.getMeta(\"pointer\") || // Moving the caret before the character which triggered the menu should hide it.\n            r.triggerCharacter !== void 0 && s.selection.from < r.queryStartPos\n          )\n            return;\n          const d = { ...r };\n          return d.query = s.doc.textBetween(\n            r.queryStartPos,\n            s.selection.from\n          ), d;\n        }\n      },\n      props: {\n        handleTextInput(n, r, a, s) {\n          const l = this.getState(n.state);\n          return i.includes(s) && l === void 0 ? (n.dispatch(\n            n.state.tr.insertText(s).scrollIntoView().setMeta(U, {\n              triggerCharacter: s\n            })\n          ), !0) : !1;\n        },\n        // Setup decorator on the currently active suggestion.\n        decorations(n) {\n          const r = this.getState(n);\n          if (r === void 0)\n            return null;\n          if (!r.fromUserInput) {\n            const a = on(n.selection);\n            if (a)\n              return prosemirror_view__WEBPACK_IMPORTED_MODULE_31__.DecorationSet.create(n.doc, [\n                prosemirror_view__WEBPACK_IMPORTED_MODULE_31__.Decoration.node(\n                  a.pos,\n                  a.pos + a.node.nodeSize,\n                  {\n                    nodeName: \"span\",\n                    class: \"bn-suggestion-decorator\",\n                    \"data-decoration-id\": r.decorationId\n                  }\n                )\n              ]);\n          }\n          return prosemirror_view__WEBPACK_IMPORTED_MODULE_31__.DecorationSet.create(n.doc, [\n            prosemirror_view__WEBPACK_IMPORTED_MODULE_31__.Decoration.inline(\n              r.queryStartPos - r.triggerCharacter.length,\n              r.queryStartPos,\n              {\n                nodeName: \"span\",\n                class: \"bn-suggestion-decorator\",\n                \"data-decoration-id\": r.decorationId\n              }\n            )\n          ]);\n        }\n      }\n    });\n  }\n  onUpdate(o, i) {\n    return this.triggerCharacters.includes(o) || this.addTriggerCharacter(o), this.on(`update ${o}`, i);\n  }\n  get shown() {\n    var o, i;\n    return ((i = (o = this.view) == null ? void 0 : o.state) == null ? void 0 : i.show) || !1;\n  }\n}\nfunction Ur(t, e) {\n  t.suggestionMenus.addTriggerCharacter(e);\n}\nclass V extends prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.Selection {\n  constructor(o, i) {\n    super(o, i);\n    c(this, \"nodes\");\n    const n = o.node();\n    this.nodes = [], o.doc.nodesBetween(o.pos, i.pos, (r, a, s) => {\n      if (s !== null && s.eq(n))\n        return this.nodes.push(r), !1;\n    });\n  }\n  static create(o, i, n = i) {\n    return new V(o.resolve(i), o.resolve(n));\n  }\n  content() {\n    return new prosemirror_model__WEBPACK_IMPORTED_MODULE_20__.Slice(prosemirror_model__WEBPACK_IMPORTED_MODULE_20__.Fragment.from(this.nodes), 0, 0);\n  }\n  eq(o) {\n    if (!(o instanceof V) || this.nodes.length !== o.nodes.length || this.from !== o.from || this.to !== o.to)\n      return !1;\n    for (let i = 0; i < this.nodes.length; i++)\n      if (!this.nodes[i].eq(o.nodes[i]))\n        return !1;\n    return !0;\n  }\n  map(o, i) {\n    const n = i.mapResult(this.from), r = i.mapResult(this.to);\n    return r.deleted ? prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.Selection.near(o.resolve(n.pos)) : n.deleted ? prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.Selection.near(o.resolve(r.pos)) : new V(\n      o.resolve(n.pos),\n      o.resolve(r.pos)\n    );\n  }\n  toJSON() {\n    return { type: \"node\", anchor: this.anchor, head: this.head };\n  }\n}\nlet A;\nfunction Me(t, e) {\n  var n;\n  if (!e.dom.isConnected)\n    return;\n  const o = e.posAtCoords(t);\n  if (!o)\n    return;\n  let i = e.domAtPos(o.pos).node;\n  if (i !== e.dom) {\n    for (; i && i.parentNode && i.parentNode !== e.dom && !((n = i.hasAttribute) != null && n.call(i, \"data-id\")); )\n      i = i.parentNode;\n    if (i)\n      return { node: i, id: i.getAttribute(\"data-id\") };\n  }\n}\nfunction an(t, e) {\n  const o = Me(t, e);\n  if (o && o.node.nodeType === 1) {\n    const i = e.docView, n = i.nearestDesc(o.node, !0);\n    return !n || n === i ? null : n.posBefore;\n  }\n  return null;\n}\nfunction sn(t, e) {\n  let o, i;\n  const n = e.resolve(t.from).node().type.spec.group === \"blockContent\", r = e.resolve(t.to).node().type.spec.group === \"blockContent\", a = Math.min(t.$anchor.depth, t.$head.depth);\n  if (n && r) {\n    const s = t.$from.start(a - 1), l = t.$to.end(a - 1);\n    o = e.resolve(s - 1).pos, i = e.resolve(l + 1).pos;\n  } else\n    o = t.from, i = t.to;\n  return { from: o, to: i };\n}\nfunction Fe(t, e, o = e) {\n  e === o && (o += t.state.doc.resolve(e + 1).node().nodeSize);\n  const i = t.domAtPos(e).node.cloneNode(!0), n = t.domAtPos(e).node, r = (u, p) => Array.prototype.indexOf.call(u.children, p), a = r(\n    n,\n    // Expects from position to be just before the first selected block.\n    t.domAtPos(e + 1).node.parentElement\n  ), s = r(\n    n,\n    // Expects to position to be just after the last selected block.\n    t.domAtPos(o - 1).node.parentElement\n  );\n  for (let u = n.childElementCount - 1; u >= 0; u--)\n    (u > s || u < a) && i.removeChild(i.children[u]);\n  yt(), A = i;\n  const d = t.dom.className.split(\" \").filter(\n    (u) => u !== \"ProseMirror\" && u !== \"bn-root\" && u !== \"bn-editor\"\n  ).join(\" \");\n  A.className = A.className + \" bn-drag-preview \" + d, document.body.appendChild(A);\n}\nfunction yt() {\n  A !== void 0 && (document.body.removeChild(A), A = void 0);\n}\nfunction ln(t, e) {\n  if (!t.dataTransfer)\n    return;\n  const o = e.prosemirrorView, i = o.dom.getBoundingClientRect(), n = {\n    left: i.left + i.width / 2,\n    // take middle of editor\n    top: t.clientY\n  }, r = an(n, o);\n  if (r != null) {\n    const a = o.state.selection, s = o.state.doc, { from: l, to: d } = sn(a, s), u = l <= r && r < d, p = a.$anchor.node() !== a.$head.node() || a instanceof V;\n    u && p ? (o.dispatch(\n      o.state.tr.setSelection(V.create(s, l, d))\n    ), Fe(o, l, d)) : (o.dispatch(\n      o.state.tr.setSelection(prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.NodeSelection.create(o.state.doc, r))\n    ), Fe(o, r));\n    const h = o.state.selection.content(), f = e._tiptapEditor.schema, g = nt(f, e).serializeProseMirrorFragment(\n      h.content\n    ), B = ne(f, e).exportProseMirrorFragment(\n      h.content\n    ), E = Se(B);\n    t.dataTransfer.clearData(), t.dataTransfer.setData(\"blocknote/html\", g), t.dataTransfer.setData(\"text/html\", B), t.dataTransfer.setData(\"text/plain\", E), t.dataTransfer.effectAllowed = \"move\", t.dataTransfer.setDragImage(A, 0, 0), o.dragging = { slice: h, move: !0 };\n  }\n}\nclass dn {\n  constructor(e, o, i) {\n    c(this, \"state\");\n    c(this, \"emitUpdate\");\n    // When true, the drag handle with be anchored at the same level as root elements\n    // When false, the drag handle with be just to the left of the element\n    // TODO: Is there any case where we want this to be false?\n    c(this, \"horizontalPosAnchoredAtRoot\");\n    c(this, \"horizontalPosAnchor\");\n    c(this, \"hoveredBlock\");\n    // Used to check if currently dragged content comes from this editor instance.\n    c(this, \"isDragging\", !1);\n    c(this, \"menuFrozen\", !1);\n    /**\n     * Sets isDragging when dragging text.\n     */\n    c(this, \"onDragStart\", () => {\n      this.isDragging = !0;\n    });\n    /**\n     * If the event is outside the editor contents,\n     * we dispatch a fake event, so that we can still drop the content\n     * when dragging / dropping to the side of the editor\n     */\n    c(this, \"onDrop\", (e) => {\n      if (this.editor._tiptapEditor.commands.blur(), e.synthetic || !this.isDragging)\n        return;\n      const o = this.pmView.posAtCoords({\n        left: e.clientX,\n        top: e.clientY\n      });\n      if (this.isDragging = !1, !o || o.inside === -1) {\n        const i = new Event(\"drop\", e), n = this.pmView.dom.firstChild.getBoundingClientRect();\n        i.clientX = n.left + n.width / 2, i.clientY = e.clientY, i.dataTransfer = e.dataTransfer, i.preventDefault = () => e.preventDefault(), i.synthetic = !0, this.pmView.dom.dispatchEvent(i);\n      }\n    });\n    /**\n     * If the event is outside the editor contents,\n     * we dispatch a fake event, so that we can still drop the content\n     * when dragging / dropping to the side of the editor\n     */\n    c(this, \"onDragOver\", (e) => {\n      if (e.synthetic || !this.isDragging)\n        return;\n      const o = this.pmView.posAtCoords({\n        left: e.clientX,\n        top: e.clientY\n      });\n      if (!o || o.inside === -1) {\n        const i = new Event(\"dragover\", e), n = this.pmView.dom.firstChild.getBoundingClientRect();\n        i.clientX = n.left + n.width / 2, i.clientY = e.clientY, i.dataTransfer = e.dataTransfer, i.preventDefault = () => e.preventDefault(), i.synthetic = !0, this.pmView.dom.dispatchEvent(i);\n      }\n    });\n    c(this, \"onKeyDown\", (e) => {\n      var o;\n      (o = this.state) != null && o.show && this.editor.isFocused() && (this.state.show = !1, this.emitUpdate(this.state), this.menuFrozen = !1);\n    });\n    c(this, \"onMouseDown\", (e) => {\n      this.state && !this.state.show && (this.state.show = !0, this.emitUpdate(this.state)), this.menuFrozen = !1;\n    });\n    c(this, \"onMouseMove\", (e) => {\n      var d, u, p, h, f;\n      if (this.menuFrozen)\n        return;\n      const o = this.pmView.dom.firstChild.getBoundingClientRect(), i = this.pmView.dom.getBoundingClientRect(), n = e.clientX >= i.left && e.clientX <= i.right && e.clientY >= i.top && e.clientY <= i.bottom, r = this.pmView.dom.parentElement;\n      if (\n        // Cursor is within the editor area\n        n && // An element is hovered\n        e && e.target && // Element is outside the editor\n        !(r === e.target || r.contains(e.target))\n      ) {\n        (d = this.state) != null && d.show && (this.state.show = !1, this.emitUpdate(this.state));\n        return;\n      }\n      this.horizontalPosAnchor = o.x;\n      const a = {\n        left: o.left + o.width / 2,\n        // take middle of editor\n        top: e.clientY\n      }, s = Me(a, this.pmView);\n      if (!s || !this.editor.isEditable) {\n        (u = this.state) != null && u.show && (this.state.show = !1, this.emitUpdate(this.state));\n        return;\n      }\n      if ((p = this.state) != null && p.show && ((h = this.hoveredBlock) != null && h.hasAttribute(\"data-id\")) && ((f = this.hoveredBlock) == null ? void 0 : f.getAttribute(\"data-id\")) === s.id)\n        return;\n      this.hoveredBlock = s.node;\n      const l = s.node.firstChild;\n      if (l && this.editor.isEditable) {\n        const m = l.getBoundingClientRect();\n        this.state = {\n          show: !0,\n          referencePos: new DOMRect(\n            this.horizontalPosAnchoredAtRoot ? this.horizontalPosAnchor : m.x,\n            m.y,\n            m.width,\n            m.height\n          ),\n          block: this.editor.getBlock(\n            this.hoveredBlock.getAttribute(\"data-id\")\n          )\n        }, this.emitUpdate(this.state);\n      }\n    });\n    c(this, \"onScroll\", () => {\n      var e;\n      if ((e = this.state) != null && e.show) {\n        const i = this.hoveredBlock.firstChild.getBoundingClientRect();\n        this.state.referencePos = new DOMRect(\n          this.horizontalPosAnchoredAtRoot ? this.horizontalPosAnchor : i.x,\n          i.y,\n          i.width,\n          i.height\n        ), this.emitUpdate(this.state);\n      }\n    });\n    this.editor = e, this.pmView = o, this.emitUpdate = () => {\n      if (!this.state)\n        throw new Error(\"Attempting to update uninitialized side menu\");\n      i(this.state);\n    }, this.horizontalPosAnchoredAtRoot = !0, this.horizontalPosAnchor = this.pmView.dom.firstChild.getBoundingClientRect().x, document.body.addEventListener(\"drop\", this.onDrop, !0), document.body.addEventListener(\"dragover\", this.onDragOver), this.pmView.dom.addEventListener(\"dragstart\", this.onDragStart), document.body.addEventListener(\"mousemove\", this.onMouseMove, !0), document.addEventListener(\"scroll\", this.onScroll), document.body.addEventListener(\"mousedown\", this.onMouseDown, !0), document.body.addEventListener(\"keydown\", this.onKeyDown, !0);\n  }\n  destroy() {\n    var e;\n    (e = this.state) != null && e.show && (this.state.show = !1, this.emitUpdate(this.state)), document.body.removeEventListener(\"mousemove\", this.onMouseMove, !0), document.body.removeEventListener(\"dragover\", this.onDragOver), this.pmView.dom.removeEventListener(\"dragstart\", this.onDragStart), document.body.removeEventListener(\"drop\", this.onDrop, !0), document.removeEventListener(\"scroll\", this.onScroll), document.body.removeEventListener(\"mousedown\", this.onMouseDown, !0), document.body.removeEventListener(\"keydown\", this.onKeyDown, !0);\n  }\n  addBlock() {\n    var l;\n    (l = this.state) != null && l.show && (this.state.show = !1, this.emitUpdate(this.state)), this.menuFrozen = !0;\n    const o = this.hoveredBlock.firstChild.getBoundingClientRect(), i = this.pmView.posAtCoords({\n      left: o.left + o.width / 2,\n      top: o.top + o.height / 2\n    });\n    if (!i)\n      return;\n    const n = b(\n      this.editor._tiptapEditor.state.doc,\n      i.pos\n    );\n    if (n === void 0)\n      return;\n    const { contentNode: r, startPos: a, endPos: s } = n;\n    if (r.type.spec.content !== \"inline*\" || r.textContent.length !== 0) {\n      const d = s + 1, u = d + 2;\n      this.editor._tiptapEditor.chain().BNCreateBlock(d).setTextSelection(u).run();\n    } else\n      this.editor._tiptapEditor.commands.setTextSelection(a + 1);\n    this.pmView.focus(), this.pmView.dispatch(\n      this.pmView.state.tr.scrollIntoView().setMeta(U, {\n        triggerCharacter: \"/\",\n        fromUserInput: !1\n      })\n    );\n  }\n}\nconst cn = new prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.PluginKey(\"SideMenuPlugin\");\nclass un extends W {\n  constructor(o) {\n    super();\n    c(this, \"view\");\n    c(this, \"plugin\");\n    /**\n     * If the block is empty, opens the slash menu. If the block has content,\n     * creates a new block below and opens the slash menu in it.\n     */\n    c(this, \"addBlock\", () => this.view.addBlock());\n    /**\n     * Handles drag & drop events for blocks.\n     */\n    c(this, \"blockDragStart\", (o) => {\n      this.view.isDragging = !0, ln(o, this.editor);\n    });\n    /**\n     * Handles drag & drop events for blocks.\n     */\n    c(this, \"blockDragEnd\", () => yt());\n    /**\n     * Freezes the side menu. When frozen, the side menu will stay\n     * attached to the same block regardless of which block is hovered by the\n     * mouse cursor.\n     */\n    c(this, \"freezeMenu\", () => this.view.menuFrozen = !0);\n    /**\n     * Unfreezes the side menu. When frozen, the side menu will stay\n     * attached to the same block regardless of which block is hovered by the\n     * mouse cursor.\n     */\n    c(this, \"unfreezeMenu\", () => this.view.menuFrozen = !1);\n    this.editor = o, this.plugin = new prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.Plugin({\n      key: cn,\n      view: (i) => (this.view = new dn(o, i, (n) => {\n        this.emit(\"update\", n);\n      }), this.view)\n    });\n  }\n  onUpdate(o) {\n    return this.on(\"update\", o);\n  }\n}\nlet v;\nfunction Ge() {\n  v || (v = document.createElement(\"div\"), v.innerHTML = \"_\", v.style.opacity = \"0\", v.style.height = \"1px\", v.style.width = \"1px\", document.body.appendChild(v));\n}\nfunction pn() {\n  v && (document.body.removeChild(v), v = void 0);\n}\nfunction ee(t) {\n  return Array.prototype.indexOf.call(t.parentElement.childNodes, t);\n}\nfunction hn(t) {\n  for (; t && t.nodeName !== \"TD\" && t.nodeName !== \"TH\"; )\n    t = t.classList && t.classList.contains(\"ProseMirror\") ? null : t.parentNode;\n  return t;\n}\nfunction mn(t) {\n  t.forEach((e) => {\n    const o = document.getElementsByClassName(e);\n    for (let i = 0; i < o.length; i++)\n      o[i].style.visibility = \"hidden\";\n  });\n}\nclass fn {\n  constructor(e, o, i) {\n    c(this, \"state\");\n    c(this, \"emitUpdate\");\n    c(this, \"tableId\");\n    c(this, \"tablePos\");\n    c(this, \"menuFrozen\", !1);\n    c(this, \"prevWasEditable\", null);\n    c(this, \"mouseMoveHandler\", (e) => {\n      var d;\n      if (this.menuFrozen)\n        return;\n      const o = hn(e.target);\n      if (!o || !this.editor.isEditable) {\n        (d = this.state) != null && d.show && (this.state.show = !1, this.emitUpdate());\n        return;\n      }\n      const i = ee(o), n = ee(o.parentElement), r = o.getBoundingClientRect(), a = o.parentElement.parentElement.getBoundingClientRect(), s = Me(r, this.pmView);\n      if (!s)\n        throw new Error(\n          \"Found table cell element, but could not find surrounding blockContent element.\"\n        );\n      if (this.tableId = s.id, this.state !== void 0 && this.state.show && this.tableId === s.id && this.state.rowIndex === n && this.state.colIndex === i)\n        return;\n      let l;\n      return this.editor._tiptapEditor.state.doc.descendants((u, p) => typeof l < \"u\" ? !1 : u.type.name !== \"blockContainer\" || u.attrs.id !== s.id ? !0 : (l = _(\n        u,\n        this.editor.schema.blockSchema,\n        this.editor.schema.inlineContentSchema,\n        this.editor.schema.styleSchema,\n        this.editor.blockCache\n      ), this.tablePos = p + 1, !1)), this.state = {\n        show: !0,\n        referencePosCell: r,\n        referencePosTable: a,\n        block: l,\n        colIndex: i,\n        rowIndex: n,\n        draggingState: void 0\n      }, this.emitUpdate(), !1;\n    });\n    c(this, \"dragOverHandler\", (e) => {\n      var h;\n      if (((h = this.state) == null ? void 0 : h.draggingState) === void 0)\n        return;\n      e.preventDefault(), e.dataTransfer.dropEffect = \"move\", mn([\n        \"column-resize-handle\",\n        \"prosemirror-dropcursor-block\",\n        \"prosemirror-dropcursor-inline\"\n      ]);\n      const o = {\n        left: Math.min(\n          Math.max(e.clientX, this.state.referencePosTable.left + 1),\n          this.state.referencePosTable.right - 1\n        ),\n        top: Math.min(\n          Math.max(e.clientY, this.state.referencePosTable.top + 1),\n          this.state.referencePosTable.bottom - 1\n        )\n      }, i = document.elementsFromPoint(o.left, o.top).filter(\n        (f) => f.tagName === \"TD\" || f.tagName === \"TH\"\n      );\n      if (i.length === 0)\n        throw new Error(\n          \"Could not find table cell element that the mouse cursor is hovering over.\"\n        );\n      const n = i[0];\n      let r = !1;\n      const a = ee(n.parentElement), s = ee(n), l = this.state.draggingState.draggedCellOrientation === \"row\" ? this.state.rowIndex : this.state.colIndex, u = (this.state.draggingState.draggedCellOrientation === \"row\" ? a : s) !== l;\n      (this.state.rowIndex !== a || this.state.colIndex !== s) && (this.state.rowIndex = a, this.state.colIndex = s, this.state.referencePosCell = n.getBoundingClientRect(), r = !0);\n      const p = this.state.draggingState.draggedCellOrientation === \"row\" ? o.top : o.left;\n      this.state.draggingState.mousePos !== p && (this.state.draggingState.mousePos = p, r = !0), r && this.emitUpdate(), u && this.pmView.dispatch(\n        this.pmView.state.tr.setMeta(X, !0)\n      );\n    });\n    c(this, \"dropHandler\", (e) => {\n      if (this.state === void 0 || this.state.draggingState === void 0)\n        return;\n      e.preventDefault();\n      const o = this.state.block.content.rows;\n      if (this.state.draggingState.draggedCellOrientation === \"row\") {\n        const i = o[this.state.draggingState.originalIndex];\n        o.splice(this.state.draggingState.originalIndex, 1), o.splice(this.state.rowIndex, 0, i);\n      } else {\n        const i = o.map(\n          (n) => n.cells[this.state.draggingState.originalIndex]\n        );\n        o.forEach((n, r) => {\n          n.cells.splice(this.state.draggingState.originalIndex, 1), n.cells.splice(this.state.colIndex, 0, i[r]);\n        });\n      }\n      this.editor.updateBlock(this.state.block, {\n        type: \"table\",\n        content: {\n          type: \"tableContent\",\n          rows: o\n        }\n      });\n    });\n    c(this, \"scrollHandler\", () => {\n      var e;\n      if ((e = this.state) != null && e.show) {\n        const o = document.querySelector(\n          `[data-node-type=\"blockContainer\"][data-id=\"${this.tableId}\"] table`\n        ), i = o.querySelector(\n          `tr:nth-child(${this.state.rowIndex + 1}) > td:nth-child(${this.state.colIndex + 1})`\n        );\n        this.state.referencePosTable = o.getBoundingClientRect(), this.state.referencePosCell = i.getBoundingClientRect(), this.emitUpdate();\n      }\n    });\n    this.editor = e, this.pmView = o, this.emitUpdate = () => {\n      if (!this.state)\n        throw new Error(\"Attempting to update uninitialized image toolbar\");\n      i(this.state);\n    }, o.dom.addEventListener(\"mousemove\", this.mouseMoveHandler), document.addEventListener(\"dragover\", this.dragOverHandler), document.addEventListener(\"drop\", this.dropHandler), document.addEventListener(\"scroll\", this.scrollHandler);\n  }\n  destroy() {\n    this.pmView.dom.removeEventListener(\"mousemove\", this.mouseMoveHandler), document.removeEventListener(\"dragover\", this.dragOverHandler), document.removeEventListener(\"drop\", this.dropHandler), document.removeEventListener(\"scroll\", this.scrollHandler);\n  }\n}\nconst X = new prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.PluginKey(\"TableHandlesPlugin\");\nclass gn extends W {\n  constructor(o) {\n    super();\n    c(this, \"view\");\n    c(this, \"plugin\");\n    /**\n     * Callback that should be set on the `dragStart` event for whichever element\n     * is used as the column drag handle.\n     */\n    c(this, \"colDragStart\", (o) => {\n      if (this.view.state === void 0)\n        throw new Error(\n          \"Attempted to drag table column, but no table block was hovered prior.\"\n        );\n      this.view.state.draggingState = {\n        draggedCellOrientation: \"col\",\n        originalIndex: this.view.state.colIndex,\n        mousePos: o.clientX\n      }, this.view.emitUpdate(), this.editor._tiptapEditor.view.dispatch(\n        this.editor._tiptapEditor.state.tr.setMeta(X, {\n          draggedCellOrientation: this.view.state.draggingState.draggedCellOrientation,\n          originalIndex: this.view.state.colIndex,\n          newIndex: this.view.state.colIndex,\n          tablePos: this.view.tablePos\n        })\n      ), Ge(), o.dataTransfer.setDragImage(v, 0, 0), o.dataTransfer.effectAllowed = \"move\";\n    });\n    /**\n     * Callback that should be set on the `dragStart` event for whichever element\n     * is used as the row drag handle.\n     */\n    c(this, \"rowDragStart\", (o) => {\n      if (this.view.state === void 0)\n        throw new Error(\n          \"Attempted to drag table row, but no table block was hovered prior.\"\n        );\n      this.view.state.draggingState = {\n        draggedCellOrientation: \"row\",\n        originalIndex: this.view.state.rowIndex,\n        mousePos: o.clientY\n      }, this.view.emitUpdate(), this.editor._tiptapEditor.view.dispatch(\n        this.editor._tiptapEditor.state.tr.setMeta(X, {\n          draggedCellOrientation: this.view.state.draggingState.draggedCellOrientation,\n          originalIndex: this.view.state.rowIndex,\n          newIndex: this.view.state.rowIndex,\n          tablePos: this.view.tablePos\n        })\n      ), Ge(), o.dataTransfer.setDragImage(v, 0, 0), o.dataTransfer.effectAllowed = \"copyMove\";\n    });\n    /**\n     * Callback that should be set on the `dragEnd` event for both the element\n     * used as the row drag handle, and the one used as the column drag handle.\n     */\n    c(this, \"dragEnd\", () => {\n      if (this.view.state === void 0)\n        throw new Error(\n          \"Attempted to drag table row, but no table block was hovered prior.\"\n        );\n      this.view.state.draggingState = void 0, this.view.emitUpdate(), this.editor._tiptapEditor.view.dispatch(\n        this.editor._tiptapEditor.state.tr.setMeta(X, null)\n      ), pn();\n    });\n    /**\n     * Freezes the drag handles. When frozen, they will stay attached to the same\n     * cell regardless of which cell is hovered by the mouse cursor.\n     */\n    c(this, \"freezeHandles\", () => {\n      this.view.menuFrozen = !0;\n    });\n    /**\n     * Unfreezes the drag handles. When frozen, they will stay attached to the\n     * same cell regardless of which cell is hovered by the mouse cursor.\n     */\n    c(this, \"unfreezeHandles\", () => {\n      this.view.menuFrozen = !1;\n    });\n    this.editor = o, this.plugin = new prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.Plugin({\n      key: X,\n      view: (i) => (this.view = new fn(o, i, (n) => {\n        this.emit(\"update\", n);\n      }), this.view),\n      // We use decorations to render the drop cursor when dragging a table row\n      // or column. The decorations are updated in the `dragOverHandler` method.\n      props: {\n        decorations: (i) => {\n          if (this.view === void 0 || this.view.state === void 0 || this.view.state.draggingState === void 0 || this.view.tablePos === void 0)\n            return;\n          const n = this.view.state.draggingState.draggedCellOrientation === \"row\" ? this.view.state.rowIndex : this.view.state.colIndex, r = [];\n          if (n === this.view.state.draggingState.originalIndex)\n            return prosemirror_view__WEBPACK_IMPORTED_MODULE_31__.DecorationSet.create(i.doc, r);\n          const a = i.doc.resolve(this.view.tablePos + 1), s = a.node();\n          if (this.view.state.draggingState.draggedCellOrientation === \"row\") {\n            const l = i.doc.resolve(\n              a.posAtIndex(n) + 1\n            ), d = l.node();\n            for (let u = 0; u < d.childCount; u++) {\n              const p = i.doc.resolve(\n                l.posAtIndex(u) + 1\n              ), h = p.node(), f = p.pos + (n > this.view.state.draggingState.originalIndex ? h.nodeSize - 2 : 0);\n              r.push(\n                // The widget is a small bar which spans the width of the cell.\n                prosemirror_view__WEBPACK_IMPORTED_MODULE_31__.Decoration.widget(f, () => {\n                  const m = document.createElement(\"div\");\n                  return m.className = \"bn-table-drop-cursor\", m.style.left = \"0\", m.style.right = \"0\", n > this.view.state.draggingState.originalIndex ? m.style.bottom = \"-2px\" : m.style.top = \"-3px\", m.style.height = \"4px\", m;\n                })\n              );\n            }\n          } else\n            for (let l = 0; l < s.childCount; l++) {\n              const d = i.doc.resolve(\n                a.posAtIndex(l) + 1\n              ), u = i.doc.resolve(\n                d.posAtIndex(n) + 1\n              ), p = u.node(), h = u.pos + (n > this.view.state.draggingState.originalIndex ? p.nodeSize - 2 : 0);\n              r.push(\n                // The widget is a small bar which spans the height of the cell.\n                prosemirror_view__WEBPACK_IMPORTED_MODULE_31__.Decoration.widget(h, () => {\n                  const f = document.createElement(\"div\");\n                  return f.className = \"bn-table-drop-cursor\", f.style.top = \"0\", f.style.bottom = \"0\", n > this.view.state.draggingState.originalIndex ? f.style.right = \"-2px\" : f.style.left = \"-3px\", f.style.width = \"4px\", f;\n                })\n              );\n            }\n          return prosemirror_view__WEBPACK_IMPORTED_MODULE_31__.DecorationSet.create(i.doc, r);\n        }\n      }\n    });\n  }\n  onUpdate(o) {\n    return this.on(\"update\", o);\n  }\n}\nfunction We(t, e) {\n  const o = t.state.selection.content().content, n = nt(\n    t.state.schema,\n    e\n  ).serializeProseMirrorFragment(o), a = ne(\n    t.state.schema,\n    e\n  ).exportProseMirrorFragment(o), s = Se(a);\n  return { internalHTML: n, externalHTML: a, plainText: s };\n}\nconst bn = (t) => _tiptap_core__WEBPACK_IMPORTED_MODULE_17__.Extension.create({\n  name: \"copyToClipboard\",\n  addProseMirrorPlugins() {\n    return [\n      new prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.Plugin({\n        props: {\n          handleDOMEvents: {\n            copy(e, o) {\n              o.preventDefault(), o.clipboardData.clearData(), \"node\" in e.state.selection && e.state.selection.node.type.spec.group === \"blockContent\" && e.dispatch(\n                e.state.tr.setSelection(\n                  new prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.NodeSelection(\n                    e.state.doc.resolve(e.state.selection.from - 1)\n                  )\n                )\n              );\n              const { internalHTML: i, externalHTML: n, plainText: r } = We(e, t);\n              return o.clipboardData.setData(\"blocknote/html\", i), o.clipboardData.setData(\"text/html\", n), o.clipboardData.setData(\"text/plain\", r), !0;\n            },\n            // This is for the use-case in which only a block without content\n            // is selected, e.g. an image block, and dragged (not using the\n            // drag handle).\n            dragstart(e, o) {\n              if (!(\"node\" in e.state.selection) || e.state.selection.node.type.spec.group !== \"blockContent\")\n                return;\n              e.dispatch(\n                e.state.tr.setSelection(\n                  new prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.NodeSelection(\n                    e.state.doc.resolve(e.state.selection.from - 1)\n                  )\n                )\n              ), o.preventDefault(), o.dataTransfer.clearData();\n              const { internalHTML: i, externalHTML: n, plainText: r } = We(e, t);\n              return o.dataTransfer.setData(\"blocknote/html\", i), o.dataTransfer.setData(\"text/html\", n), o.dataTransfer.setData(\"text/plain\", r), !0;\n            }\n          }\n        }\n      })\n    ];\n  }\n}), kn = [\n  \"blocknote/html\",\n  \"text/html\",\n  \"text/plain\"\n], yn = (t) => _tiptap_core__WEBPACK_IMPORTED_MODULE_17__.Extension.create({\n  name: \"pasteFromClipboard\",\n  addProseMirrorPlugins() {\n    return [\n      new prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.Plugin({\n        props: {\n          handleDOMEvents: {\n            paste(e, o) {\n              o.preventDefault();\n              let i = null;\n              for (const n of kn)\n                if (o.clipboardData.types.includes(n)) {\n                  i = n;\n                  break;\n                }\n              if (i !== null) {\n                let n = o.clipboardData.getData(i);\n                i === \"text/html\" && (n = bt(\n                  n.trim()\n                ).innerHTML), t._tiptapEditor.view.pasteHTML(n);\n              }\n              return !0;\n            }\n          }\n        }\n      })\n    ];\n  }\n}), _n = _tiptap_core__WEBPACK_IMPORTED_MODULE_17__.Extension.create({\n  name: \"blockBackgroundColor\",\n  addGlobalAttributes() {\n    return [\n      {\n        types: [\"blockContainer\"],\n        attributes: {\n          backgroundColor: {\n            default: k.backgroundColor.default,\n            parseHTML: (t) => t.hasAttribute(\"data-background-color\") ? t.getAttribute(\"data-background-color\") : k.backgroundColor.default,\n            renderHTML: (t) => t.backgroundColor !== k.backgroundColor.default && {\n              \"data-background-color\": t.backgroundColor\n            }\n          }\n        }\n      }\n    ];\n  }\n}), wn = _tiptap_core__WEBPACK_IMPORTED_MODULE_17__.Extension.create({\n  name: \"textAlignment\",\n  addGlobalAttributes() {\n    return [\n      {\n        // Attribute is applied to block content instead of container so that child blocks don't inherit the text\n        // alignment styling.\n        types: [\"paragraph\", \"heading\", \"bulletListItem\", \"numberedListItem\"],\n        attributes: {\n          textAlignment: {\n            default: \"left\",\n            parseHTML: (t) => t.getAttribute(\"data-text-alignment\"),\n            renderHTML: (t) => t.textAlignment !== \"left\" && {\n              \"data-text-alignment\": t.textAlignment\n            }\n          }\n        }\n      }\n    ];\n  }\n}), vn = _tiptap_core__WEBPACK_IMPORTED_MODULE_17__.Extension.create({\n  name: \"blockTextColor\",\n  addGlobalAttributes() {\n    return [\n      {\n        types: [\"blockContainer\"],\n        attributes: {\n          textColor: {\n            default: k.textColor.default,\n            parseHTML: (t) => t.hasAttribute(\"data-text-color\") ? t.getAttribute(\"data-text-color\") : k.textColor.default,\n            renderHTML: (t) => t.textColor !== k.textColor.default && {\n              \"data-text-color\": t.textColor\n            }\n          }\n        }\n      }\n    ];\n  }\n}), xn = _tiptap_core__WEBPACK_IMPORTED_MODULE_17__.Extension.create({\n  name: \"trailingNode\",\n  addProseMirrorPlugins() {\n    const t = new prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.PluginKey(this.name);\n    return [\n      new prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.Plugin({\n        key: t,\n        appendTransaction: (e, o, i) => {\n          const { doc: n, tr: r, schema: a } = i, s = t.getState(i), l = n.content.size - 2, d = a.nodes.blockContainer, u = a.nodes.paragraph;\n          if (s)\n            return r.insert(\n              l,\n              d.create(void 0, u.create())\n            );\n        },\n        state: {\n          init: (e, o) => {\n          },\n          apply: (e, o) => {\n            if (!e.docChanged)\n              return o;\n            let i = e.doc.lastChild;\n            if (!i || i.type.name !== \"blockGroup\")\n              throw new Error(\"Expected blockGroup\");\n            if (i = i.lastChild, !i || i.type.name !== \"blockContainer\")\n              throw new Error(\"Expected blockContainer\");\n            const n = i.firstChild;\n            if (!n)\n              throw new Error(\"Expected blockContent\");\n            return i.nodeSize > 4 || n.type.spec.content !== \"inline*\";\n          }\n        }\n      })\n    ];\n  }\n}), En = new prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.PluginKey(\"non-editable-block\"), Cn = () => new prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.Plugin({\n  key: En,\n  props: {\n    handleKeyDown: (t, e) => {\n      if (\"node\" in t.state.selection) {\n        if (e.ctrlKey || e.metaKey)\n          return !1;\n        if (e.key.length === 1)\n          return e.preventDefault(), !0;\n        if (e.key === \"Enter\") {\n          const o = t.state.tr;\n          return t.dispatch(\n            o.insert(\n              t.state.tr.selection.$to.after(),\n              t.state.schema.nodes.paragraph.create()\n            ).setSelection(\n              new prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.TextSelection(\n                o.doc.resolve(t.state.tr.selection.$to.after() + 1)\n              )\n            )\n          ), !0;\n        }\n      }\n      return !1;\n    }\n  }\n}), $e = new prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.PluginKey(\"previous-blocks\"), Sn = {\n  // Numbered List Items\n  index: \"index\",\n  // Headings\n  level: \"level\",\n  // All Blocks\n  type: \"type\",\n  depth: \"depth\",\n  \"depth-change\": \"depth-change\"\n}, Mn = () => {\n  let t;\n  return new prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.Plugin({\n    key: $e,\n    view(e) {\n      return {\n        update: async (o, i) => {\n          var n;\n          ((n = this.key) == null ? void 0 : n.getState(o.state).updatedBlocks.size) > 0 && (t = setTimeout(() => {\n            o.dispatch(\n              o.state.tr.setMeta($e, { clearUpdate: !0 })\n            );\n          }, 0));\n        },\n        destroy: () => {\n          t && clearTimeout(t);\n        }\n      };\n    },\n    state: {\n      init() {\n        return {\n          // Block attributes, by block ID, from just before the previous transaction.\n          prevTransactionOldBlockAttrs: {},\n          // Block attributes, by block ID, from just before the current transaction.\n          currentTransactionOldBlockAttrs: {},\n          // Set of IDs of blocks whose attributes changed from the current transaction.\n          updatedBlocks: /* @__PURE__ */ new Set()\n        };\n      },\n      apply(e, o, i, n) {\n        if (o.currentTransactionOldBlockAttrs = {}, o.updatedBlocks.clear(), !e.docChanged || i.doc.eq(n.doc))\n          return o;\n        const r = {}, a = (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_17__.findChildren)(i.doc, (d) => d.attrs.id), s = new Map(\n          a.map((d) => [d.node.attrs.id, d])\n        ), l = (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_17__.findChildren)(n.doc, (d) => d.attrs.id);\n        for (const d of l) {\n          const u = s.get(d.node.attrs.id), p = u == null ? void 0 : u.node.firstChild, h = d.node.firstChild;\n          if (u && p && h) {\n            const f = {\n              index: h.attrs.index,\n              level: h.attrs.level,\n              type: h.type.name,\n              depth: n.doc.resolve(d.pos).depth\n            };\n            let m = {\n              index: p.attrs.index,\n              level: p.attrs.level,\n              type: p.type.name,\n              depth: i.doc.resolve(u.pos).depth\n            };\n            r[d.node.attrs.id] = m, e.getMeta(\"numberedListIndexing\") && (d.node.attrs.id in o.prevTransactionOldBlockAttrs && (m = o.prevTransactionOldBlockAttrs[d.node.attrs.id]), f.type === \"numberedListItem\" && (m.index = f.index)), o.currentTransactionOldBlockAttrs[d.node.attrs.id] = m, JSON.stringify(m) !== JSON.stringify(f) && (m[\"depth-change\"] = m.depth - f.depth, o.updatedBlocks.add(d.node.attrs.id));\n          }\n        }\n        return o.prevTransactionOldBlockAttrs = r, o;\n      }\n    },\n    props: {\n      decorations(e) {\n        const o = this.getState(e);\n        if (o.updatedBlocks.size === 0)\n          return;\n        const i = [];\n        return e.doc.descendants((n, r) => {\n          if (!n.attrs.id || !o.updatedBlocks.has(n.attrs.id))\n            return;\n          const a = o.currentTransactionOldBlockAttrs[n.attrs.id], s = {};\n          for (const [d, u] of Object.entries(a))\n            s[\"data-prev-\" + Sn[d]] = u || \"none\";\n          const l = prosemirror_view__WEBPACK_IMPORTED_MODULE_31__.Decoration.node(r, r + n.nodeSize, {\n            ...s\n          });\n          i.push(l);\n        }), prosemirror_view__WEBPACK_IMPORTED_MODULE_31__.DecorationSet.create(e.doc, i);\n      }\n    }\n  });\n}, Tn = {\n  blockColor: \"data-block-color\",\n  blockStyle: \"data-block-style\",\n  id: \"data-id\",\n  depth: \"data-depth\",\n  depthChange: \"data-depth-change\"\n}, Bn = _tiptap_core__WEBPACK_IMPORTED_MODULE_17__.Node.create({\n  name: \"blockContainer\",\n  group: \"blockContainer\",\n  // A block always contains content, and optionally a blockGroup which contains nested blocks\n  content: \"blockContent blockGroup?\",\n  // Ensures content-specific keyboard handlers trigger first.\n  priority: 50,\n  defining: !0,\n  parseHTML() {\n    return [\n      {\n        tag: \"div\",\n        getAttrs: (t) => {\n          if (typeof t == \"string\")\n            return !1;\n          const e = {};\n          for (const [o, i] of Object.entries(Tn))\n            t.getAttribute(i) && (e[o] = t.getAttribute(i));\n          return t.getAttribute(\"data-node-type\") === \"blockContainer\" ? e : !1;\n        }\n      }\n    ];\n  },\n  renderHTML({ HTMLAttributes: t }) {\n    var n;\n    const e = document.createElement(\"div\");\n    e.className = \"bn-block-outer\", e.setAttribute(\"data-node-type\", \"blockOuter\");\n    for (const [r, a] of Object.entries(t))\n      r !== \"class\" && e.setAttribute(r, a);\n    const o = {\n      ...((n = this.options.domAttributes) == null ? void 0 : n.block) || {},\n      ...t\n    }, i = document.createElement(\"div\");\n    i.className = D(\"bn-block\", o.class), i.setAttribute(\"data-node-type\", this.name);\n    for (const [r, a] of Object.entries(o))\n      r !== \"class\" && i.setAttribute(r, a);\n    return e.appendChild(i), {\n      dom: e,\n      contentDOM: i\n    };\n  },\n  addCommands() {\n    return {\n      // Creates a new text block at a given position.\n      BNCreateBlock: (t) => ({ state: e, dispatch: o }) => {\n        const i = e.schema.nodes.blockContainer.createAndFill();\n        return o && e.tr.insert(t, i).scrollIntoView(), !0;\n      },\n      // Deletes a block at a given position.\n      BNDeleteBlock: (t) => ({ state: e, dispatch: o }) => {\n        const i = b(e.doc, t);\n        if (i === void 0)\n          return !1;\n        const { startPos: n, endPos: r } = i;\n        return o && e.tr.deleteRange(n, r), !0;\n      },\n      // Updates a block at a given position.\n      BNUpdateBlock: (t, e) => ({ state: o, dispatch: i }) => {\n        const n = b(o.doc, t);\n        if (n === void 0)\n          return !1;\n        const { startPos: r, endPos: a, node: s, contentNode: l } = n;\n        if (i) {\n          if (e.children !== void 0) {\n            const h = [];\n            for (const f of e.children)\n              h.push(\n                N(\n                  f,\n                  o.schema,\n                  this.options.editor.schema.styleSchema\n                )\n              );\n            s.childCount === 2 ? o.tr.replace(\n              r + l.nodeSize + 1,\n              a - 1,\n              new prosemirror_model__WEBPACK_IMPORTED_MODULE_20__.Slice(prosemirror_model__WEBPACK_IMPORTED_MODULE_20__.Fragment.from(h), 0, 0)\n            ) : o.tr.insert(\n              r + l.nodeSize,\n              o.schema.nodes.blockGroup.create({}, h)\n            );\n          }\n          const d = l.type.name, u = e.type || d;\n          let p = \"keep\";\n          if (e.content)\n            if (typeof e.content == \"string\")\n              p = [o.schema.text(e.content)];\n            else if (Array.isArray(e.content))\n              p = ie(\n                e.content,\n                o.schema,\n                this.options.editor.schema.styleSchema\n              );\n            else if (e.content.type === \"tableContent\")\n              p = Qe(\n                e.content,\n                o.schema,\n                this.options.editor.schema.styleSchema\n              );\n            else\n              throw new I(e.content.type);\n          else {\n            const h = o.schema.nodes[d].spec.content, f = o.schema.nodes[u].spec.content;\n            h === \"\" || f !== h && (p = []);\n          }\n          p === \"keep\" ? o.tr.setNodeMarkup(\n            r,\n            e.type === void 0 ? void 0 : o.schema.nodes[e.type],\n            {\n              ...l.attrs,\n              ...e.props\n            }\n          ) : o.tr.replaceWith(\n            r,\n            a,\n            o.schema.nodes[u].create(\n              {\n                ...l.attrs,\n                ...e.props\n              },\n              p\n            )\n          ).setSelection(\n            o.schema.nodes[u].spec.content === \"\" ? new prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.NodeSelection(o.tr.doc.resolve(r)) : o.schema.nodes[u].spec.content === \"inline*\" ? new prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.TextSelection(o.tr.doc.resolve(r)) : (\n              // Need to offset the position as we have to get through the\n              // `tableRow` and `tableCell` nodes to get to the\n              // `tableParagraph` node we want to set the selection in.\n              new prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.TextSelection(o.tr.doc.resolve(r + 4))\n            )\n          ), o.tr.setNodeMarkup(r - 1, void 0, {\n            ...s.attrs,\n            ...e.props\n          });\n        }\n        return !0;\n      },\n      // Appends the text contents of a block to the nearest previous block, given a position between them. Children of\n      // the merged block are moved out of it first, rather than also being merged.\n      //\n      // In the example below, the position passed into the function is between Block1 and Block2.\n      //\n      // Block1\n      //    Block2\n      // Block3\n      //    Block4\n      //        Block5\n      //\n      // Becomes:\n      //\n      // Block1\n      //    Block2Block3\n      // Block4\n      //     Block5\n      BNMergeBlocks: (t) => ({ state: e, dispatch: o }) => {\n        const i = e.doc.resolve(t + 1).node().type.name === \"blockContainer\", n = e.doc.resolve(t - 1).node().type.name === \"blockContainer\";\n        if (!i || !n)\n          return !1;\n        const r = b(\n          e.doc,\n          t + 1\n        ), { node: a, contentNode: s, startPos: l, endPos: d, depth: u } = r;\n        if (a.childCount === 2) {\n          const f = e.doc.resolve(\n            l + s.nodeSize + 1\n          ), m = e.doc.resolve(d - 1), g = f.blockRange(m);\n          o && e.tr.lift(g, u - 1);\n        }\n        let p = t - 1, h = b(e.doc, p);\n        for (; h.numChildBlocks > 0; )\n          if (p--, h = b(e.doc, p), h === void 0)\n            return !1;\n        return o && (o(\n          e.tr.deleteRange(l, l + s.nodeSize).replace(\n            p - 1,\n            l,\n            new prosemirror_model__WEBPACK_IMPORTED_MODULE_20__.Slice(s.content, 0, 0)\n          ).scrollIntoView()\n        ), e.tr.setSelection(\n          new prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.TextSelection(e.doc.resolve(p - 1))\n        )), !0;\n      },\n      // Splits a block at a given position. Content after the position is moved to a new block below, at the same\n      // nesting level.\n      BNSplitBlock: (t, e) => ({ state: o, dispatch: i }) => {\n        const n = b(o.doc, t);\n        if (n === void 0)\n          return !1;\n        const { contentNode: r, contentType: a, startPos: s, endPos: l, depth: d } = n, u = o.doc.cut(s + 1, t), p = o.doc.cut(t, l - 1), h = o.schema.nodes.blockContainer.createAndFill(), f = l + 1, m = f + 2;\n        return i && (o.tr.insert(f, h), o.tr.replace(\n          m,\n          m + 1,\n          p.content.size > 0 ? new prosemirror_model__WEBPACK_IMPORTED_MODULE_20__.Slice(\n            prosemirror_model__WEBPACK_IMPORTED_MODULE_20__.Fragment.from(p),\n            d + 2,\n            d + 2\n          ) : void 0\n        ), e && o.tr.setBlockType(\n          m,\n          m,\n          o.schema.node(a).type,\n          r.attrs\n        ), o.tr.setSelection(\n          new prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.TextSelection(o.doc.resolve(m))\n        ), o.tr.replace(\n          s + 1,\n          l - 1,\n          u.content.size > 0 ? new prosemirror_model__WEBPACK_IMPORTED_MODULE_20__.Slice(\n            prosemirror_model__WEBPACK_IMPORTED_MODULE_20__.Fragment.from(u),\n            d + 2,\n            d + 2\n          ) : void 0\n        ), o.tr.scrollIntoView()), !0;\n      }\n    };\n  },\n  addProseMirrorPlugins() {\n    return [Mn(), Cn()];\n  },\n  addKeyboardShortcuts() {\n    return {\n      Backspace: () => this.editor.commands.first(({ commands: i }) => [\n        // Deletes the selection if it's not empty.\n        () => i.deleteSelection(),\n        // Undoes an input rule if one was triggered in the last editor state change.\n        () => i.undoInputRule(),\n        // Reverts block content type to a paragraph if the selection is at the start of the block.\n        () => i.command(({ state: n }) => {\n          const { contentType: r, startPos: a } = b(\n            n.doc,\n            n.selection.from\n          ), s = n.selection.from === a + 1, l = r.name === \"paragraph\";\n          return s && !l ? i.BNUpdateBlock(n.selection.from, {\n            type: \"paragraph\",\n            props: {}\n          }) : !1;\n        }),\n        // Removes a level of nesting if the block is indented if the selection is at the start of the block.\n        () => i.command(({ state: n }) => {\n          const { startPos: r } = b(\n            n.doc,\n            n.selection.from\n          );\n          return n.selection.from === r + 1 ? i.liftListItem(\"blockContainer\") : !1;\n        }),\n        // Merges block with the previous one if it isn't indented, isn't the first block in the doc, and the selection\n        // is at the start of the block.\n        () => i.command(({ state: n }) => {\n          const { depth: r, startPos: a } = b(\n            n.doc,\n            n.selection.from\n          ), s = n.selection.from === a + 1, l = n.selection.empty, d = a === 2, u = a - 1;\n          return !d && s && l && r === 2 ? i.BNMergeBlocks(u) : !1;\n        })\n      ]),\n      Delete: () => this.editor.commands.first(({ commands: i }) => [\n        // Deletes the selection if it's not empty.\n        () => i.deleteSelection(),\n        // Merges block with the next one (at the same nesting level or lower),\n        // if one exists, the block has no children, and the selection is at the\n        // end of the block.\n        () => i.command(({ state: n }) => {\n          const { node: r, depth: a, endPos: s } = b(\n            n.doc,\n            n.selection.from\n          ), l = s === n.doc.nodeSize - 4, d = n.selection.from === s - 1, u = n.selection.empty, p = r.childCount === 2;\n          if (!l && d && u && !p) {\n            let h = a, f = s + 2, m = n.doc.resolve(f).depth;\n            for (; m < h; )\n              h = m, f += 2, m = n.doc.resolve(f).depth;\n            return i.BNMergeBlocks(f - 1);\n          }\n          return !1;\n        })\n      ]),\n      Enter: () => this.editor.commands.first(({ commands: i }) => [\n        // Removes a level of nesting if the block is empty & indented, while the selection is also empty & at the start\n        // of the block.\n        () => i.command(({ state: n }) => {\n          const { node: r, depth: a } = b(\n            n.doc,\n            n.selection.from\n          ), s = n.selection.$anchor.parentOffset === 0, l = n.selection.anchor === n.selection.head, d = r.textContent.length === 0, u = a > 2;\n          return s && l && d && u ? i.liftListItem(\"blockContainer\") : !1;\n        }),\n        // Creates a new block and moves the selection to it if the current one is empty, while the selection is also\n        // empty & at the start of the block.\n        () => i.command(({ state: n, chain: r }) => {\n          const { node: a, endPos: s } = b(\n            n.doc,\n            n.selection.from\n          ), l = n.selection.$anchor.parentOffset === 0, d = n.selection.anchor === n.selection.head, u = a.textContent.length === 0;\n          if (l && d && u) {\n            const p = s + 1, h = p + 2;\n            return r().BNCreateBlock(p).setTextSelection(h).run(), !0;\n          }\n          return !1;\n        }),\n        // Splits the current block, moving content inside that's after the cursor to a new text block below. Also\n        // deletes the selection beforehand, if it's not empty.\n        () => i.command(({ state: n, chain: r }) => {\n          const { node: a } = b(\n            n.doc,\n            n.selection.from\n          ), s = n.selection.$anchor.parentOffset === 0;\n          return a.textContent.length === 0 ? !1 : (r().deleteSelection().BNSplitBlock(n.selection.from, s).run(), !0);\n        })\n      ]),\n      // Always returning true for tab key presses ensures they're not captured by the browser. Otherwise, they blur the\n      // editor since the browser will try to use tab for keyboard navigation.\n      Tab: () => {\n        var i, n, r;\n        return (i = this.options.editor.formattingToolbar) != null && i.shown || (n = this.options.editor.linkToolbar) != null && n.shown || (r = this.options.editor.filePanel) != null && r.shown ? !1 : (this.editor.commands.sinkListItem(\"blockContainer\"), !0);\n      },\n      \"Shift-Tab\": () => {\n        var i, n, r;\n        return (i = this.options.editor.formattingToolbar) != null && i.shown || (n = this.options.editor.linkToolbar) != null && n.shown || (r = this.options.editor.filePanel) != null && r.shown ? !1 : (this.editor.commands.liftListItem(\"blockContainer\"), !0);\n      }\n    };\n  }\n}), Ln = _tiptap_core__WEBPACK_IMPORTED_MODULE_17__.Node.create({\n  name: \"blockGroup\",\n  group: \"blockGroup\",\n  content: \"blockContainer+\",\n  parseHTML() {\n    return [\n      {\n        tag: \"div\",\n        getAttrs: (t) => typeof t == \"string\" ? !1 : t.getAttribute(\"data-node-type\") === \"blockGroup\" ? null : !1\n      }\n    ];\n  },\n  renderHTML({ HTMLAttributes: t }) {\n    var i;\n    const e = {\n      ...((i = this.options.domAttributes) == null ? void 0 : i.blockGroup) || {},\n      ...t\n    }, o = document.createElement(\"div\");\n    o.className = D(\n      \"bn-block-group\",\n      e.class\n    ), o.setAttribute(\"data-node-type\", \"blockGroup\");\n    for (const [n, r] of Object.entries(e))\n      n !== \"class\" && o.setAttribute(n, r);\n    return {\n      dom: o,\n      contentDOM: o\n    };\n  }\n}), In = _tiptap_core__WEBPACK_IMPORTED_MODULE_17__.Node.create({\n  name: \"doc\",\n  topNode: !0,\n  content: \"blockGroup\"\n}), An = (t) => {\n  var o;\n  const e = [\n    _tiptap_core__WEBPACK_IMPORTED_MODULE_17__.extensions.ClipboardTextSerializer,\n    _tiptap_core__WEBPACK_IMPORTED_MODULE_17__.extensions.Commands,\n    _tiptap_core__WEBPACK_IMPORTED_MODULE_17__.extensions.Editable,\n    _tiptap_core__WEBPACK_IMPORTED_MODULE_17__.extensions.FocusEvents,\n    _tiptap_core__WEBPACK_IMPORTED_MODULE_17__.extensions.Tabindex,\n    // DevTools,\n    _tiptap_extension_gapcursor__WEBPACK_IMPORTED_MODULE_12__.Gapcursor,\n    // DropCursor,\n    J.configure({\n      types: [\"blockContainer\"]\n    }),\n    _tiptap_extension_hard_break__WEBPACK_IMPORTED_MODULE_13__.HardBreak.extend({ priority: 10 }),\n    // Comments,\n    // basics:\n    _tiptap_extension_text__WEBPACK_IMPORTED_MODULE_16__.Text,\n    // marks:\n    _tiptap_extension_link__WEBPACK_IMPORTED_MODULE_15__.Link,\n    ...Object.values(t.styleSpecs).map((i) => i.implementation.mark),\n    vn,\n    _n,\n    wn,\n    // make sure escape blurs editor, so that we can tab to other elements in the host page (accessibility)\n    _tiptap_core__WEBPACK_IMPORTED_MODULE_17__.Extension.create({\n      name: \"OverrideEscape\",\n      addKeyboardShortcuts() {\n        return {\n          Escape: () => t.editor.suggestionMenus.shown ? !1 : this.editor.commands.blur()\n        };\n      }\n    }),\n    // nodes\n    In,\n    Bn.configure({\n      editor: t.editor,\n      domAttributes: t.domAttributes\n    }),\n    Ln.configure({\n      domAttributes: t.domAttributes\n    }),\n    ...Object.values(t.inlineContentSpecs).filter((i) => i.config !== \"link\" && i.config !== \"text\").map((i) => i.implementation.node.configure({\n      editor: t.editor\n    })),\n    ...Object.values(t.blockSpecs).flatMap((i) => [\n      // dependent nodes (e.g.: tablecell / row)\n      ...(i.implementation.requiredExtensions || []).map(\n        (n) => n.configure({\n          editor: t.editor,\n          domAttributes: t.domAttributes\n        })\n      ),\n      // the actual node itself\n      i.implementation.node.configure({\n        editor: t.editor,\n        domAttributes: t.domAttributes\n      })\n    ]),\n    bn(t.editor),\n    yn(t.editor),\n    _tiptap_extension_dropcursor__WEBPACK_IMPORTED_MODULE_11__.Dropcursor.configure({ width: 5, color: \"#ddeeff\" }),\n    // This needs to be at the bottom of this list, because Key events (such as enter, when selecting a /command),\n    // should be handled before Enter handlers in other components like splitListItem\n    ...t.trailingBlock === void 0 || t.trailingBlock ? [xn] : []\n  ];\n  if (t.collaboration) {\n    if (e.push(\n      _tiptap_extension_collaboration__WEBPACK_IMPORTED_MODULE_9__[\"default\"].configure({\n        fragment: t.collaboration.fragment\n      })\n    ), (o = t.collaboration.provider) != null && o.awareness) {\n      const i = (n) => {\n        const r = document.createElement(\"span\");\n        r.classList.add(\"collaboration-cursor__caret\"), r.setAttribute(\"style\", `border-color: ${n.color}`);\n        const a = document.createElement(\"span\");\n        a.classList.add(\"collaboration-cursor__label\"), a.setAttribute(\"style\", `background-color: ${n.color}`), a.insertBefore(document.createTextNode(n.name), null);\n        const s = document.createTextNode(\"⁠\"), l = document.createTextNode(\"⁠\");\n        return r.insertBefore(s, null), r.insertBefore(a, null), r.insertBefore(l, null), r;\n      };\n      e.push(\n        _tiptap_extension_collaboration_cursor__WEBPACK_IMPORTED_MODULE_10__[\"default\"].configure({\n          user: t.collaboration.user,\n          render: t.collaboration.renderCursor || i,\n          provider: t.collaboration.provider\n        })\n      );\n    }\n  } else\n    e.push(_tiptap_extension_history__WEBPACK_IMPORTED_MODULE_14__.History);\n  return e;\n};\nfunction Nn(t, e) {\n  const o = [];\n  return t.forEach((i, n, r) => {\n    r !== e && o.push(i);\n  }), prosemirror_model__WEBPACK_IMPORTED_MODULE_20__.Fragment.from(o);\n}\nfunction Pn(t, e) {\n  let o = prosemirror_model__WEBPACK_IMPORTED_MODULE_20__.Fragment.from(t.content);\n  for (let i = 0; i < o.childCount; i++)\n    if (o.child(i).type.spec.group === \"blockContent\") {\n      const n = [o.child(i)];\n      if (i + 1 < o.childCount && o.child(i + 1).type.spec.group === \"blockGroup\") {\n        const a = o.child(i + 1).child(0).child(0);\n        (a.type.name === \"bulletListItem\" || a.type.name === \"numberedListItem\") && (n.push(o.child(i + 1)), o = Nn(o, i + 1));\n      }\n      const r = e.state.schema.nodes.blockContainer.create(\n        void 0,\n        n\n      );\n      o = o.replaceChild(i, r);\n    }\n  return new prosemirror_model__WEBPACK_IMPORTED_MODULE_20__.Slice(o, t.openStart, t.openEnd);\n}\nfunction me(t) {\n  return t && Object.fromEntries(\n    Object.entries(t).filter(([, e]) => e !== void 0)\n  );\n}\nclass Te {\n  constructor(e) {\n    c(this, \"blockSpecs\");\n    c(this, \"inlineContentSpecs\");\n    c(this, \"styleSpecs\");\n    c(this, \"blockSchema\");\n    c(this, \"inlineContentSchema\");\n    c(this, \"styleSchema\");\n    // Helper so that you can use typeof schema.BlockNoteEditor\n    c(this, \"BlockNoteEditor\", \"only for types\");\n    c(this, \"Block\", \"only for types\");\n    c(this, \"PartialBlock\", \"only for types\");\n    this.blockSpecs = me(e == null ? void 0 : e.blockSpecs) || ht, this.inlineContentSpecs = me(e == null ? void 0 : e.inlineContentSpecs) || ft, this.styleSpecs = me(e == null ? void 0 : e.styleSpecs) || mt, this.blockSchema = lt(this.blockSpecs), this.inlineContentSchema = dt(\n      this.inlineContentSpecs\n    ), this.styleSchema = ut(this.styleSpecs);\n  }\n  static create(e) {\n    return new Te(e);\n  }\n}\nclass Hn extends _tiptap_core__WEBPACK_IMPORTED_MODULE_17__.Editor {\n  constructor(o, i) {\n    super({ ...o, content: void 0 });\n    c(this, \"_state\");\n    /**\n     * Mounts / unmounts the editor to a dom element\n     *\n     * @param element DOM element to mount to, ur null / undefined to destroy\n     */\n    c(this, \"mount\", (o) => {\n      o ? (this.options.element = o, this.createViewAlternative()) : this.destroy();\n    });\n    const n = this.schema;\n    let r;\n    const a = n.nodes.doc.createAndFill;\n    n.nodes.doc.createAndFill = (...l) => {\n      if (r)\n        return r;\n      const d = a.apply(n.nodes.doc, l), u = JSON.parse(JSON.stringify(d.toJSON()));\n      return u.content[0].content[0].attrs.id = \"initialBlockId\", r = prosemirror_model__WEBPACK_IMPORTED_MODULE_20__.Node.fromJSON(n, u), r;\n    };\n    let s;\n    try {\n      const l = o == null ? void 0 : o.content.map(\n        (d) => N(d, this.schema, i).toJSON()\n      );\n      s = (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_17__.createDocument)(\n        {\n          type: \"doc\",\n          content: [\n            {\n              type: \"blockGroup\",\n              content: l\n            }\n          ]\n        },\n        this.schema,\n        this.options.parseOptions\n      );\n    } catch (l) {\n      throw console.error(\n        \"Error creating document from blocks passed as `initialContent`. Caused by exception: \",\n        l\n      ), new Error(\n        \"Error creating document from blocks passed as `initialContent`:\\n\" + +JSON.stringify(o.content)\n      );\n    }\n    this._state = prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.EditorState.create({\n      doc: s,\n      schema: this.schema\n      // selection: selection || undefined,\n    });\n  }\n  get state() {\n    return this.view && (this._state = this.view.state), this._state;\n  }\n  createView() {\n  }\n  /**\n   * Replace the default `createView` method with a custom one - which we call on mount\n   */\n  createViewAlternative() {\n    queueMicrotask(() => {\n      this.view = new prosemirror_view__WEBPACK_IMPORTED_MODULE_31__.EditorView(\n        { mount: this.options.element },\n        // use mount option so that we reuse the existing element instead of creating a new one\n        {\n          ...this.options.editorProps,\n          // @ts-ignore\n          dispatchTransaction: this.dispatchTransaction.bind(this),\n          state: this.state\n        }\n      );\n      const o = this.state.reconfigure({\n        plugins: this.extensionManager.plugins\n      });\n      this.view.updateState(o), this.createNodeViews();\n    });\n  }\n}\nconst Un = new prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.PluginKey(\"blocknote-placeholder\"), Dn = (t, e) => new prosemirror_state__WEBPACK_IMPORTED_MODULE_19__.Plugin({\n  key: Un,\n  view: () => {\n    const o = document.createElement(\"style\");\n    document.head.appendChild(o);\n    const i = o.sheet, n = (a = \"\") => `.bn-block-content${a} .bn-inline-content:has(> .ProseMirror-trailingBreak):before`, r = (a, s = !0) => {\n      const l = s ? \"[data-is-empty-and-focused]\" : \"\";\n      if (a === \"default\")\n        return n(l);\n      const d = `[data-content-type=\"${a}\"]`;\n      return n(l + d);\n    };\n    for (const [a, s] of Object.entries(e)) {\n      const l = a === \"default\";\n      i.insertRule(\n        `${r(a, l)}{ content: ${JSON.stringify(\n          s\n        )}; }`\n      ), l || i.insertRule(\n        `${r(a, !0)}{ content: ${JSON.stringify(\n          s\n        )}; }`\n      );\n    }\n    return {\n      destroy: () => {\n        document.head.removeChild(o);\n      }\n    };\n  },\n  props: {\n    // TODO: maybe also add placeholder for empty document (\"e.g.: start writing..\")\n    decorations: (o) => {\n      const { doc: i, selection: n } = o;\n      if (!t.isEditable || !n.empty)\n        return;\n      const r = n.$anchor, a = r.parent;\n      if (a.content.size > 0)\n        return null;\n      const s = r.before(), l = prosemirror_view__WEBPACK_IMPORTED_MODULE_31__.Decoration.node(s, s + a.nodeSize, {\n        \"data-is-empty-and-focused\": \"true\"\n      });\n      return prosemirror_view__WEBPACK_IMPORTED_MODULE_31__.DecorationSet.create(i, [l]);\n    }\n  }\n});\nconst On = {\n  enableInputRules: !0,\n  enablePasteRules: !0,\n  enableCoreExtensions: !1\n};\nclass _t {\n  constructor(e) {\n    c(this, \"_tiptapEditor\");\n    c(this, \"blockCache\", /* @__PURE__ */ new WeakMap());\n    c(this, \"dictionary\");\n    c(this, \"schema\");\n    c(this, \"blockImplementations\");\n    c(this, \"inlineContentImplementations\");\n    c(this, \"styleImplementations\");\n    c(this, \"formattingToolbar\");\n    c(this, \"linkToolbar\");\n    c(this, \"sideMenu\");\n    c(this, \"suggestionMenus\");\n    c(this, \"filePanel\");\n    c(this, \"tableHandles\");\n    c(this, \"uploadFile\");\n    var l, d, u, p, h, f, m, g;\n    this.options = e;\n    const o = e;\n    if (o.onEditorContentChange)\n      throw new Error(\n        \"onEditorContentChange initialization option is deprecated, use <BlockNoteView onChange={...} />, the useEditorChange(...) hook, or editor.onChange(...)\"\n      );\n    if (o.onTextCursorPositionChange)\n      throw new Error(\n        \"onTextCursorPositionChange initialization option is deprecated, use <BlockNoteView onSelectionChange={...} />, the useEditorSelectionChange(...) hook, or editor.onSelectionChange(...)\"\n      );\n    if (o.onEditorReady)\n      throw new Error(\n        \"onEditorReady is deprecated. Editor is immediately ready for use after creation.\"\n      );\n    if (o.editable)\n      throw new Error(\n        \"editable initialization option is deprecated, use <BlockNoteView editable={true/false} />, or alternatively editor.isEditable = true/false\"\n      );\n    this.dictionary = e.dictionary || Ze;\n    const i = {\n      defaultStyles: !0,\n      schema: e.schema || Te.create(),\n      ...e,\n      placeholders: {\n        ...this.dictionary.placeholders,\n        ...e.placeholders\n      }\n    };\n    this.schema = i.schema, this.blockImplementations = i.schema.blockSpecs, this.inlineContentImplementations = i.schema.inlineContentSpecs, this.styleImplementations = i.schema.styleSpecs, this.formattingToolbar = new Yi(this), this.linkToolbar = new tn(this), this.sideMenu = new un(this), this.suggestionMenus = new rn(this), this.filePanel = new Xi(this), S(\"table\", this) && (this.tableHandles = new gn(this));\n    const n = An({\n      editor: this,\n      domAttributes: i.domAttributes || {},\n      blockSchema: this.schema.blockSchema,\n      blockSpecs: this.schema.blockSpecs,\n      styleSpecs: this.schema.styleSpecs,\n      inlineContentSpecs: this.schema.inlineContentSpecs,\n      collaboration: i.collaboration,\n      trailingBlock: i.trailingBlock\n    }), r = _tiptap_core__WEBPACK_IMPORTED_MODULE_17__.Extension.create({\n      name: \"BlockNoteUIExtension\",\n      addProseMirrorPlugins: () => [\n        this.formattingToolbar.plugin,\n        this.linkToolbar.plugin,\n        this.sideMenu.plugin,\n        this.suggestionMenus.plugin,\n        ...this.filePanel ? [this.filePanel.plugin] : [],\n        ...this.tableHandles ? [this.tableHandles.plugin] : [],\n        Dn(this, i.placeholders)\n      ]\n    });\n    n.push(r), this.uploadFile = i.uploadFile, i.collaboration && i.initialContent && console.warn(\n      \"When using Collaboration, initialContent might cause conflicts, because changes should come from the collaboration provider\"\n    );\n    const a = i.initialContent || (e.collaboration ? [\n      {\n        type: \"paragraph\",\n        id: \"initialBlockId\"\n      }\n    ] : [\n      {\n        type: \"paragraph\",\n        id: J.options.generateID()\n      }\n    ]);\n    if (!Array.isArray(a) || a.length === 0)\n      throw new Error(\n        \"initialContent must be a non-empty array of blocks, received: \" + a\n      );\n    const s = {\n      ...On,\n      ...i._tiptapOptions,\n      content: a,\n      extensions: i.enableBlockNoteExtensions === !1 ? ((l = i._tiptapOptions) == null ? void 0 : l.extensions) || [] : [...((d = i._tiptapOptions) == null ? void 0 : d.extensions) || [], ...n],\n      editorProps: {\n        ...(u = i._tiptapOptions) == null ? void 0 : u.editorProps,\n        attributes: {\n          ...(h = (p = i._tiptapOptions) == null ? void 0 : p.editorProps) == null ? void 0 : h.attributes,\n          ...(f = i.domAttributes) == null ? void 0 : f.editor,\n          class: D(\n            \"bn-editor\",\n            i.defaultStyles ? \"bn-default-styles\" : \"\",\n            ((g = (m = i.domAttributes) == null ? void 0 : m.editor) == null ? void 0 : g.class) || \"\"\n          )\n        },\n        transformPasted: Pn\n      }\n    };\n    this._tiptapEditor = new Hn(\n      s,\n      this.schema.styleSchema\n    );\n  }\n  static create(e = {}) {\n    return new _t(e);\n  }\n  /**\n   * Mount the editor to a parent DOM element. Call mount(undefined) to clean up\n   *\n   * @warning Not needed for React, use BlockNoteView to take care of this\n   */\n  mount(e) {\n    this._tiptapEditor.mount(e);\n  }\n  get prosemirrorView() {\n    return this._tiptapEditor.view;\n  }\n  get domElement() {\n    return this._tiptapEditor.view.dom;\n  }\n  isFocused() {\n    return this._tiptapEditor.view.hasFocus();\n  }\n  focus() {\n    this._tiptapEditor.view.focus();\n  }\n  /**\n   * @deprecated, use `editor.document` instead\n   */\n  get topLevelBlocks() {\n    return this.topLevelBlocks;\n  }\n  /**\n   * Gets a snapshot of all top-level (non-nested) blocks in the editor.\n   * @returns A snapshot of all top-level (non-nested) blocks in the editor.\n   */\n  get document() {\n    const e = [];\n    return this._tiptapEditor.state.doc.firstChild.descendants((o) => (e.push(\n      _(\n        o,\n        this.schema.blockSchema,\n        this.schema.inlineContentSchema,\n        this.schema.styleSchema,\n        this.blockCache\n      )\n    ), !1)), e;\n  }\n  /**\n   * Gets a snapshot of an existing block from the editor.\n   * @param blockIdentifier The identifier of an existing block that should be retrieved.\n   * @returns The block that matches the identifier, or `undefined` if no matching block was found.\n   */\n  getBlock(e) {\n    const o = typeof e == \"string\" ? e : e.id;\n    let i;\n    return this._tiptapEditor.state.doc.firstChild.descendants((n) => typeof i < \"u\" ? !1 : n.type.name !== \"blockContainer\" || n.attrs.id !== o ? !0 : (i = _(\n      n,\n      this.schema.blockSchema,\n      this.schema.inlineContentSchema,\n      this.schema.styleSchema,\n      this.blockCache\n    ), !1)), i;\n  }\n  /**\n   * Traverses all blocks in the editor depth-first, and executes a callback for each.\n   * @param callback The callback to execute for each block. Returning `false` stops the traversal.\n   * @param reverse Whether the blocks should be traversed in reverse order.\n   */\n  forEachBlock(e, o = !1) {\n    const i = this.document.slice();\n    o && i.reverse();\n    function n(r) {\n      for (const a of r) {\n        if (!e(a))\n          return !1;\n        const s = o ? a.children.slice().reverse() : a.children;\n        if (!n(s))\n          return !1;\n      }\n      return !0;\n    }\n    n(i);\n  }\n  /**\n   * Executes a callback whenever the editor's contents change.\n   * @param callback The callback to execute.\n   */\n  onEditorContentChange(e) {\n    this._tiptapEditor.on(\"update\", e);\n  }\n  /**\n   * Executes a callback whenever the editor's selection changes.\n   * @param callback The callback to execute.\n   */\n  onEditorSelectionChange(e) {\n    this._tiptapEditor.on(\"selectionUpdate\", e);\n  }\n  /**\n   * Gets a snapshot of the current text cursor position.\n   * @returns A snapshot of the current text cursor position.\n   */\n  getTextCursorPosition() {\n    const { node: e, depth: o, startPos: i, endPos: n } = b(\n      this._tiptapEditor.state.doc,\n      this._tiptapEditor.state.selection.from\n    ), r = this._tiptapEditor.state.doc.resolve(n).index(o - 1), a = this._tiptapEditor.state.doc.resolve(n + 1).node().childCount;\n    let s;\n    r > 0 && (s = this._tiptapEditor.state.doc.resolve(i - 2).node());\n    let l;\n    return r < a - 1 && (l = this._tiptapEditor.state.doc.resolve(n + 2).node()), {\n      block: _(\n        e,\n        this.schema.blockSchema,\n        this.schema.inlineContentSchema,\n        this.schema.styleSchema,\n        this.blockCache\n      ),\n      prevBlock: s === void 0 ? void 0 : _(\n        s,\n        this.schema.blockSchema,\n        this.schema.inlineContentSchema,\n        this.schema.styleSchema,\n        this.blockCache\n      ),\n      nextBlock: l === void 0 ? void 0 : _(\n        l,\n        this.schema.blockSchema,\n        this.schema.inlineContentSchema,\n        this.schema.styleSchema,\n        this.blockCache\n      )\n    };\n  }\n  /**\n   * Sets the text cursor position to the start or end of an existing block. Throws an error if the target block could\n   * not be found.\n   * @param targetBlock The identifier of an existing block that the text cursor should be moved to.\n   * @param placement Whether the text cursor should be placed at the start or end of the block.\n   */\n  setTextCursorPosition(e, o = \"start\") {\n    const i = typeof e == \"string\" ? e : e.id, { posBeforeNode: n } = Ce(i, this._tiptapEditor.state.doc), { startPos: r, contentNode: a } = b(\n      this._tiptapEditor.state.doc,\n      n + 2\n    ), s = this.schema.blockSchema[a.type.name].content;\n    if (s === \"none\") {\n      this._tiptapEditor.commands.setNodeSelection(r);\n      return;\n    }\n    if (s === \"inline\")\n      o === \"start\" ? this._tiptapEditor.commands.setTextSelection(r + 1) : this._tiptapEditor.commands.setTextSelection(\n        r + a.nodeSize - 1\n      );\n    else if (s === \"table\")\n      o === \"start\" ? this._tiptapEditor.commands.setTextSelection(r + 4) : this._tiptapEditor.commands.setTextSelection(\n        r + a.nodeSize - 4\n      );\n    else\n      throw new I(s);\n  }\n  /**\n   * Gets a snapshot of the current selection.\n   */\n  getSelection() {\n    if (this._tiptapEditor.state.selection.from === this._tiptapEditor.state.selection.to || \"node\" in this._tiptapEditor.state.selection)\n      return;\n    const e = [];\n    return this._tiptapEditor.state.doc.descendants((o, i) => o.type.spec.group !== \"blockContent\" || i + o.nodeSize < this._tiptapEditor.state.selection.from || i > this._tiptapEditor.state.selection.to ? !0 : (e.push(\n      _(\n        this._tiptapEditor.state.doc.resolve(i).node(),\n        this.schema.blockSchema,\n        this.schema.inlineContentSchema,\n        this.schema.styleSchema,\n        this.blockCache\n      )\n    ), !1)), { blocks: e };\n  }\n  /**\n   * Checks if the editor is currently editable, or if it's locked.\n   * @returns True if the editor is editable, false otherwise.\n   */\n  get isEditable() {\n    return this._tiptapEditor.isEditable;\n  }\n  /**\n   * Makes the editor editable or locks it, depending on the argument passed.\n   * @param editable True to make the editor editable, or false to lock it.\n   */\n  set isEditable(e) {\n    this._tiptapEditor.options.editable !== e && this._tiptapEditor.setEditable(e);\n  }\n  /**\n   * Inserts new blocks into the editor. If a block's `id` is undefined, BlockNote generates one automatically. Throws an\n   * error if the reference block could not be found.\n   * @param blocksToInsert An array of partial blocks that should be inserted.\n   * @param referenceBlock An identifier for an existing block, at which the new blocks should be inserted.\n   * @param placement Whether the blocks should be inserted just before, just after, or nested inside the\n   * `referenceBlock`. Inserts the blocks at the start of the existing block's children if \"nested\" is used.\n   */\n  insertBlocks(e, o, i = \"before\") {\n    return Pi(e, o, i, this);\n  }\n  /**\n   * Updates an existing block in the editor. Since updatedBlock is a PartialBlock object, some fields might not be\n   * defined. These undefined fields are kept as-is from the existing block. Throws an error if the block to update could\n   * not be found.\n   * @param blockToUpdate The block that should be updated.\n   * @param update A partial block which defines how the existing block should be changed.\n   */\n  updateBlock(e, o) {\n    return Hi(e, o, this);\n  }\n  /**\n   * Removes existing blocks from the editor. Throws an error if any of the blocks could not be found.\n   * @param blocksToRemove An array of identifiers for existing blocks that should be removed.\n   */\n  removeBlocks(e) {\n    return Ui(e, this);\n  }\n  /**\n   * Replaces existing blocks in the editor with new blocks. If the blocks that should be removed are not adjacent or\n   * are at different nesting levels, `blocksToInsert` will be inserted at the position of the first block in\n   * `blocksToRemove`. Throws an error if any of the blocks to remove could not be found.\n   * @param blocksToRemove An array of blocks that should be replaced.\n   * @param blocksToInsert An array of partial blocks to replace the old ones with.\n   */\n  replaceBlocks(e, o) {\n    return Di(e, o, this);\n  }\n  /**\n   * Insert a piece of content at the current cursor position.\n   *\n   * @param content can be a string, or array of partial inline content elements\n   */\n  insertInlineContent(e) {\n    const o = ie(\n      e,\n      this._tiptapEditor.schema,\n      this.schema.styleSchema\n    );\n    Oi(\n      {\n        from: this._tiptapEditor.state.selection.from,\n        to: this._tiptapEditor.state.selection.to\n      },\n      o,\n      this\n    );\n  }\n  /**\n   * Gets the active text styles at the text cursor position or at the end of the current selection if it's active.\n   */\n  getActiveStyles() {\n    const e = {}, o = this._tiptapEditor.state.selection.$to.marks();\n    for (const i of o) {\n      const n = this.schema.styleSchema[i.type.name];\n      if (!n) {\n        console.warn(\"mark not found in styleschema\", i.type.name);\n        continue;\n      }\n      n.propSchema === \"boolean\" ? e[n.type] = !0 : e[n.type] = i.attrs.stringValue;\n    }\n    return e;\n  }\n  /**\n   * Adds styles to the currently selected content.\n   * @param styles The styles to add.\n   */\n  addStyles(e) {\n    for (const [o, i] of Object.entries(e)) {\n      const n = this.schema.styleSchema[o];\n      if (!n)\n        throw new Error(`style ${o} not found in styleSchema`);\n      if (n.propSchema === \"boolean\")\n        this._tiptapEditor.commands.setMark(o);\n      else if (n.propSchema === \"string\")\n        this._tiptapEditor.commands.setMark(o, { stringValue: i });\n      else\n        throw new I(n.propSchema);\n    }\n  }\n  /**\n   * Removes styles from the currently selected content.\n   * @param styles The styles to remove.\n   */\n  removeStyles(e) {\n    for (const o of Object.keys(e))\n      this._tiptapEditor.commands.unsetMark(o);\n  }\n  /**\n   * Toggles styles on the currently selected content.\n   * @param styles The styles to toggle.\n   */\n  toggleStyles(e) {\n    for (const [o, i] of Object.entries(e)) {\n      const n = this.schema.styleSchema[o];\n      if (!n)\n        throw new Error(`style ${o} not found in styleSchema`);\n      if (n.propSchema === \"boolean\")\n        this._tiptapEditor.commands.toggleMark(o);\n      else if (n.propSchema === \"string\")\n        this._tiptapEditor.commands.toggleMark(o, { stringValue: i });\n      else\n        throw new I(n.propSchema);\n    }\n  }\n  /**\n   * Gets the currently selected text.\n   */\n  getSelectedText() {\n    return this._tiptapEditor.state.doc.textBetween(\n      this._tiptapEditor.state.selection.from,\n      this._tiptapEditor.state.selection.to\n    );\n  }\n  /**\n   * Gets the URL of the last link in the current selection, or `undefined` if there are no links in the selection.\n   */\n  getSelectedLinkUrl() {\n    return this._tiptapEditor.getAttributes(\"link\").href;\n  }\n  /**\n   * Creates a new link to replace the selected content.\n   * @param url The link URL.\n   * @param text The text to display the link with.\n   */\n  createLink(e, o) {\n    if (e === \"\")\n      return;\n    const { from: i, to: n } = this._tiptapEditor.state.selection;\n    o || (o = this._tiptapEditor.state.doc.textBetween(i, n));\n    const r = this._tiptapEditor.schema.mark(\"link\", { href: e });\n    this._tiptapEditor.view.dispatch(\n      this._tiptapEditor.view.state.tr.insertText(o, i, n).addMark(i, i + o.length, r)\n    );\n  }\n  /**\n   * Checks if the block containing the text cursor can be nested.\n   */\n  canNestBlock() {\n    const { startPos: e, depth: o } = b(\n      this._tiptapEditor.state.doc,\n      this._tiptapEditor.state.selection.from\n    );\n    return this._tiptapEditor.state.doc.resolve(e).index(o - 1) > 0;\n  }\n  /**\n   * Nests the block containing the text cursor into the block above it.\n   */\n  nestBlock() {\n    this._tiptapEditor.commands.sinkListItem(\"blockContainer\");\n  }\n  /**\n   * Checks if the block containing the text cursor is nested.\n   */\n  canUnnestBlock() {\n    const { depth: e } = b(\n      this._tiptapEditor.state.doc,\n      this._tiptapEditor.state.selection.from\n    );\n    return e > 2;\n  }\n  /**\n   * Lifts the block containing the text cursor out of its parent.\n   */\n  unnestBlock() {\n    this._tiptapEditor.commands.liftListItem(\"blockContainer\");\n  }\n  // TODO: Fix when implementing HTML/Markdown import & export\n  /**\n   * Serializes blocks into an HTML string. To better conform to HTML standards, children of blocks which aren't list\n   * items are un-nested in the output HTML.\n   * @param blocks An array of blocks that should be serialized into HTML.\n   * @returns The blocks, serialized as an HTML string.\n   */\n  async blocksToHTMLLossy(e = this.document) {\n    return ne(\n      this._tiptapEditor.schema,\n      this\n    ).exportBlocks(e);\n  }\n  /**\n   * Parses blocks from an HTML string. Tries to create `Block` objects out of any HTML block-level elements, and\n   * `InlineNode` objects from any HTML inline elements, though not all element types are recognized. If BlockNote\n   * doesn't recognize an HTML element's tag, it will parse it as a paragraph or plain text.\n   * @param html The HTML string to parse blocks from.\n   * @returns The blocks parsed from the HTML string.\n   */\n  async tryParseHTMLToBlocks(e) {\n    return kt(\n      e,\n      this.schema.blockSchema,\n      this.schema.inlineContentSchema,\n      this.schema.styleSchema,\n      this._tiptapEditor.schema\n    );\n  }\n  /**\n   * Serializes blocks into a Markdown string. The output is simplified as Markdown does not support all features of\n   * BlockNote - children of blocks which aren't list items are un-nested and certain styles are removed.\n   * @param blocks An array of blocks that should be serialized into Markdown.\n   * @returns The blocks, serialized as a Markdown string.\n   */\n  async blocksToMarkdownLossy(e = this.document) {\n    return Vi(e, this._tiptapEditor.schema, this);\n  }\n  /**\n   * Creates a list of blocks from a Markdown string. Tries to create `Block` and `InlineNode` objects based on\n   * Markdown syntax, though not all symbols are recognized. If BlockNote doesn't recognize a symbol, it will parse it\n   * as text.\n   * @param markdown The Markdown string to parse blocks from.\n   * @returns The blocks parsed from the Markdown string.\n   */\n  async tryParseMarkdownToBlocks(e) {\n    return Ki(\n      e,\n      this.schema.blockSchema,\n      this.schema.inlineContentSchema,\n      this.schema.styleSchema,\n      this._tiptapEditor.schema\n    );\n  }\n  /**\n   * Updates the user info for the current user that's shown to other collaborators.\n   */\n  updateCollaborationUserInfo(e) {\n    if (!this.options.collaboration)\n      throw new Error(\n        \"Cannot update collaboration user info when collaboration is disabled.\"\n      );\n    this._tiptapEditor.commands.updateUser(e);\n  }\n  /**\n   * A callback function that runs whenever the editor's contents change.\n   *\n   * @param callback The callback to execute.\n   * @returns A function to remove the callback.\n   */\n  onChange(e) {\n    const o = () => {\n      e(this);\n    };\n    return this._tiptapEditor.on(\"update\", o), () => {\n      this._tiptapEditor.off(\"update\", o);\n    };\n  }\n  /**\n   * A callback function that runs whenever the text cursor position or selection changes.\n   *\n   * @param callback The callback to execute.\n   * @returns A function to remove the callback.\n   */\n  onSelectionChange(e) {\n    const o = () => {\n      e(this);\n    };\n    return this._tiptapEditor.on(\"selectionUpdate\", o), () => {\n      this._tiptapEditor.off(\"selectionUpdate\", o);\n    };\n  }\n}\nfunction Rn(t) {\n  let e = t.getTextCursorPosition().block, o = t.schema.blockSchema[e.type].content;\n  for (; o === \"none\"; )\n    e = t.getTextCursorPosition().nextBlock, o = t.schema.blockSchema[e.type].content, t.setTextCursorPosition(e, \"end\");\n}\nfunction C(t, e) {\n  const o = t.getTextCursorPosition().block;\n  if (o.content === void 0)\n    throw new Error(\"Slash Menu open in a block that doesn't contain content.\");\n  Array.isArray(o.content) && (o.content.length === 1 && Z(o.content[0]) && o.content[0].type === \"text\" && o.content[0].text === \"/\" || o.content.length === 0) ? t.updateBlock(o, e) : (t.insertBlocks([e], o, \"after\"), t.setTextCursorPosition(\n    t.getTextCursorPosition().nextBlock,\n    \"end\"\n  ));\n  const i = t.getTextCursorPosition().block;\n  return Rn(t), i;\n}\nfunction Dr(t) {\n  const e = [];\n  return S(\"heading\", t) && e.push(\n    {\n      onItemClick: () => {\n        C(t, {\n          type: \"heading\",\n          props: { level: 1 }\n        });\n      },\n      badge: R(\"Mod-Alt-1\"),\n      key: \"heading\",\n      ...t.dictionary.slash_menu.heading\n    },\n    {\n      onItemClick: () => {\n        C(t, {\n          type: \"heading\",\n          props: { level: 2 }\n        });\n      },\n      badge: R(\"Mod-Alt-2\"),\n      key: \"heading_2\",\n      ...t.dictionary.slash_menu.heading_2\n    },\n    {\n      onItemClick: () => {\n        C(t, {\n          type: \"heading\",\n          props: { level: 3 }\n        });\n      },\n      badge: R(\"Mod-Alt-3\"),\n      key: \"heading_3\",\n      ...t.dictionary.slash_menu.heading_3\n    }\n  ), S(\"numberedListItem\", t) && e.push({\n    onItemClick: () => {\n      C(t, {\n        type: \"numberedListItem\"\n      });\n    },\n    badge: R(\"Mod-Shift-7\"),\n    key: \"numbered_list\",\n    ...t.dictionary.slash_menu.numbered_list\n  }), S(\"bulletListItem\", t) && e.push({\n    onItemClick: () => {\n      C(t, {\n        type: \"bulletListItem\"\n      });\n    },\n    badge: R(\"Mod-Shift-8\"),\n    key: \"bullet_list\",\n    ...t.dictionary.slash_menu.bullet_list\n  }), S(\"paragraph\", t) && e.push({\n    onItemClick: () => {\n      C(t, {\n        type: \"paragraph\"\n      });\n    },\n    badge: R(\"Mod-Alt-0\"),\n    key: \"paragraph\",\n    ...t.dictionary.slash_menu.paragraph\n  }), S(\"table\", t) && e.push({\n    onItemClick: () => {\n      C(t, {\n        type: \"table\",\n        content: {\n          type: \"tableContent\",\n          rows: [\n            {\n              cells: [\"\", \"\", \"\"]\n            },\n            {\n              cells: [\"\", \"\", \"\"]\n            }\n          ]\n        }\n      });\n    },\n    badge: void 0,\n    key: \"table\",\n    ...t.dictionary.slash_menu.table\n  }), S(\"image\", t) && e.push({\n    onItemClick: () => {\n      const o = C(t, {\n        type: \"image\"\n      });\n      t.prosemirrorView.dispatch(\n        t._tiptapEditor.state.tr.setMeta(t.filePanel.plugin, {\n          block: o\n        })\n      );\n    },\n    key: \"image\",\n    ...t.dictionary.slash_menu.image\n  }), S(\"video\", t) && e.push({\n    onItemClick: () => {\n      const o = C(t, {\n        type: \"video\"\n      });\n      t.prosemirrorView.dispatch(\n        t._tiptapEditor.state.tr.setMeta(t.filePanel.plugin, {\n          block: o\n        })\n      );\n    },\n    key: \"video\",\n    ...t.dictionary.slash_menu.video\n  }), S(\"audio\", t) && e.push({\n    onItemClick: () => {\n      const o = C(t, {\n        type: \"audio\"\n      });\n      t.prosemirrorView.dispatch(\n        t._tiptapEditor.state.tr.setMeta(t.filePanel.plugin, {\n          block: o\n        })\n      );\n    },\n    key: \"audio\",\n    ...t.dictionary.slash_menu.audio\n  }), S(\"file\", t) && e.push({\n    onItemClick: () => {\n      const o = C(t, {\n        type: \"file\"\n      });\n      t.prosemirrorView.dispatch(\n        t._tiptapEditor.state.tr.setMeta(t.filePanel.plugin, {\n          block: o\n        })\n      );\n    },\n    key: \"image\",\n    ...t.dictionary.slash_menu.file\n  }), e;\n}\nfunction Or(t, e) {\n  return t.filter(\n    ({ title: o, aliases: i }) => o.toLowerCase().includes(e.toLowerCase()) || i && i.filter(\n      (n) => n.toLowerCase().includes(e.toLowerCase())\n    ).length !== 0\n  );\n}\nfunction fe(t = \"\") {\n  return typeof t == \"string\" ? [\n    {\n      type: \"text\",\n      text: t,\n      styles: {}\n    }\n  ] : t;\n}\nfunction wt(t) {\n  return typeof t == \"string\" ? fe(t) : Array.isArray(t) ? t.flatMap((e) => typeof e == \"string\" ? fe(e) : Ye(e) ? {\n    ...e,\n    content: fe(e.content)\n  } : Z(e) ? e : {\n    props: {},\n    ...e,\n    content: wt(e.content)\n  }) : t;\n}\nfunction Rr(t, e) {\n  return e.map(\n    (o) => vt(t, o)\n  );\n}\nfunction vt(t, e) {\n  const o = {\n    id: \"\",\n    type: e.type,\n    props: {},\n    content: t[e.type].content === \"inline\" ? [] : void 0,\n    children: [],\n    ...e\n  };\n  return Object.entries(t[e.type].propSchema).forEach(\n    ([i, n]) => {\n      o.props[i] === void 0 && (o.props[i] = n.default);\n    }\n  ), {\n    ...o,\n    content: wt(o.content),\n    children: o.children.map((i) => vt(t, i))\n  };\n}\nfunction Vn(t) {\n  t.id || (t.id = J.options.generateID()), t.children && jn(t.children);\n}\nfunction jn(t) {\n  for (const e of t)\n    Vn(e);\n}\n\n//# sourceMappingURL=blocknote.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@blocknote/core/dist/blocknote.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@blocknote/mantine/dist/blocknote-mantine.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@blocknote/mantine/dist/blocknote-mantine.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BlockNoteView: () => (/* binding */ Ft),\n/* harmony export */   applyBlockNoteCSSVariablesFromTheme: () => (/* binding */ De),\n/* harmony export */   components: () => (/* binding */ Tt),\n/* harmony export */   darkDefaultTheme: () => (/* binding */ Ot),\n/* harmony export */   defaultColorScheme: () => (/* binding */ x),\n/* harmony export */   lightDefaultTheme: () => (/* binding */ ze),\n/* harmony export */   removeBlockNoteCSSVariables: () => (/* binding */ $r)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _blocknote_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @blocknote/react */ \"(ssr)/./node_modules/@blocknote/react/dist/blocknote-react.js\");\n/* harmony import */ var _mantine_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @mantine/core */ \"(ssr)/./node_modules/@mantine/core/esm/components/TextInput/TextInput.mjs\");\n/* harmony import */ var _mantine_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @mantine/core */ \"(ssr)/./node_modules/@mantine/core/esm/components/Menu/Menu.mjs\");\n/* harmony import */ var _mantine_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @mantine/core */ \"(ssr)/./node_modules/@mantine/core/esm/components/Checkbox/CheckIcon.mjs\");\n/* harmony import */ var _mantine_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @mantine/core */ \"(ssr)/./node_modules/@mantine/core/esm/components/Group/Group.mjs\");\n/* harmony import */ var _mantine_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @mantine/core */ \"(ssr)/./node_modules/@mantine/core/esm/components/Tabs/Tabs.mjs\");\n/* harmony import */ var _mantine_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @mantine/core */ \"(ssr)/./node_modules/@mantine/core/esm/components/LoadingOverlay/LoadingOverlay.mjs\");\n/* harmony import */ var _mantine_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @mantine/core */ \"(ssr)/./node_modules/@mantine/core/esm/components/Button/Button.mjs\");\n/* harmony import */ var _mantine_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @mantine/core */ \"(ssr)/./node_modules/@mantine/core/esm/components/FileInput/FileInput.mjs\");\n/* harmony import */ var _mantine_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @mantine/core */ \"(ssr)/./node_modules/@mantine/core/esm/components/Popover/Popover.mjs\");\n/* harmony import */ var _mantine_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @mantine/core */ \"(ssr)/./node_modules/@mantine/core/esm/components/Popover/PopoverTarget/PopoverTarget.mjs\");\n/* harmony import */ var _mantine_core__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @mantine/core */ \"(ssr)/./node_modules/@mantine/core/esm/components/Popover/PopoverDropdown/PopoverDropdown.mjs\");\n/* harmony import */ var _mantine_core__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @mantine/core */ \"(ssr)/./node_modules/@mantine/core/esm/components/ActionIcon/ActionIcon.mjs\");\n/* harmony import */ var _mantine_core__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @mantine/core */ \"(ssr)/./node_modules/@mantine/core/esm/components/Stack/Stack.mjs\");\n/* harmony import */ var _mantine_core__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @mantine/core */ \"(ssr)/./node_modules/@mantine/core/esm/components/Text/Text.mjs\");\n/* harmony import */ var _mantine_core__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @mantine/core */ \"(ssr)/./node_modules/@mantine/core/esm/components/Badge/Badge.mjs\");\n/* harmony import */ var _mantine_core__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @mantine/core */ \"(ssr)/./node_modules/@mantine/core/esm/components/Loader/Loader.mjs\");\n/* harmony import */ var _mantine_core__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @mantine/core */ \"(ssr)/./node_modules/@mantine/core/esm/components/Tooltip/Tooltip.mjs\");\n/* harmony import */ var _mantine_core__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @mantine/core */ \"(ssr)/./node_modules/@mantine/core/esm/core/MantineProvider/MantineProvider.mjs\");\n/* harmony import */ var use_prefers_color_scheme__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! use-prefers-color-scheme */ \"(ssr)/./node_modules/use-prefers-color-scheme/dist/index.esm.js\");\n/* harmony import */ var _blocknote_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @blocknote/core */ \"(ssr)/./node_modules/@blocknote/core/dist/blocknote.js\");\n/* harmony import */ var _mantine_hooks__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @mantine/hooks */ \"(ssr)/./node_modules/@mantine/hooks/esm/use-focus-within/use-focus-within.mjs\");\n/* harmony import */ var _mantine_hooks__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @mantine/hooks */ \"(ssr)/./node_modules/@mantine/hooks/esm/use-focus-trap/use-focus-trap.mjs\");\n/* harmony import */ var _mantine_hooks__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @mantine/hooks */ \"(ssr)/./node_modules/@mantine/hooks/esm/use-merged-ref/use-merged-ref.mjs\");\n\n\n\n\n\n\n\nvar ie = { exports: {} }, B = {};\n/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar Fe;\nfunction Ar() {\n  if (Fe)\n    return B;\n  Fe = 1;\n  var r = react__WEBPACK_IMPORTED_MODULE_0__, t = Symbol.for(\"react.element\"), n = Symbol.for(\"react.fragment\"), o = Object.prototype.hasOwnProperty, s = r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, c = { key: !0, ref: !0, __self: !0, __source: !0 };\n  function f(u, b, p) {\n    var y, w = {}, P = null, W = null;\n    p !== void 0 && (P = \"\" + p), b.key !== void 0 && (P = \"\" + b.key), b.ref !== void 0 && (W = b.ref);\n    for (y in b)\n      o.call(b, y) && !c.hasOwnProperty(y) && (w[y] = b[y]);\n    if (u && u.defaultProps)\n      for (y in b = u.defaultProps, b)\n        w[y] === void 0 && (w[y] = b[y]);\n    return { $$typeof: t, type: u, key: P, ref: W, props: w, _owner: s.current };\n  }\n  return B.Fragment = n, B.jsx = f, B.jsxs = f, B;\n}\nvar $ = {};\n/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar Me;\nfunction zr() {\n  return Me || (Me = 1,  true && function() {\n    var r = react__WEBPACK_IMPORTED_MODULE_0__, t = Symbol.for(\"react.element\"), n = Symbol.for(\"react.portal\"), o = Symbol.for(\"react.fragment\"), s = Symbol.for(\"react.strict_mode\"), c = Symbol.for(\"react.profiler\"), f = Symbol.for(\"react.provider\"), u = Symbol.for(\"react.context\"), b = Symbol.for(\"react.forward_ref\"), p = Symbol.for(\"react.suspense\"), y = Symbol.for(\"react.suspense_list\"), w = Symbol.for(\"react.memo\"), P = Symbol.for(\"react.lazy\"), W = Symbol.for(\"react.offscreen\"), se = Symbol.iterator, Ue = \"@@iterator\";\n    function Ge(e) {\n      if (e === null || typeof e != \"object\")\n        return null;\n      var a = se && e[se] || e[Ue];\n      return typeof a == \"function\" ? a : null;\n    }\n    var N = r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n    function S(e) {\n      {\n        for (var a = arguments.length, i = new Array(a > 1 ? a - 1 : 0), v = 1; v < a; v++)\n          i[v - 1] = arguments[v];\n        He(\"error\", e, i);\n      }\n    }\n    function He(e, a, i) {\n      {\n        var v = N.ReactDebugCurrentFrame, h = v.getStackAddendum();\n        h !== \"\" && (a += \"%s\", i = i.concat([h]));\n        var j = i.map(function(g) {\n          return String(g);\n        });\n        j.unshift(\"Warning: \" + a), Function.prototype.apply.call(console[e], console, j);\n      }\n    }\n    var Ke = !1, qe = !1, Je = !1, Xe = !1, Ze = !1, le;\n    le = Symbol.for(\"react.module.reference\");\n    function Qe(e) {\n      return !!(typeof e == \"string\" || typeof e == \"function\" || e === o || e === c || Ze || e === s || e === p || e === y || Xe || e === W || Ke || qe || Je || typeof e == \"object\" && e !== null && (e.$$typeof === P || e.$$typeof === w || e.$$typeof === f || e.$$typeof === u || e.$$typeof === b || // This needs to include all possible module reference object\n      // types supported by any Flight configuration anywhere since\n      // we don't know which Flight build this will end up being used\n      // with.\n      e.$$typeof === le || e.getModuleId !== void 0));\n    }\n    function er(e, a, i) {\n      var v = e.displayName;\n      if (v)\n        return v;\n      var h = a.displayName || a.name || \"\";\n      return h !== \"\" ? i + \"(\" + h + \")\" : i;\n    }\n    function ue(e) {\n      return e.displayName || \"Context\";\n    }\n    function O(e) {\n      if (e == null)\n        return null;\n      if (typeof e.tag == \"number\" && S(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"), typeof e == \"function\")\n        return e.displayName || e.name || null;\n      if (typeof e == \"string\")\n        return e;\n      switch (e) {\n        case o:\n          return \"Fragment\";\n        case n:\n          return \"Portal\";\n        case c:\n          return \"Profiler\";\n        case s:\n          return \"StrictMode\";\n        case p:\n          return \"Suspense\";\n        case y:\n          return \"SuspenseList\";\n      }\n      if (typeof e == \"object\")\n        switch (e.$$typeof) {\n          case u:\n            var a = e;\n            return ue(a) + \".Consumer\";\n          case f:\n            var i = e;\n            return ue(i._context) + \".Provider\";\n          case b:\n            return er(e, e.render, \"ForwardRef\");\n          case w:\n            var v = e.displayName || null;\n            return v !== null ? v : O(e.type) || \"Memo\";\n          case P: {\n            var h = e, j = h._payload, g = h._init;\n            try {\n              return O(g(j));\n            } catch {\n              return null;\n            }\n          }\n        }\n      return null;\n    }\n    var D = Object.assign, A = 0, ce, de, fe, ve, be, pe, me;\n    function ge() {\n    }\n    ge.__reactDisabledLog = !0;\n    function rr() {\n      {\n        if (A === 0) {\n          ce = console.log, de = console.info, fe = console.warn, ve = console.error, be = console.group, pe = console.groupCollapsed, me = console.groupEnd;\n          var e = {\n            configurable: !0,\n            enumerable: !0,\n            value: ge,\n            writable: !0\n          };\n          Object.defineProperties(console, {\n            info: e,\n            log: e,\n            warn: e,\n            error: e,\n            group: e,\n            groupCollapsed: e,\n            groupEnd: e\n          });\n        }\n        A++;\n      }\n    }\n    function tr() {\n      {\n        if (A--, A === 0) {\n          var e = {\n            configurable: !0,\n            enumerable: !0,\n            writable: !0\n          };\n          Object.defineProperties(console, {\n            log: D({}, e, {\n              value: ce\n            }),\n            info: D({}, e, {\n              value: de\n            }),\n            warn: D({}, e, {\n              value: fe\n            }),\n            error: D({}, e, {\n              value: ve\n            }),\n            group: D({}, e, {\n              value: be\n            }),\n            groupCollapsed: D({}, e, {\n              value: pe\n            }),\n            groupEnd: D({}, e, {\n              value: me\n            })\n          });\n        }\n        A < 0 && S(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\");\n      }\n    }\n    var J = N.ReactCurrentDispatcher, X;\n    function V(e, a, i) {\n      {\n        if (X === void 0)\n          try {\n            throw Error();\n          } catch (h) {\n            var v = h.stack.trim().match(/\\n( *(at )?)/);\n            X = v && v[1] || \"\";\n          }\n        return `\n` + X + e;\n      }\n    }\n    var Z = !1, Y;\n    {\n      var nr = typeof WeakMap == \"function\" ? WeakMap : Map;\n      Y = new nr();\n    }\n    function he(e, a) {\n      if (!e || Z)\n        return \"\";\n      {\n        var i = Y.get(e);\n        if (i !== void 0)\n          return i;\n      }\n      var v;\n      Z = !0;\n      var h = Error.prepareStackTrace;\n      Error.prepareStackTrace = void 0;\n      var j;\n      j = J.current, J.current = null, rr();\n      try {\n        if (a) {\n          var g = function() {\n            throw Error();\n          };\n          if (Object.defineProperty(g.prototype, \"props\", {\n            set: function() {\n              throw Error();\n            }\n          }), typeof Reflect == \"object\" && Reflect.construct) {\n            try {\n              Reflect.construct(g, []);\n            } catch (F) {\n              v = F;\n            }\n            Reflect.construct(e, [], g);\n          } else {\n            try {\n              g.call();\n            } catch (F) {\n              v = F;\n            }\n            e.call(g.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (F) {\n            v = F;\n          }\n          e();\n        }\n      } catch (F) {\n        if (F && v && typeof F.stack == \"string\") {\n          for (var m = F.stack.split(`\n`), _ = v.stack.split(`\n`), E = m.length - 1, k = _.length - 1; E >= 1 && k >= 0 && m[E] !== _[k]; )\n            k--;\n          for (; E >= 1 && k >= 0; E--, k--)\n            if (m[E] !== _[k]) {\n              if (E !== 1 || k !== 1)\n                do\n                  if (E--, k--, k < 0 || m[E] !== _[k]) {\n                    var C = `\n` + m[E].replace(\" at new \", \" at \");\n                    return e.displayName && C.includes(\"<anonymous>\") && (C = C.replace(\"<anonymous>\", e.displayName)), typeof e == \"function\" && Y.set(e, C), C;\n                  }\n                while (E >= 1 && k >= 0);\n              break;\n            }\n        }\n      } finally {\n        Z = !1, J.current = j, tr(), Error.prepareStackTrace = h;\n      }\n      var L = e ? e.displayName || e.name : \"\", Oe = L ? V(L) : \"\";\n      return typeof e == \"function\" && Y.set(e, Oe), Oe;\n    }\n    function or(e, a, i) {\n      return he(e, !1);\n    }\n    function ar(e) {\n      var a = e.prototype;\n      return !!(a && a.isReactComponent);\n    }\n    function U(e, a, i) {\n      if (e == null)\n        return \"\";\n      if (typeof e == \"function\")\n        return he(e, ar(e));\n      if (typeof e == \"string\")\n        return V(e);\n      switch (e) {\n        case p:\n          return V(\"Suspense\");\n        case y:\n          return V(\"SuspenseList\");\n      }\n      if (typeof e == \"object\")\n        switch (e.$$typeof) {\n          case b:\n            return or(e.render);\n          case w:\n            return U(e.type, a, i);\n          case P: {\n            var v = e, h = v._payload, j = v._init;\n            try {\n              return U(j(h), a, i);\n            } catch {\n            }\n          }\n        }\n      return \"\";\n    }\n    var G = Object.prototype.hasOwnProperty, xe = {}, ye = N.ReactDebugCurrentFrame;\n    function H(e) {\n      if (e) {\n        var a = e._owner, i = U(e.type, e._source, a ? a.type : null);\n        ye.setExtraStackFrame(i);\n      } else\n        ye.setExtraStackFrame(null);\n    }\n    function ir(e, a, i, v, h) {\n      {\n        var j = Function.call.bind(G);\n        for (var g in e)\n          if (j(e, g)) {\n            var m = void 0;\n            try {\n              if (typeof e[g] != \"function\") {\n                var _ = Error((v || \"React class\") + \": \" + i + \" type `\" + g + \"` is invalid; it must be a function, usually from the `prop-types` package, but received `\" + typeof e[g] + \"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");\n                throw _.name = \"Invariant Violation\", _;\n              }\n              m = e[g](a, g, v, i, null, \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\");\n            } catch (E) {\n              m = E;\n            }\n            m && !(m instanceof Error) && (H(h), S(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\", v || \"React class\", i, g, typeof m), H(null)), m instanceof Error && !(m.message in xe) && (xe[m.message] = !0, H(h), S(\"Failed %s type: %s\", i, m.message), H(null));\n          }\n      }\n    }\n    var sr = Array.isArray;\n    function Q(e) {\n      return sr(e);\n    }\n    function lr(e) {\n      {\n        var a = typeof Symbol == \"function\" && Symbol.toStringTag, i = a && e[Symbol.toStringTag] || e.constructor.name || \"Object\";\n        return i;\n      }\n    }\n    function ur(e) {\n      try {\n        return je(e), !1;\n      } catch {\n        return !0;\n      }\n    }\n    function je(e) {\n      return \"\" + e;\n    }\n    function Re(e) {\n      if (ur(e))\n        return S(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\", lr(e)), je(e);\n    }\n    var z = N.ReactCurrentOwner, cr = {\n      key: !0,\n      ref: !0,\n      __self: !0,\n      __source: !0\n    }, Te, Ee, ee;\n    ee = {};\n    function dr(e) {\n      if (G.call(e, \"ref\")) {\n        var a = Object.getOwnPropertyDescriptor(e, \"ref\").get;\n        if (a && a.isReactWarning)\n          return !1;\n      }\n      return e.ref !== void 0;\n    }\n    function fr(e) {\n      if (G.call(e, \"key\")) {\n        var a = Object.getOwnPropertyDescriptor(e, \"key\").get;\n        if (a && a.isReactWarning)\n          return !1;\n      }\n      return e.key !== void 0;\n    }\n    function vr(e, a) {\n      if (typeof e.ref == \"string\" && z.current && a && z.current.stateNode !== a) {\n        var i = O(z.current.type);\n        ee[i] || (S('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', O(z.current.type), e.ref), ee[i] = !0);\n      }\n    }\n    function br(e, a) {\n      {\n        var i = function() {\n          Te || (Te = !0, S(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\", a));\n        };\n        i.isReactWarning = !0, Object.defineProperty(e, \"key\", {\n          get: i,\n          configurable: !0\n        });\n      }\n    }\n    function pr(e, a) {\n      {\n        var i = function() {\n          Ee || (Ee = !0, S(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\", a));\n        };\n        i.isReactWarning = !0, Object.defineProperty(e, \"ref\", {\n          get: i,\n          configurable: !0\n        });\n      }\n    }\n    var mr = function(e, a, i, v, h, j, g) {\n      var m = {\n        // This tag allows us to uniquely identify this as a React Element\n        $$typeof: t,\n        // Built-in properties that belong on the element\n        type: e,\n        key: a,\n        ref: i,\n        props: g,\n        // Record the component responsible for creating this element.\n        _owner: j\n      };\n      return m._store = {}, Object.defineProperty(m._store, \"validated\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: !1\n      }), Object.defineProperty(m, \"_self\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !1,\n        value: v\n      }), Object.defineProperty(m, \"_source\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !1,\n        value: h\n      }), Object.freeze && (Object.freeze(m.props), Object.freeze(m)), m;\n    };\n    function gr(e, a, i, v, h) {\n      {\n        var j, g = {}, m = null, _ = null;\n        i !== void 0 && (Re(i), m = \"\" + i), fr(a) && (Re(a.key), m = \"\" + a.key), dr(a) && (_ = a.ref, vr(a, h));\n        for (j in a)\n          G.call(a, j) && !cr.hasOwnProperty(j) && (g[j] = a[j]);\n        if (e && e.defaultProps) {\n          var E = e.defaultProps;\n          for (j in E)\n            g[j] === void 0 && (g[j] = E[j]);\n        }\n        if (m || _) {\n          var k = typeof e == \"function\" ? e.displayName || e.name || \"Unknown\" : e;\n          m && br(g, k), _ && pr(g, k);\n        }\n        return mr(e, m, _, h, v, z.current, g);\n      }\n    }\n    var re = N.ReactCurrentOwner, ke = N.ReactDebugCurrentFrame;\n    function I(e) {\n      if (e) {\n        var a = e._owner, i = U(e.type, e._source, a ? a.type : null);\n        ke.setExtraStackFrame(i);\n      } else\n        ke.setExtraStackFrame(null);\n    }\n    var te;\n    te = !1;\n    function ne(e) {\n      return typeof e == \"object\" && e !== null && e.$$typeof === t;\n    }\n    function we() {\n      {\n        if (re.current) {\n          var e = O(re.current.type);\n          if (e)\n            return `\n\nCheck the render method of \\`` + e + \"`.\";\n        }\n        return \"\";\n      }\n    }\n    function hr(e) {\n      {\n        if (e !== void 0) {\n          var a = e.fileName.replace(/^.*[\\\\\\/]/, \"\"), i = e.lineNumber;\n          return `\n\nCheck your code at ` + a + \":\" + i + \".\";\n        }\n        return \"\";\n      }\n    }\n    var Se = {};\n    function xr(e) {\n      {\n        var a = we();\n        if (!a) {\n          var i = typeof e == \"string\" ? e : e.displayName || e.name;\n          i && (a = `\n\nCheck the top-level render call using <` + i + \">.\");\n        }\n        return a;\n      }\n    }\n    function _e(e, a) {\n      {\n        if (!e._store || e._store.validated || e.key != null)\n          return;\n        e._store.validated = !0;\n        var i = xr(a);\n        if (Se[i])\n          return;\n        Se[i] = !0;\n        var v = \"\";\n        e && e._owner && e._owner !== re.current && (v = \" It was passed a child from \" + O(e._owner.type) + \".\"), I(e), S('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', i, v), I(null);\n      }\n    }\n    function Pe(e, a) {\n      {\n        if (typeof e != \"object\")\n          return;\n        if (Q(e))\n          for (var i = 0; i < e.length; i++) {\n            var v = e[i];\n            ne(v) && _e(v, a);\n          }\n        else if (ne(e))\n          e._store && (e._store.validated = !0);\n        else if (e) {\n          var h = Ge(e);\n          if (typeof h == \"function\" && h !== e.entries)\n            for (var j = h.call(e), g; !(g = j.next()).done; )\n              ne(g.value) && _e(g.value, a);\n        }\n      }\n    }\n    function yr(e) {\n      {\n        var a = e.type;\n        if (a == null || typeof a == \"string\")\n          return;\n        var i;\n        if (typeof a == \"function\")\n          i = a.propTypes;\n        else if (typeof a == \"object\" && (a.$$typeof === b || // Note: Memo only checks outer props here.\n        // Inner props are checked in the reconciler.\n        a.$$typeof === w))\n          i = a.propTypes;\n        else\n          return;\n        if (i) {\n          var v = O(a);\n          ir(i, e.props, \"prop\", v, e);\n        } else if (a.PropTypes !== void 0 && !te) {\n          te = !0;\n          var h = O(a);\n          S(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\", h || \"Unknown\");\n        }\n        typeof a.getDefaultProps == \"function\" && !a.getDefaultProps.isReactClassApproved && S(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\");\n      }\n    }\n    function jr(e) {\n      {\n        for (var a = Object.keys(e.props), i = 0; i < a.length; i++) {\n          var v = a[i];\n          if (v !== \"children\" && v !== \"key\") {\n            I(e), S(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\", v), I(null);\n            break;\n          }\n        }\n        e.ref !== null && (I(e), S(\"Invalid attribute `ref` supplied to `React.Fragment`.\"), I(null));\n      }\n    }\n    function Ce(e, a, i, v, h, j) {\n      {\n        var g = Qe(e);\n        if (!g) {\n          var m = \"\";\n          (e === void 0 || typeof e == \"object\" && e !== null && Object.keys(e).length === 0) && (m += \" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\");\n          var _ = hr(h);\n          _ ? m += _ : m += we();\n          var E;\n          e === null ? E = \"null\" : Q(e) ? E = \"array\" : e !== void 0 && e.$$typeof === t ? (E = \"<\" + (O(e.type) || \"Unknown\") + \" />\", m = \" Did you accidentally export a JSX literal instead of a component?\") : E = typeof e, S(\"React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\", E, m);\n        }\n        var k = gr(e, a, i, h, j);\n        if (k == null)\n          return k;\n        if (g) {\n          var C = a.children;\n          if (C !== void 0)\n            if (v)\n              if (Q(C)) {\n                for (var L = 0; L < C.length; L++)\n                  Pe(C[L], e);\n                Object.freeze && Object.freeze(C);\n              } else\n                S(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\");\n            else\n              Pe(C, e);\n        }\n        return e === o ? jr(k) : yr(k), k;\n      }\n    }\n    function Rr(e, a, i) {\n      return Ce(e, a, i, !0);\n    }\n    function Tr(e, a, i) {\n      return Ce(e, a, i, !1);\n    }\n    var Er = Tr, kr = Rr;\n    $.Fragment = o, $.jsx = Er, $.jsxs = kr;\n  }()), $;\n}\n false ? 0 : ie.exports = zr();\nvar l = ie.exports;\nconst Be = (r, t, n = !1) => {\n  const o = [];\n  function s(c, f = \"--bn\") {\n    for (const u in c) {\n      const b = u.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase(), p = `${f}-${b}`;\n      typeof c[u] != \"object\" ? (typeof c[u] == \"number\" && (c[u] = `${c[u]}px`), n ? t.style.removeProperty(p) : t.style.setProperty(p, c[u].toString())) : s(c[u], p);\n    }\n  }\n  return s(r), o;\n}, De = (r, t) => Be(r, t), Br = {\n  colors: {\n    editor: {\n      text: void 0,\n      background: void 0\n    },\n    menu: {\n      text: void 0,\n      background: void 0\n    },\n    tooltip: {\n      text: void 0,\n      background: void 0\n    },\n    hovered: {\n      text: void 0,\n      background: void 0\n    },\n    selected: {\n      text: void 0,\n      background: void 0\n    },\n    disabled: {\n      text: void 0,\n      background: void 0\n    },\n    shadow: void 0,\n    border: void 0,\n    sideMenu: void 0,\n    highlights: {\n      gray: {\n        text: void 0,\n        background: void 0\n      },\n      brown: {\n        text: void 0,\n        background: void 0\n      },\n      red: {\n        text: void 0,\n        background: void 0\n      },\n      orange: {\n        text: void 0,\n        background: void 0\n      },\n      yellow: {\n        text: void 0,\n        background: void 0\n      },\n      green: {\n        text: void 0,\n        background: void 0\n      },\n      blue: {\n        text: void 0,\n        background: void 0\n      },\n      purple: {\n        text: void 0,\n        background: void 0\n      },\n      pink: {\n        text: void 0,\n        background: void 0\n      }\n    }\n  },\n  borderRadius: void 0,\n  fontFamily: void 0\n}, $r = (r) => Be(Br, r, !0), Wr = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((r, t) => {\n  const {\n    className: n,\n    name: o,\n    label: s,\n    icon: c,\n    value: f,\n    autoFocus: u,\n    placeholder: b,\n    onKeyDown: p,\n    onChange: y,\n    onSubmit: w,\n    ...P\n  } = r;\n  return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_3__.assertEmpty)(P), /* @__PURE__ */ l.jsx(\n    _mantine_core__WEBPACK_IMPORTED_MODULE_4__.TextInput,\n    {\n      size: \"xs\",\n      className: n,\n      ref: t,\n      name: o,\n      label: s,\n      leftSection: c,\n      value: f,\n      autoFocus: u,\n      \"data-autofocus\": u ? \"true\" : void 0,\n      placeholder: b,\n      onKeyDown: p,\n      onChange: y,\n      onSubmit: w\n    }\n  );\n});\nvar $e = {\n  color: void 0,\n  size: void 0,\n  className: void 0,\n  style: void 0,\n  attr: void 0\n}, Ne = react__WEBPACK_IMPORTED_MODULE_0__.createContext && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createContext($e), Vr = [\"attr\", \"size\", \"title\"];\nfunction Yr(r, t) {\n  if (r == null)\n    return {};\n  var n = Ur(r, t), o, s;\n  if (Object.getOwnPropertySymbols) {\n    var c = Object.getOwnPropertySymbols(r);\n    for (s = 0; s < c.length; s++)\n      o = c[s], !(t.indexOf(o) >= 0) && Object.prototype.propertyIsEnumerable.call(r, o) && (n[o] = r[o]);\n  }\n  return n;\n}\nfunction Ur(r, t) {\n  if (r == null)\n    return {};\n  var n = {};\n  for (var o in r)\n    if (Object.prototype.hasOwnProperty.call(r, o)) {\n      if (t.indexOf(o) >= 0)\n        continue;\n      n[o] = r[o];\n    }\n  return n;\n}\nfunction K() {\n  return K = Object.assign ? Object.assign.bind() : function(r) {\n    for (var t = 1; t < arguments.length; t++) {\n      var n = arguments[t];\n      for (var o in n)\n        Object.prototype.hasOwnProperty.call(n, o) && (r[o] = n[o]);\n    }\n    return r;\n  }, K.apply(this, arguments);\n}\nfunction Ie(r, t) {\n  var n = Object.keys(r);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(r);\n    t && (o = o.filter(function(s) {\n      return Object.getOwnPropertyDescriptor(r, s).enumerable;\n    })), n.push.apply(n, o);\n  }\n  return n;\n}\nfunction q(r) {\n  for (var t = 1; t < arguments.length; t++) {\n    var n = arguments[t] != null ? arguments[t] : {};\n    t % 2 ? Ie(Object(n), !0).forEach(function(o) {\n      Gr(r, o, n[o]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(r, Object.getOwnPropertyDescriptors(n)) : Ie(Object(n)).forEach(function(o) {\n      Object.defineProperty(r, o, Object.getOwnPropertyDescriptor(n, o));\n    });\n  }\n  return r;\n}\nfunction Gr(r, t, n) {\n  return t = Hr(t), t in r ? Object.defineProperty(r, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : r[t] = n, r;\n}\nfunction Hr(r) {\n  var t = Kr(r, \"string\");\n  return typeof t == \"symbol\" ? t : t + \"\";\n}\nfunction Kr(r, t) {\n  if (typeof r != \"object\" || !r)\n    return r;\n  var n = r[Symbol.toPrimitive];\n  if (n !== void 0) {\n    var o = n.call(r, t || \"default\");\n    if (typeof o != \"object\")\n      return o;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (t === \"string\" ? String : Number)(r);\n}\nfunction We(r) {\n  return r && r.map((t, n) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(t.tag, q({\n    key: n\n  }, t.attr), We(t.child)));\n}\nfunction Ve(r) {\n  return (t) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(qr, K({\n    attr: q({}, r.attr)\n  }, t), We(r.child));\n}\nfunction qr(r) {\n  var t = (n) => {\n    var {\n      attr: o,\n      size: s,\n      title: c\n    } = r, f = Yr(r, Vr), u = s || n.size || \"1em\", b;\n    return n.className && (b = n.className), r.className && (b = (b ? b + \" \" : \"\") + r.className), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", K({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, n.attr, o, f, {\n      className: b,\n      style: q(q({\n        color: r.color || n.color\n      }, n.style), r.style),\n      height: u,\n      width: u,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }), c && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"title\", null, c), r.children);\n  };\n  return Ne !== void 0 ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Ne.Consumer, null, (n) => t(n)) : t($e);\n}\nfunction Jr(r) {\n  return Ve({ tag: \"svg\", attr: { viewBox: \"0 0 20 20\", fill: \"currentColor\", \"aria-hidden\": \"true\" }, child: [{ tag: \"path\", attr: { fillRule: \"evenodd\", d: \"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\", clipRule: \"evenodd\" }, child: [] }] })(r);\n}\nfunction Xr(r) {\n  return Ve({ tag: \"svg\", attr: { viewBox: \"0 0 20 20\", fill: \"currentColor\", \"aria-hidden\": \"true\" }, child: [{ tag: \"path\", attr: { fillRule: \"evenodd\", d: \"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\", clipRule: \"evenodd\" }, child: [] }] })(r);\n}\nconst Ye = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(void 0), Zr = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((r, t) => {\n  const {\n    children: n,\n    onOpenChange: o,\n    position: s,\n    sub: c,\n    // not used\n    ...f\n  } = r;\n  (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_3__.assertEmpty)(f);\n  const [u, b] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1), p = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(), y = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    p.current && clearTimeout(p.current), p.current = setTimeout(() => {\n      b(!1);\n    }, 250);\n  }, []), w = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    p.current && clearTimeout(p.current), b(!0);\n  }, []);\n  return /* @__PURE__ */ l.jsx(\n    Ye.Provider,\n    {\n      value: {\n        onMenuMouseOver: w,\n        onMenuMouseLeave: y\n      },\n      children: /* @__PURE__ */ l.jsx(\n        _mantine_core__WEBPACK_IMPORTED_MODULE_5__.Menu.Item,\n        {\n          className: \"bn-menu-item bn-mt-sub-menu-item\",\n          ref: t,\n          onMouseOver: w,\n          onMouseLeave: y,\n          children: /* @__PURE__ */ l.jsx(\n            _mantine_core__WEBPACK_IMPORTED_MODULE_5__.Menu,\n            {\n              withinPortal: !1,\n              middlewares: { flip: !0, shift: !0, inline: !1, size: !0 },\n              trigger: \"hover\",\n              opened: u,\n              onClose: () => o == null ? void 0 : o(!1),\n              onOpen: () => o == null ? void 0 : o(!0),\n              position: s,\n              children: n\n            }\n          )\n        }\n      )\n    }\n  );\n}), Qr = (r) => {\n  const { children: t, onOpenChange: n, position: o, sub: s, ...c } = r;\n  return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_3__.assertEmpty)(c), s ? /* @__PURE__ */ l.jsx(Zr, { ...r }) : /* @__PURE__ */ l.jsx(\n    _mantine_core__WEBPACK_IMPORTED_MODULE_5__.Menu,\n    {\n      withinPortal: !1,\n      middlewares: { flip: !0, shift: !0, inline: !1, size: !0 },\n      onClose: () => n == null ? void 0 : n(!1),\n      onOpen: () => n == null ? void 0 : n(!0),\n      position: o,\n      children: t\n    }\n  );\n}, et = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((r, t) => {\n  const { className: n, children: o, icon: s, checked: c, subTrigger: f, onClick: u, ...b } = r;\n  return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_3__.assertEmpty)(b, !1), f ? /* @__PURE__ */ l.jsxs(\"div\", { ref: t, ...b, children: [\n    o,\n    /* @__PURE__ */ l.jsx(Xr, { size: 15 })\n  ] }) : /* @__PURE__ */ l.jsx(\n    _mantine_core__WEBPACK_IMPORTED_MODULE_5__.Menu.Item,\n    {\n      className: n,\n      ref: t,\n      leftSection: s,\n      rightSection: c ? /* @__PURE__ */ l.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_6__.CheckIcon, { size: 10 }) : c === !1 ? /* @__PURE__ */ l.jsx(\"div\", { className: \"bn-tick-space\" }) : null,\n      onClick: u,\n      ...b,\n      children: o\n    }\n  );\n}), rt = (r) => {\n  const {\n    children: t,\n    sub: n,\n    // unused\n    ...o\n  } = r;\n  return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_3__.assertEmpty)(o), /* @__PURE__ */ l.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_5__.Menu.Target, { children: t });\n}, tt = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((r, t) => {\n  const {\n    className: n,\n    children: o,\n    sub: s,\n    //unused\n    ...c\n  } = r;\n  (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_3__.assertEmpty)(c);\n  const f = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(Ye);\n  return /* @__PURE__ */ l.jsx(\n    _mantine_core__WEBPACK_IMPORTED_MODULE_5__.Menu.Dropdown,\n    {\n      className: n,\n      ref: t,\n      onMouseOver: f == null ? void 0 : f.onMenuMouseOver,\n      onMouseLeave: f == null ? void 0 : f.onMenuMouseLeave,\n      children: o\n    }\n  );\n}), nt = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((r, t) => {\n  const { className: n, ...o } = r;\n  return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_3__.assertEmpty)(o), /* @__PURE__ */ l.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_5__.Menu.Divider, { className: n, ref: t });\n}), ot = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((r, t) => {\n  const { className: n, children: o, ...s } = r;\n  return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_3__.assertEmpty)(s), /* @__PURE__ */ l.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_5__.Menu.Label, { className: n, ref: t, children: o });\n}), at = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((r, t) => {\n  const {\n    className: n,\n    tabs: o,\n    defaultOpenTab: s,\n    openTab: c,\n    setOpenTab: f,\n    loading: u,\n    ...b\n  } = r;\n  return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_3__.assertEmpty)(b), /* @__PURE__ */ l.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_7__.Group, { className: n, ref: t, children: /* @__PURE__ */ l.jsxs(\n    _mantine_core__WEBPACK_IMPORTED_MODULE_8__.Tabs,\n    {\n      value: c,\n      defaultValue: s,\n      onChange: f,\n      children: [\n        u && /* @__PURE__ */ l.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_9__.LoadingOverlay, { visible: u }),\n        /* @__PURE__ */ l.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_8__.Tabs.List, { children: o.map((p) => /* @__PURE__ */ l.jsx(\n          _mantine_core__WEBPACK_IMPORTED_MODULE_8__.Tabs.Tab,\n          {\n            \"data-test\": `${p.name.toLowerCase()}-tab`,\n            value: p.name,\n            children: p.name\n          },\n          p.name\n        )) }),\n        o.map((p) => /* @__PURE__ */ l.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_8__.Tabs.Panel, { value: p.name, children: p.tabPanel }, p.name))\n      ]\n    }\n  ) });\n}), it = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((r, t) => {\n  const { className: n, children: o, onClick: s, label: c, ...f } = r;\n  return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_3__.assertEmpty)(f), /* @__PURE__ */ l.jsx(\n    _mantine_core__WEBPACK_IMPORTED_MODULE_10__.Button,\n    {\n      size: \"xs\",\n      \"aria-label\": c,\n      className: n,\n      ref: t,\n      onClick: s,\n      ...f,\n      children: o\n    }\n  );\n}), st = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((r, t) => {\n  const { className: n, accept: o, value: s, placeholder: c, onChange: f, ...u } = r;\n  return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_3__.assertEmpty)(u), /* @__PURE__ */ l.jsx(\n    _mantine_core__WEBPACK_IMPORTED_MODULE_11__.FileInput,\n    {\n      size: \"xs\",\n      className: n,\n      ref: t,\n      accept: o,\n      value: s,\n      placeholder: c,\n      onChange: f,\n      ...u\n    }\n  );\n}), lt = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((r, t) => {\n  const { className: n, children: o, ...s } = r;\n  return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_3__.assertEmpty)(s), /* @__PURE__ */ l.jsx(\"div\", { className: n, ref: t, children: o });\n}), ut = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((r, t) => {\n  const { className: n, value: o, placeholder: s, onKeyDown: c, onChange: f, ...u } = r;\n  return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_3__.assertEmpty)(u), /* @__PURE__ */ l.jsx(\n    _mantine_core__WEBPACK_IMPORTED_MODULE_4__.TextInput,\n    {\n      size: \"xs\",\n      \"data-test\": \"embed-input\",\n      className: n,\n      ref: t,\n      value: o,\n      placeholder: s,\n      onKeyDown: c,\n      onChange: f\n    }\n  );\n}), ct = (r) => {\n  const { children: t, opened: n, position: o, ...s } = r;\n  return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_3__.assertEmpty)(s), /* @__PURE__ */ l.jsx(\n    _mantine_core__WEBPACK_IMPORTED_MODULE_12__.Popover,\n    {\n      withinPortal: !1,\n      zIndex: 1e4,\n      opened: n,\n      position: o,\n      children: t\n    }\n  );\n}, dt = (r) => {\n  const { children: t, ...n } = r;\n  return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_3__.assertEmpty)(n), /* @__PURE__ */ l.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_13__.PopoverTarget, { children: t });\n}, ft = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((r, t) => {\n  const {\n    className: n,\n    children: o,\n    variant: s,\n    // unused\n    ...c\n  } = r;\n  return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_3__.assertEmpty)(c), /* @__PURE__ */ l.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_14__.PopoverDropdown, { className: n, ref: t, children: o });\n}), vt = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((r, t) => {\n  const { className: n, children: o, ...s } = r;\n  return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_3__.assertEmpty)(s), /* @__PURE__ */ l.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_7__.Group, { align: \"center\", gap: 0, className: n, ref: t, children: o });\n}), bt = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((r, t) => {\n  const {\n    className: n,\n    children: o,\n    icon: s,\n    onClick: c,\n    onDragEnd: f,\n    onDragStart: u,\n    draggable: b,\n    label: p,\n    ...y\n  } = r;\n  return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_3__.assertEmpty)(y, !1), s ? /* @__PURE__ */ l.jsx(\n    _mantine_core__WEBPACK_IMPORTED_MODULE_15__.ActionIcon,\n    {\n      size: 24,\n      className: n,\n      ref: t,\n      onClick: c,\n      onDragEnd: f,\n      onDragStart: u,\n      draggable: b,\n      \"aria-label\": p,\n      ...y,\n      children: s\n    }\n  ) : /* @__PURE__ */ l.jsx(\n    _mantine_core__WEBPACK_IMPORTED_MODULE_10__.Button,\n    {\n      className: n,\n      ref: t,\n      onClick: c,\n      onDragEnd: f,\n      onDragStart: u,\n      draggable: b,\n      \"aria-label\": p,\n      ...y,\n      children: o\n    }\n  );\n}), pt = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((r, t) => {\n  const { className: n, children: o, id: s, ...c } = r;\n  return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_3__.assertEmpty)(c), /* @__PURE__ */ l.jsx(\n    _mantine_core__WEBPACK_IMPORTED_MODULE_16__.Stack,\n    {\n      gap: 0,\n      className: n,\n      ref: t,\n      id: s,\n      role: \"listbox\",\n      children: o\n    }\n  );\n}), mt = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((r, t) => {\n  const { className: n, children: o, ...s } = r;\n  return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_3__.assertEmpty)(s), /* @__PURE__ */ l.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_7__.Group, { className: n, ref: t, children: /* @__PURE__ */ l.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_7__.Group, { className: \"bn-mt-suggestion-menu-item-label\", children: o }) });\n}), gt = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((r, t) => {\n  const { className: n, isSelected: o, onClick: s, item: c, id: f, ...u } = r;\n  return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_3__.assertEmpty)(u), /* @__PURE__ */ l.jsxs(\n    _mantine_core__WEBPACK_IMPORTED_MODULE_7__.Group,\n    {\n      gap: 0,\n      className: n,\n      ref: t,\n      id: f,\n      role: \"option\",\n      onClick: s,\n      \"aria-selected\": o || void 0,\n      children: [\n        c.icon && /* @__PURE__ */ l.jsx(\n          _mantine_core__WEBPACK_IMPORTED_MODULE_7__.Group,\n          {\n            className: \"bn-mt-suggestion-menu-item-section\",\n            \"data-position\": \"left\",\n            children: c.icon\n          }\n        ),\n        /* @__PURE__ */ l.jsxs(_mantine_core__WEBPACK_IMPORTED_MODULE_16__.Stack, { gap: 0, className: \"bn-mt-suggestion-menu-item-body\", children: [\n          /* @__PURE__ */ l.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_17__.Text, { className: \"bn-mt-suggestion-menu-item-title\", children: c.title }),\n          /* @__PURE__ */ l.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_17__.Text, { className: \"bn-mt-suggestion-menu-item-subtitle\", children: c.subtext })\n        ] }),\n        c.badge && /* @__PURE__ */ l.jsx(\n          _mantine_core__WEBPACK_IMPORTED_MODULE_7__.Group,\n          {\n            \"data-position\": \"right\",\n            className: \"bn-mt-suggestion-menu-item-section\",\n            children: /* @__PURE__ */ l.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_18__.Badge, { size: \"xs\", children: c.badge })\n          }\n        )\n      ]\n    }\n  );\n}), ht = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((r, t) => {\n  const { className: n, children: o, ...s } = r;\n  return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_3__.assertEmpty)(s), /* @__PURE__ */ l.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_7__.Group, { className: n, ref: t, children: o });\n}), xt = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((r, t) => {\n  const {\n    className: n,\n    children: o,\n    // unused, using \"dots\" instead\n    ...s\n  } = r;\n  return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_3__.assertEmpty)(s), /* @__PURE__ */ l.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_19__.Loader, { className: n, type: \"dots\", ref: t });\n}), yt = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((r, t) => {\n  const {\n    className: n,\n    children: o,\n    draggable: s,\n    onDragStart: c,\n    onDragEnd: f,\n    style: u,\n    label: b,\n    ...p\n  } = r;\n  return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_3__.assertEmpty)(p, !1), /* @__PURE__ */ l.jsx(\n    \"button\",\n    {\n      className: n,\n      ref: t,\n      \"aria-label\": b,\n      draggable: s,\n      onDragStart: c,\n      onDragEnd: f,\n      style: u,\n      ...p,\n      children: o\n    }\n  );\n}), Le = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(\n  (r, t) => {\n    const { className: n, children: o, onMouseEnter: s, onMouseLeave: c, ...f } = r;\n    (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_3__.assertEmpty)(f);\n    const { ref: u, focused: b } = (0,_mantine_hooks__WEBPACK_IMPORTED_MODULE_20__.useFocusWithin)(), p = (0,_mantine_hooks__WEBPACK_IMPORTED_MODULE_21__.useFocusTrap)(b), y = (0,_mantine_hooks__WEBPACK_IMPORTED_MODULE_22__.mergeRefs)(t, u, p);\n    return /* @__PURE__ */ l.jsx(\n      _mantine_core__WEBPACK_IMPORTED_MODULE_7__.Group,\n      {\n        className: n,\n        ref: y,\n        role: \"toolbar\",\n        onMouseEnter: s,\n        onMouseLeave: c,\n        children: o\n      }\n    );\n  }\n), jt = (r) => /* @__PURE__ */ l.jsxs(_mantine_core__WEBPACK_IMPORTED_MODULE_16__.Stack, { gap: 0, className: \"bn-tooltip\", children: [\n  /* @__PURE__ */ l.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_17__.Text, { size: \"sm\", children: r.mainTooltip }),\n  r.secondaryTooltip && /* @__PURE__ */ l.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_17__.Text, { size: \"xs\", children: r.secondaryTooltip })\n] }), Ae = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(\n  (r, t) => {\n    const {\n      className: n,\n      children: o,\n      mainTooltip: s,\n      secondaryTooltip: c,\n      icon: f,\n      isSelected: u,\n      isDisabled: b,\n      onClick: p,\n      label: y,\n      ...w\n    } = r;\n    return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_3__.assertEmpty)(w, !1), /* @__PURE__ */ l.jsx(\n      _mantine_core__WEBPACK_IMPORTED_MODULE_23__.Tooltip,\n      {\n        withinPortal: !1,\n        label: /* @__PURE__ */ l.jsx(\n          jt,\n          {\n            mainTooltip: s,\n            secondaryTooltip: c\n          }\n        ),\n        children: o ? /* @__PURE__ */ l.jsx(\n          _mantine_core__WEBPACK_IMPORTED_MODULE_10__.Button,\n          {\n            \"aria-label\": y,\n            className: n,\n            onMouseDown: (P) => {\n              (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_3__.isSafari)() && P.currentTarget.focus();\n            },\n            onClick: p,\n            \"aria-pressed\": u,\n            \"data-selected\": u || void 0,\n            \"data-test\": s.slice(0, 1).toLowerCase() + s.replace(/\\s+/g, \"\").slice(1),\n            size: \"xs\",\n            disabled: b || !1,\n            ref: t,\n            ...w,\n            children: o\n          }\n        ) : /* @__PURE__ */ l.jsx(\n          _mantine_core__WEBPACK_IMPORTED_MODULE_15__.ActionIcon,\n          {\n            className: n,\n            \"aria-label\": y,\n            onMouseDown: (P) => {\n              (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_3__.isSafari)() && P.currentTarget.focus();\n            },\n            onClick: p,\n            \"aria-pressed\": u,\n            \"data-selected\": u || void 0,\n            \"data-test\": s.slice(0, 1).toLowerCase() + s.replace(/\\s+/g, \"\").slice(1),\n            size: 30,\n            disabled: b || !1,\n            ref: t,\n            ...w,\n            children: f\n          }\n        )\n      }\n    );\n  }\n), Rt = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((r, t) => {\n  const { className: n, items: o, isDisabled: s, ...c } = r;\n  (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_3__.assertEmpty)(c);\n  const f = o.filter((u) => u.isSelected)[0];\n  return f ? /* @__PURE__ */ l.jsxs(\n    _mantine_core__WEBPACK_IMPORTED_MODULE_5__.Menu,\n    {\n      withinPortal: !1,\n      transitionProps: {\n        exitDuration: 0\n      },\n      disabled: s,\n      middlewares: { flip: !0, shift: !0, inline: !1, size: !0 },\n      children: [\n        /* @__PURE__ */ l.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_5__.Menu.Target, { children: /* @__PURE__ */ l.jsx(\n          _mantine_core__WEBPACK_IMPORTED_MODULE_10__.Button,\n          {\n            onMouseDown: (u) => {\n              (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_3__.isSafari)() && u.currentTarget.focus();\n            },\n            leftSection: f.icon,\n            rightSection: /* @__PURE__ */ l.jsx(Jr, {}),\n            size: \"xs\",\n            variant: \"subtle\",\n            disabled: s,\n            children: f.text\n          }\n        ) }),\n        /* @__PURE__ */ l.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_5__.Menu.Dropdown, { className: n, ref: t, children: o.map((u) => /* @__PURE__ */ l.jsx(\n          _mantine_core__WEBPACK_IMPORTED_MODULE_5__.Menu.Item,\n          {\n            onClick: u.onClick,\n            leftSection: u.icon,\n            rightSection: u.isSelected ? /* @__PURE__ */ l.jsx(_mantine_core__WEBPACK_IMPORTED_MODULE_6__.CheckIcon, { size: 10, className: \"bn-tick-icon\" }) : (\n              // Ensures space for tick even if item isn't currently selected.\n              /* @__PURE__ */ l.jsx(\"div\", { className: \"bn-tick-space\" })\n            ),\n            disabled: u.isDisabled,\n            children: u.text\n          },\n          u.text\n        )) })\n      ]\n    }\n  ) : null;\n});\nconst x = [\n  \"#FFFFFF\",\n  \"#EFEFEF\",\n  \"#CFCFCF\",\n  \"#AFAFAF\",\n  \"#7F7F7F\",\n  \"#3F3F3F\",\n  \"#1F1F1F\",\n  \"#161616\",\n  \"#0F0F0F\",\n  \"#000000\"\n], ze = {\n  colors: {\n    editor: {\n      text: x[5],\n      background: x[0]\n    },\n    menu: {\n      text: x[5],\n      background: x[0]\n    },\n    tooltip: {\n      text: x[5],\n      background: x[1]\n    },\n    hovered: {\n      text: x[5],\n      background: x[1]\n    },\n    selected: {\n      text: x[0],\n      background: x[5]\n    },\n    disabled: {\n      text: x[3],\n      background: x[1]\n    },\n    shadow: x[2],\n    border: x[1],\n    sideMenu: x[2],\n    highlights: {\n      gray: {\n        text: \"#9b9a97\",\n        background: \"#ebeced\"\n      },\n      brown: {\n        text: \"#64473a\",\n        background: \"#e9e5e3\"\n      },\n      red: {\n        text: \"#e03e3e\",\n        background: \"#fbe4e4\"\n      },\n      orange: {\n        text: \"#d9730d\",\n        background: \"#f6e9d9\"\n      },\n      yellow: {\n        text: \"#dfab01\",\n        background: \"#fbf3db\"\n      },\n      green: {\n        text: \"#4d6461\",\n        background: \"#ddedea\"\n      },\n      blue: {\n        text: \"#0b6e99\",\n        background: \"#ddebf1\"\n      },\n      purple: {\n        text: \"#6940a5\",\n        background: \"#eae4f2\"\n      },\n      pink: {\n        text: \"#ad1a72\",\n        background: \"#f4dfeb\"\n      }\n    }\n  },\n  borderRadius: 6,\n  fontFamily: '\"Inter\", \"SF Pro Display\", -apple-system, BlinkMacSystemFont, \"Open Sans\", \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif'\n}, Ot = {\n  colors: {\n    editor: {\n      text: x[2],\n      background: x[6]\n    },\n    menu: {\n      text: x[2],\n      background: x[6]\n    },\n    tooltip: {\n      text: x[2],\n      background: x[7]\n    },\n    hovered: {\n      text: x[2],\n      background: x[7]\n    },\n    selected: {\n      text: x[2],\n      background: x[8]\n    },\n    disabled: {\n      text: x[5],\n      background: x[7]\n    },\n    shadow: x[8],\n    border: x[7],\n    sideMenu: x[4],\n    highlights: {\n      gray: {\n        text: \"#bebdb8\",\n        background: \"#9b9a97\"\n      },\n      brown: {\n        text: \"#8e6552\",\n        background: \"#64473a\"\n      },\n      red: {\n        text: \"#ec4040\",\n        background: \"#be3434\"\n      },\n      orange: {\n        text: \"#e3790d\",\n        background: \"#b7600a\"\n      },\n      yellow: {\n        text: \"#dfab01\",\n        background: \"#b58b00\"\n      },\n      green: {\n        text: \"#6b8b87\",\n        background: \"#4d6461\"\n      },\n      blue: {\n        text: \"#0e87bc\",\n        background: \"#0b6e99\"\n      },\n      purple: {\n        text: \"#8552d7\",\n        background: \"#6940a5\"\n      },\n      pink: {\n        text: \"#da208f\",\n        background: \"#ad1a72\"\n      }\n    }\n  },\n  borderRadius: ze.borderRadius,\n  fontFamily: ze.fontFamily\n}, Tt = {\n  FormattingToolbar: {\n    Root: Le,\n    Button: Ae,\n    Select: Rt\n  },\n  FilePanel: {\n    Root: at,\n    Button: it,\n    FileInput: st,\n    TabPanel: lt,\n    TextInput: ut\n  },\n  LinkToolbar: {\n    Root: Le,\n    Button: Ae\n  },\n  SideMenu: {\n    Root: vt,\n    Button: bt\n  },\n  SuggestionMenu: {\n    Root: pt,\n    Item: gt,\n    EmptyItem: mt,\n    Label: ht,\n    Loader: xt\n  },\n  TableHandle: {\n    Root: yt\n  },\n  Generic: {\n    Form: {\n      Root: (r) => /* @__PURE__ */ l.jsx(\"div\", { children: r.children }),\n      TextInput: Wr\n    },\n    Menu: {\n      Root: Qr,\n      Trigger: rt,\n      Dropdown: tt,\n      Divider: nt,\n      Label: ot,\n      Item: et\n    },\n    Popover: {\n      Root: ct,\n      Trigger: dt,\n      Content: ft\n    }\n  }\n}, Et = {\n  // Removes button press effect\n  activeClassName: \"\"\n}, Ft = (r) => {\n  const { theme: t, ...n } = r, o = (0,_blocknote_react__WEBPACK_IMPORTED_MODULE_1__.useBlockNoteContext)(), s = (0,use_prefers_color_scheme__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(), c = (o == null ? void 0 : o.colorSchemePreference) || s, f = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (u) => {\n      if (u && ($r(u), typeof t == \"object\")) {\n        if (\"light\" in t && \"dark\" in t) {\n          De(\n            t[c === \"dark\" ? \"dark\" : \"light\"],\n            u\n          );\n          return;\n        }\n        De(t, u);\n        return;\n      }\n    },\n    [c, t]\n  );\n  return /* @__PURE__ */ l.jsx(_blocknote_react__WEBPACK_IMPORTED_MODULE_1__.ComponentsContext.Provider, { value: Tt, children: /* @__PURE__ */ l.jsx(\n    _mantine_core__WEBPACK_IMPORTED_MODULE_24__.MantineProvider,\n    {\n      theme: Et,\n      cssVariablesSelector: \".bn-container\",\n      children: /* @__PURE__ */ l.jsx(\n        _blocknote_react__WEBPACK_IMPORTED_MODULE_1__.BlockNoteViewRaw,\n        {\n          theme: typeof t == \"object\" ? void 0 : t,\n          ...n,\n          ref: f\n        }\n      )\n    }\n  ) });\n};\n\n//# sourceMappingURL=blocknote-mantine.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@blocknote/mantine/dist/blocknote-mantine.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@blocknote/react/dist/blocknote-react.js":
/*!***************************************************************!*\
  !*** ./node_modules/@blocknote/react/dist/blocknote-react.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AddBlockButton: () => (/* binding */ xr),\n/* harmony export */   AddButton: () => (/* binding */ Tt),\n/* harmony export */   AddColumnButton: () => (/* binding */ Lr),\n/* harmony export */   AddFileButton: () => (/* binding */ je),\n/* harmony export */   AddRowButton: () => (/* binding */ Rr),\n/* harmony export */   AudioPreview: () => (/* binding */ qr),\n/* harmony export */   AudioToExternalHTML: () => (/* binding */ Yr),\n/* harmony export */   BasicTextStyleButton: () => (/* binding */ fe),\n/* harmony export */   BlockColorsItem: () => (/* binding */ vr),\n/* harmony export */   BlockContentWrapper: () => (/* binding */ Oe),\n/* harmony export */   BlockNoteContext: () => (/* binding */ Wt),\n/* harmony export */   BlockNoteDefaultUI: () => (/* binding */ Ur),\n/* harmony export */   BlockNoteViewRaw: () => (/* binding */ ui),\n/* harmony export */   BlockTypeSelect: () => (/* binding */ or),\n/* harmony export */   ColorStyleButton: () => (/* binding */ Go),\n/* harmony export */   ComponentsContext: () => (/* binding */ go),\n/* harmony export */   CreateLinkButton: () => (/* binding */ qo),\n/* harmony export */   DefaultFilePreview: () => (/* binding */ ye),\n/* harmony export */   DeleteButton: () => (/* binding */ Nr),\n/* harmony export */   DeleteColumnButton: () => (/* binding */ Fr),\n/* harmony export */   DeleteLinkButton: () => (/* binding */ dr),\n/* harmony export */   DeleteRowButton: () => (/* binding */ Pr),\n/* harmony export */   DragHandleButton: () => (/* binding */ yr),\n/* harmony export */   DragHandleMenu: () => (/* binding */ kr),\n/* harmony export */   EditLinkButton: () => (/* binding */ fr),\n/* harmony export */   EditLinkMenuItems: () => (/* binding */ on),\n/* harmony export */   EmbedTab: () => (/* binding */ Jo),\n/* harmony export */   FigureWithCaption: () => (/* binding */ $e),\n/* harmony export */   FileAndCaptionWrapper: () => (/* binding */ $),\n/* harmony export */   FileCaptionButton: () => (/* binding */ Yo),\n/* harmony export */   FilePanel: () => (/* binding */ rn),\n/* harmony export */   FilePanelController: () => (/* binding */ gr),\n/* harmony export */   FileReplaceButton: () => (/* binding */ er),\n/* harmony export */   FileToExternalHTML: () => (/* binding */ Kr),\n/* harmony export */   FormattingToolbar: () => (/* binding */ sr),\n/* harmony export */   FormattingToolbarController: () => (/* binding */ ur),\n/* harmony export */   ImagePreview: () => (/* binding */ Xr),\n/* harmony export */   ImageToExternalHTML: () => (/* binding */ Jr),\n/* harmony export */   InlineContentWrapper: () => (/* binding */ oi),\n/* harmony export */   LinkToolbar: () => (/* binding */ hr),\n/* harmony export */   LinkToolbarController: () => (/* binding */ br),\n/* harmony export */   LinkWithCaption: () => (/* binding */ we),\n/* harmony export */   NestBlockButton: () => (/* binding */ Ko),\n/* harmony export */   OpenLinkButton: () => (/* binding */ mr),\n/* harmony export */   ReactAudioBlock: () => (/* binding */ di),\n/* harmony export */   ReactFileBlock: () => (/* binding */ fi),\n/* harmony export */   ReactImageBlock: () => (/* binding */ mi),\n/* harmony export */   ReactVideoBlock: () => (/* binding */ hi),\n/* harmony export */   RemoveBlockItem: () => (/* binding */ Cr),\n/* harmony export */   ResizeHandlesWrapper: () => (/* binding */ an),\n/* harmony export */   SideMenu: () => (/* binding */ jr),\n/* harmony export */   SideMenuController: () => (/* binding */ wr),\n/* harmony export */   SuggestionMenuController: () => (/* binding */ Br),\n/* harmony export */   SuggestionMenuWrapper: () => (/* binding */ Tr),\n/* harmony export */   TableHandle: () => (/* binding */ Dr),\n/* harmony export */   TableHandleMenu: () => (/* binding */ Or),\n/* harmony export */   TableHandlesController: () => (/* binding */ zr),\n/* harmony export */   TextAlignButton: () => (/* binding */ Ne),\n/* harmony export */   UnnestBlockButton: () => (/* binding */ Xo),\n/* harmony export */   UploadTab: () => (/* binding */ Qo),\n/* harmony export */   VideoPreview: () => (/* binding */ Qr),\n/* harmony export */   VideoToExternalHTML: () => (/* binding */ ei),\n/* harmony export */   blockTypeSelectItems: () => (/* binding */ nr),\n/* harmony export */   createReactBlockSpec: () => (/* binding */ ke),\n/* harmony export */   createReactInlineContentSpec: () => (/* binding */ xi),\n/* harmony export */   createReactStyleSpec: () => (/* binding */ vi),\n/* harmony export */   getDefaultReactSlashMenuItems: () => (/* binding */ Er),\n/* harmony export */   getFormattingToolbarItems: () => (/* binding */ cr),\n/* harmony export */   useActiveStyles: () => (/* binding */ bi),\n/* harmony export */   useBlockNote: () => (/* binding */ gi),\n/* harmony export */   useBlockNoteContext: () => (/* binding */ U),\n/* harmony export */   useBlockNoteEditor: () => (/* binding */ H),\n/* harmony export */   useCloseSuggestionMenuNoItems: () => (/* binding */ _r),\n/* harmony export */   useComponentsContext: () => (/* binding */ v),\n/* harmony export */   useCreateBlockNote: () => (/* binding */ ti),\n/* harmony export */   useDictionary: () => (/* binding */ _),\n/* harmony export */   useEditorChange: () => (/* binding */ Ue),\n/* harmony export */   useEditorContentOrSelectionChange: () => (/* binding */ W),\n/* harmony export */   useEditorForceUpdate: () => (/* binding */ pi),\n/* harmony export */   useEditorSelectionChange: () => (/* binding */ We),\n/* harmony export */   useLoadSuggestionMenuItems: () => (/* binding */ Sr),\n/* harmony export */   useSelectedBlocks: () => (/* binding */ O),\n/* harmony export */   useSuggestionMenuKeyboardNavigation: () => (/* binding */ Mr),\n/* harmony export */   useTableHandlesPositioning: () => (/* binding */ Zr)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _floating_ui_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @floating-ui/react */ \"(ssr)/./node_modules/@floating-ui/react/dist/floating-ui.react.mjs\");\n/* harmony import */ var _floating_ui_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @floating-ui/react */ \"(ssr)/./node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.mjs\");\n/* harmony import */ var _blocknote_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @blocknote/core */ \"(ssr)/./node_modules/@blocknote/core/dist/blocknote.js\");\n/* harmony import */ var use_prefers_color_scheme__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! use-prefers-color-scheme */ \"(ssr)/./node_modules/use-prefers-color-scheme/dist/index.esm.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-dom.js\");\n/* harmony import */ var _tiptap_react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @tiptap/react */ \"(ssr)/./node_modules/@tiptap/react/dist/index.js\");\n/* harmony import */ var _tiptap_react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @tiptap/react */ \"(ssr)/./node_modules/@tiptap/core/dist/index.js\");\n\n\n\n\n\n\nconst Wt = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(void 0);\nfunction U(e) {\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(Wt);\n}\nvar Ie = { exports: {} }, Q = {};\n/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar Ct;\nfunction mo() {\n  if (Ct)\n    return Q;\n  Ct = 1;\n  var e = react__WEBPACK_IMPORTED_MODULE_0__, t = Symbol.for(\"react.element\"), n = Symbol.for(\"react.fragment\"), o = Object.prototype.hasOwnProperty, l = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, a = { key: !0, ref: !0, __self: !0, __source: !0 };\n  function c(s, u, f) {\n    var m, b = {}, g = null, k = null;\n    f !== void 0 && (g = \"\" + f), u.key !== void 0 && (g = \"\" + u.key), u.ref !== void 0 && (k = u.ref);\n    for (m in u)\n      o.call(u, m) && !a.hasOwnProperty(m) && (b[m] = u[m]);\n    if (s && s.defaultProps)\n      for (m in u = s.defaultProps, u)\n        b[m] === void 0 && (b[m] = u[m]);\n    return { $$typeof: t, type: s, key: g, ref: k, props: b, _owner: l.current };\n  }\n  return Q.Fragment = n, Q.jsx = c, Q.jsxs = c, Q;\n}\nvar ee = {};\n/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar kt;\nfunction ho() {\n  return kt || (kt = 1,  true && function() {\n    var e = react__WEBPACK_IMPORTED_MODULE_0__, t = Symbol.for(\"react.element\"), n = Symbol.for(\"react.portal\"), o = Symbol.for(\"react.fragment\"), l = Symbol.for(\"react.strict_mode\"), a = Symbol.for(\"react.profiler\"), c = Symbol.for(\"react.provider\"), s = Symbol.for(\"react.context\"), u = Symbol.for(\"react.forward_ref\"), f = Symbol.for(\"react.suspense\"), m = Symbol.for(\"react.suspense_list\"), b = Symbol.for(\"react.memo\"), g = Symbol.for(\"react.lazy\"), k = Symbol.for(\"react.offscreen\"), V = Symbol.iterator, F = \"@@iterator\";\n    function N(i) {\n      if (i === null || typeof i != \"object\")\n        return null;\n      var d = V && i[V] || i[F];\n      return typeof d == \"function\" ? d : null;\n    }\n    var z = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n    function E(i) {\n      {\n        for (var d = arguments.length, h = new Array(d > 1 ? d - 1 : 0), p = 1; p < d; p++)\n          h[p - 1] = arguments[p];\n        He(\"error\", i, h);\n      }\n    }\n    function He(i, d, h) {\n      {\n        var p = z.ReactDebugCurrentFrame, w = p.getStackAddendum();\n        w !== \"\" && (d += \"%s\", h = h.concat([w]));\n        var M = h.map(function(y) {\n          return String(y);\n        });\n        M.unshift(\"Warning: \" + d), Function.prototype.apply.call(console[i], console, M);\n      }\n    }\n    var _e = !1, le = !1, Se = !1, Me = !1, cn = !1, qe;\n    qe = Symbol.for(\"react.module.reference\");\n    function sn(i) {\n      return !!(typeof i == \"string\" || typeof i == \"function\" || i === o || i === a || cn || i === l || i === f || i === m || Me || i === k || _e || le || Se || typeof i == \"object\" && i !== null && (i.$$typeof === g || i.$$typeof === b || i.$$typeof === c || i.$$typeof === s || i.$$typeof === u || // This needs to include all possible module reference object\n      // types supported by any Flight configuration anywhere since\n      // we don't know which Flight build this will end up being used\n      // with.\n      i.$$typeof === qe || i.getModuleId !== void 0));\n    }\n    function un(i, d, h) {\n      var p = i.displayName;\n      if (p)\n        return p;\n      var w = d.displayName || d.name || \"\";\n      return w !== \"\" ? h + \"(\" + w + \")\" : h;\n    }\n    function Ye(i) {\n      return i.displayName || \"Context\";\n    }\n    function A(i) {\n      if (i == null)\n        return null;\n      if (typeof i.tag == \"number\" && E(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"), typeof i == \"function\")\n        return i.displayName || i.name || null;\n      if (typeof i == \"string\")\n        return i;\n      switch (i) {\n        case o:\n          return \"Fragment\";\n        case n:\n          return \"Portal\";\n        case a:\n          return \"Profiler\";\n        case l:\n          return \"StrictMode\";\n        case f:\n          return \"Suspense\";\n        case m:\n          return \"SuspenseList\";\n      }\n      if (typeof i == \"object\")\n        switch (i.$$typeof) {\n          case s:\n            var d = i;\n            return Ye(d) + \".Consumer\";\n          case c:\n            var h = i;\n            return Ye(h._context) + \".Provider\";\n          case u:\n            return un(i, i.render, \"ForwardRef\");\n          case b:\n            var p = i.displayName || null;\n            return p !== null ? p : A(i.type) || \"Memo\";\n          case g: {\n            var w = i, M = w._payload, y = w._init;\n            try {\n              return A(y(M));\n            } catch {\n              return null;\n            }\n          }\n        }\n      return null;\n    }\n    var G = Object.assign, X = 0, Ke, Xe, Je, Qe, et, tt, nt;\n    function ot() {\n    }\n    ot.__reactDisabledLog = !0;\n    function dn() {\n      {\n        if (X === 0) {\n          Ke = console.log, Xe = console.info, Je = console.warn, Qe = console.error, et = console.group, tt = console.groupCollapsed, nt = console.groupEnd;\n          var i = {\n            configurable: !0,\n            enumerable: !0,\n            value: ot,\n            writable: !0\n          };\n          Object.defineProperties(console, {\n            info: i,\n            log: i,\n            warn: i,\n            error: i,\n            group: i,\n            groupCollapsed: i,\n            groupEnd: i\n          });\n        }\n        X++;\n      }\n    }\n    function fn() {\n      {\n        if (X--, X === 0) {\n          var i = {\n            configurable: !0,\n            enumerable: !0,\n            writable: !0\n          };\n          Object.defineProperties(console, {\n            log: G({}, i, {\n              value: Ke\n            }),\n            info: G({}, i, {\n              value: Xe\n            }),\n            warn: G({}, i, {\n              value: Je\n            }),\n            error: G({}, i, {\n              value: Qe\n            }),\n            group: G({}, i, {\n              value: et\n            }),\n            groupCollapsed: G({}, i, {\n              value: tt\n            }),\n            groupEnd: G({}, i, {\n              value: nt\n            })\n          });\n        }\n        X < 0 && E(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\");\n      }\n    }\n    var Te = z.ReactCurrentDispatcher, Ve;\n    function ae(i, d, h) {\n      {\n        if (Ve === void 0)\n          try {\n            throw Error();\n          } catch (w) {\n            var p = w.stack.trim().match(/\\n( *(at )?)/);\n            Ve = p && p[1] || \"\";\n          }\n        return `\n` + Ve + i;\n      }\n    }\n    var Ee = !1, ce;\n    {\n      var mn = typeof WeakMap == \"function\" ? WeakMap : Map;\n      ce = new mn();\n    }\n    function rt(i, d) {\n      if (!i || Ee)\n        return \"\";\n      {\n        var h = ce.get(i);\n        if (h !== void 0)\n          return h;\n      }\n      var p;\n      Ee = !0;\n      var w = Error.prepareStackTrace;\n      Error.prepareStackTrace = void 0;\n      var M;\n      M = Te.current, Te.current = null, dn();\n      try {\n        if (d) {\n          var y = function() {\n            throw Error();\n          };\n          if (Object.defineProperty(y.prototype, \"props\", {\n            set: function() {\n              throw Error();\n            }\n          }), typeof Reflect == \"object\" && Reflect.construct) {\n            try {\n              Reflect.construct(y, []);\n            } catch (Z) {\n              p = Z;\n            }\n            Reflect.construct(i, [], y);\n          } else {\n            try {\n              y.call();\n            } catch (Z) {\n              p = Z;\n            }\n            i.call(y.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (Z) {\n            p = Z;\n          }\n          i();\n        }\n      } catch (Z) {\n        if (Z && p && typeof Z.stack == \"string\") {\n          for (var x = Z.stack.split(`\n`), P = p.stack.split(`\n`), B = x.length - 1, R = P.length - 1; B >= 1 && R >= 0 && x[B] !== P[R]; )\n            R--;\n          for (; B >= 1 && R >= 0; B--, R--)\n            if (x[B] !== P[R]) {\n              if (B !== 1 || R !== 1)\n                do\n                  if (B--, R--, R < 0 || x[B] !== P[R]) {\n                    var D = `\n` + x[B].replace(\" at new \", \" at \");\n                    return i.displayName && D.includes(\"<anonymous>\") && (D = D.replace(\"<anonymous>\", i.displayName)), typeof i == \"function\" && ce.set(i, D), D;\n                  }\n                while (B >= 1 && R >= 0);\n              break;\n            }\n        }\n      } finally {\n        Ee = !1, Te.current = M, fn(), Error.prepareStackTrace = w;\n      }\n      var Y = i ? i.displayName || i.name : \"\", pt = Y ? ae(Y) : \"\";\n      return typeof i == \"function\" && ce.set(i, pt), pt;\n    }\n    function hn(i, d, h) {\n      return rt(i, !1);\n    }\n    function bn(i) {\n      var d = i.prototype;\n      return !!(d && d.isReactComponent);\n    }\n    function se(i, d, h) {\n      if (i == null)\n        return \"\";\n      if (typeof i == \"function\")\n        return rt(i, bn(i));\n      if (typeof i == \"string\")\n        return ae(i);\n      switch (i) {\n        case f:\n          return ae(\"Suspense\");\n        case m:\n          return ae(\"SuspenseList\");\n      }\n      if (typeof i == \"object\")\n        switch (i.$$typeof) {\n          case u:\n            return hn(i.render);\n          case b:\n            return se(i.type, d, h);\n          case g: {\n            var p = i, w = p._payload, M = p._init;\n            try {\n              return se(M(w), d, h);\n            } catch {\n            }\n          }\n        }\n      return \"\";\n    }\n    var ue = Object.prototype.hasOwnProperty, it = {}, lt = z.ReactDebugCurrentFrame;\n    function de(i) {\n      if (i) {\n        var d = i._owner, h = se(i.type, i._source, d ? d.type : null);\n        lt.setExtraStackFrame(h);\n      } else\n        lt.setExtraStackFrame(null);\n    }\n    function gn(i, d, h, p, w) {\n      {\n        var M = Function.call.bind(ue);\n        for (var y in i)\n          if (M(i, y)) {\n            var x = void 0;\n            try {\n              if (typeof i[y] != \"function\") {\n                var P = Error((p || \"React class\") + \": \" + h + \" type `\" + y + \"` is invalid; it must be a function, usually from the `prop-types` package, but received `\" + typeof i[y] + \"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");\n                throw P.name = \"Invariant Violation\", P;\n              }\n              x = i[y](d, y, p, h, null, \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\");\n            } catch (B) {\n              x = B;\n            }\n            x && !(x instanceof Error) && (de(w), E(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\", p || \"React class\", h, y, typeof x), de(null)), x instanceof Error && !(x.message in it) && (it[x.message] = !0, de(w), E(\"Failed %s type: %s\", h, x.message), de(null));\n          }\n      }\n    }\n    var pn = Array.isArray;\n    function Be(i) {\n      return pn(i);\n    }\n    function xn(i) {\n      {\n        var d = typeof Symbol == \"function\" && Symbol.toStringTag, h = d && i[Symbol.toStringTag] || i.constructor.name || \"Object\";\n        return h;\n      }\n    }\n    function vn(i) {\n      try {\n        return at(i), !1;\n      } catch {\n        return !0;\n      }\n    }\n    function at(i) {\n      return \"\" + i;\n    }\n    function ct(i) {\n      if (vn(i))\n        return E(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\", xn(i)), at(i);\n    }\n    var J = z.ReactCurrentOwner, Cn = {\n      key: !0,\n      ref: !0,\n      __self: !0,\n      __source: !0\n    }, st, ut, Re;\n    Re = {};\n    function kn(i) {\n      if (ue.call(i, \"ref\")) {\n        var d = Object.getOwnPropertyDescriptor(i, \"ref\").get;\n        if (d && d.isReactWarning)\n          return !1;\n      }\n      return i.ref !== void 0;\n    }\n    function yn(i) {\n      if (ue.call(i, \"key\")) {\n        var d = Object.getOwnPropertyDescriptor(i, \"key\").get;\n        if (d && d.isReactWarning)\n          return !1;\n      }\n      return i.key !== void 0;\n    }\n    function jn(i, d) {\n      if (typeof i.ref == \"string\" && J.current && d && J.current.stateNode !== d) {\n        var h = A(J.current.type);\n        Re[h] || (E('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', A(J.current.type), i.ref), Re[h] = !0);\n      }\n    }\n    function wn(i, d) {\n      {\n        var h = function() {\n          st || (st = !0, E(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\", d));\n        };\n        h.isReactWarning = !0, Object.defineProperty(i, \"key\", {\n          get: h,\n          configurable: !0\n        });\n      }\n    }\n    function Hn(i, d) {\n      {\n        var h = function() {\n          ut || (ut = !0, E(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\", d));\n        };\n        h.isReactWarning = !0, Object.defineProperty(i, \"ref\", {\n          get: h,\n          configurable: !0\n        });\n      }\n    }\n    var _n = function(i, d, h, p, w, M, y) {\n      var x = {\n        // This tag allows us to uniquely identify this as a React Element\n        $$typeof: t,\n        // Built-in properties that belong on the element\n        type: i,\n        key: d,\n        ref: h,\n        props: y,\n        // Record the component responsible for creating this element.\n        _owner: M\n      };\n      return x._store = {}, Object.defineProperty(x._store, \"validated\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: !1\n      }), Object.defineProperty(x, \"_self\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !1,\n        value: p\n      }), Object.defineProperty(x, \"_source\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !1,\n        value: w\n      }), Object.freeze && (Object.freeze(x.props), Object.freeze(x)), x;\n    };\n    function Sn(i, d, h, p, w) {\n      {\n        var M, y = {}, x = null, P = null;\n        h !== void 0 && (ct(h), x = \"\" + h), yn(d) && (ct(d.key), x = \"\" + d.key), kn(d) && (P = d.ref, jn(d, w));\n        for (M in d)\n          ue.call(d, M) && !Cn.hasOwnProperty(M) && (y[M] = d[M]);\n        if (i && i.defaultProps) {\n          var B = i.defaultProps;\n          for (M in B)\n            y[M] === void 0 && (y[M] = B[M]);\n        }\n        if (x || P) {\n          var R = typeof i == \"function\" ? i.displayName || i.name || \"Unknown\" : i;\n          x && wn(y, R), P && Hn(y, R);\n        }\n        return _n(i, x, P, w, p, J.current, y);\n      }\n    }\n    var Le = z.ReactCurrentOwner, dt = z.ReactDebugCurrentFrame;\n    function q(i) {\n      if (i) {\n        var d = i._owner, h = se(i.type, i._source, d ? d.type : null);\n        dt.setExtraStackFrame(h);\n      } else\n        dt.setExtraStackFrame(null);\n    }\n    var Pe;\n    Pe = !1;\n    function Fe(i) {\n      return typeof i == \"object\" && i !== null && i.$$typeof === t;\n    }\n    function ft() {\n      {\n        if (Le.current) {\n          var i = A(Le.current.type);\n          if (i)\n            return `\n\nCheck the render method of \\`` + i + \"`.\";\n        }\n        return \"\";\n      }\n    }\n    function Mn(i) {\n      {\n        if (i !== void 0) {\n          var d = i.fileName.replace(/^.*[\\\\\\/]/, \"\"), h = i.lineNumber;\n          return `\n\nCheck your code at ` + d + \":\" + h + \".\";\n        }\n        return \"\";\n      }\n    }\n    var mt = {};\n    function Tn(i) {\n      {\n        var d = ft();\n        if (!d) {\n          var h = typeof i == \"string\" ? i : i.displayName || i.name;\n          h && (d = `\n\nCheck the top-level render call using <` + h + \">.\");\n        }\n        return d;\n      }\n    }\n    function ht(i, d) {\n      {\n        if (!i._store || i._store.validated || i.key != null)\n          return;\n        i._store.validated = !0;\n        var h = Tn(d);\n        if (mt[h])\n          return;\n        mt[h] = !0;\n        var p = \"\";\n        i && i._owner && i._owner !== Le.current && (p = \" It was passed a child from \" + A(i._owner.type) + \".\"), q(i), E('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', h, p), q(null);\n      }\n    }\n    function bt(i, d) {\n      {\n        if (typeof i != \"object\")\n          return;\n        if (Be(i))\n          for (var h = 0; h < i.length; h++) {\n            var p = i[h];\n            Fe(p) && ht(p, d);\n          }\n        else if (Fe(i))\n          i._store && (i._store.validated = !0);\n        else if (i) {\n          var w = N(i);\n          if (typeof w == \"function\" && w !== i.entries)\n            for (var M = w.call(i), y; !(y = M.next()).done; )\n              Fe(y.value) && ht(y.value, d);\n        }\n      }\n    }\n    function Vn(i) {\n      {\n        var d = i.type;\n        if (d == null || typeof d == \"string\")\n          return;\n        var h;\n        if (typeof d == \"function\")\n          h = d.propTypes;\n        else if (typeof d == \"object\" && (d.$$typeof === u || // Note: Memo only checks outer props here.\n        // Inner props are checked in the reconciler.\n        d.$$typeof === b))\n          h = d.propTypes;\n        else\n          return;\n        if (h) {\n          var p = A(d);\n          gn(h, i.props, \"prop\", p, i);\n        } else if (d.PropTypes !== void 0 && !Pe) {\n          Pe = !0;\n          var w = A(d);\n          E(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\", w || \"Unknown\");\n        }\n        typeof d.getDefaultProps == \"function\" && !d.getDefaultProps.isReactClassApproved && E(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\");\n      }\n    }\n    function En(i) {\n      {\n        for (var d = Object.keys(i.props), h = 0; h < d.length; h++) {\n          var p = d[h];\n          if (p !== \"children\" && p !== \"key\") {\n            q(i), E(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\", p), q(null);\n            break;\n          }\n        }\n        i.ref !== null && (q(i), E(\"Invalid attribute `ref` supplied to `React.Fragment`.\"), q(null));\n      }\n    }\n    function gt(i, d, h, p, w, M) {\n      {\n        var y = sn(i);\n        if (!y) {\n          var x = \"\";\n          (i === void 0 || typeof i == \"object\" && i !== null && Object.keys(i).length === 0) && (x += \" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\");\n          var P = Mn(w);\n          P ? x += P : x += ft();\n          var B;\n          i === null ? B = \"null\" : Be(i) ? B = \"array\" : i !== void 0 && i.$$typeof === t ? (B = \"<\" + (A(i.type) || \"Unknown\") + \" />\", x = \" Did you accidentally export a JSX literal instead of a component?\") : B = typeof i, E(\"React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\", B, x);\n        }\n        var R = Sn(i, d, h, w, M);\n        if (R == null)\n          return R;\n        if (y) {\n          var D = d.children;\n          if (D !== void 0)\n            if (p)\n              if (Be(D)) {\n                for (var Y = 0; Y < D.length; Y++)\n                  bt(D[Y], i);\n                Object.freeze && Object.freeze(D);\n              } else\n                E(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\");\n            else\n              bt(D, i);\n        }\n        return i === o ? En(R) : Vn(R), R;\n      }\n    }\n    function Bn(i, d, h) {\n      return gt(i, d, h, !0);\n    }\n    function Rn(i, d, h) {\n      return gt(i, d, h, !1);\n    }\n    var Ln = Rn, Pn = Bn;\n    ee.Fragment = o, ee.jsx = Ln, ee.jsxs = Pn;\n  }()), ee;\n}\n false ? 0 : Ie.exports = ho();\nvar r = Ie.exports;\nfunction H(e) {\n  const t = U();\n  if (!(t != null && t.editor))\n    throw new Error(\n      \"useBlockNoteEditor was called outside of a BlockNoteContext provider or BlockNoteView component\"\n    );\n  return t.editor;\n}\nfunction Ue(e, t) {\n  const n = U();\n  t || (t = n == null ? void 0 : n.editor), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!t)\n      throw new Error(\n        \"'editor' is required, either from BlockNoteContext or as a function argument\"\n      );\n    return t.onChange(e);\n  }, [e, t]);\n}\nfunction We(e, t) {\n  const n = U();\n  t || (t = n == null ? void 0 : n.editor), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!t)\n      throw new Error(\n        \"'editor' is required, either from BlockNoteContext or as a function argument\"\n      );\n    return t.onSelectionChange(e);\n  }, [e, t]);\n}\nfunction W(e, t) {\n  Ue(e, t), We(e, t);\n}\nfunction ie(e, t, n, o) {\n  const { refs: l, update: a, context: c, floatingStyles: s } = (0,_floating_ui_react__WEBPACK_IMPORTED_MODULE_4__.useFloating)({\n    open: e,\n    ...o\n  }), { isMounted: u, styles: f } = (0,_floating_ui_react__WEBPACK_IMPORTED_MODULE_4__.useTransitionStyles)(c), m = (0,_floating_ui_react__WEBPACK_IMPORTED_MODULE_4__.useDismiss)(c), { getReferenceProps: b, getFloatingProps: g } = (0,_floating_ui_react__WEBPACK_IMPORTED_MODULE_4__.useInteractions)([m]);\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    a();\n  }, [t, a]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    t !== null && l.setReference({\n      getBoundingClientRect: () => t\n    });\n  }, [t, l]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => ({\n      isMounted: u,\n      ref: l.setFloating,\n      style: {\n        display: \"flex\",\n        ...f,\n        ...s,\n        zIndex: n\n      },\n      getFloatingProps: g,\n      getReferenceProps: b\n    }),\n    [\n      s,\n      u,\n      l.setFloating,\n      f,\n      n,\n      g,\n      b\n    ]\n  );\n}\nfunction K(e) {\n  const [t, n] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => e((o) => {\n    n({ ...o });\n  }), [e]), t;\n}\nfunction bo(e) {\n  return (t) => {\n    e.forEach((n) => {\n      typeof n == \"function\" ? n(t) : n != null && (n.current = t);\n    });\n  };\n}\nconst go = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(\n  void 0\n);\nfunction v() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(go);\n}\nvar Gt = {\n  color: void 0,\n  size: void 0,\n  className: void 0,\n  style: void 0,\n  attr: void 0\n}, yt = react__WEBPACK_IMPORTED_MODULE_0__.createContext && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createContext(Gt), po = [\"attr\", \"size\", \"title\"];\nfunction xo(e, t) {\n  if (e == null)\n    return {};\n  var n = vo(e, t), o, l;\n  if (Object.getOwnPropertySymbols) {\n    var a = Object.getOwnPropertySymbols(e);\n    for (l = 0; l < a.length; l++)\n      o = a[l], !(t.indexOf(o) >= 0) && Object.prototype.propertyIsEnumerable.call(e, o) && (n[o] = e[o]);\n  }\n  return n;\n}\nfunction vo(e, t) {\n  if (e == null)\n    return {};\n  var n = {};\n  for (var o in e)\n    if (Object.prototype.hasOwnProperty.call(e, o)) {\n      if (t.indexOf(o) >= 0)\n        continue;\n      n[o] = e[o];\n    }\n  return n;\n}\nfunction be() {\n  return be = Object.assign ? Object.assign.bind() : function(e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var n = arguments[t];\n      for (var o in n)\n        Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o]);\n    }\n    return e;\n  }, be.apply(this, arguments);\n}\nfunction jt(e, t) {\n  var n = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    t && (o = o.filter(function(l) {\n      return Object.getOwnPropertyDescriptor(e, l).enumerable;\n    })), n.push.apply(n, o);\n  }\n  return n;\n}\nfunction ge(e) {\n  for (var t = 1; t < arguments.length; t++) {\n    var n = arguments[t] != null ? arguments[t] : {};\n    t % 2 ? jt(Object(n), !0).forEach(function(o) {\n      Co(e, o, n[o]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : jt(Object(n)).forEach(function(o) {\n      Object.defineProperty(e, o, Object.getOwnPropertyDescriptor(n, o));\n    });\n  }\n  return e;\n}\nfunction Co(e, t, n) {\n  return t = ko(t), t in e ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = n, e;\n}\nfunction ko(e) {\n  var t = yo(e, \"string\");\n  return typeof t == \"symbol\" ? t : t + \"\";\n}\nfunction yo(e, t) {\n  if (typeof e != \"object\" || !e)\n    return e;\n  var n = e[Symbol.toPrimitive];\n  if (n !== void 0) {\n    var o = n.call(e, t || \"default\");\n    if (typeof o != \"object\")\n      return o;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (t === \"string\" ? String : Number)(e);\n}\nfunction $t(e) {\n  return e && e.map((t, n) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(t.tag, ge({\n    key: n\n  }, t.attr), $t(t.child)));\n}\nfunction j(e) {\n  return (t) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(jo, be({\n    attr: ge({}, e.attr)\n  }, t), $t(e.child));\n}\nfunction jo(e) {\n  var t = (n) => {\n    var {\n      attr: o,\n      size: l,\n      title: a\n    } = e, c = xo(e, po), s = l || n.size || \"1em\", u;\n    return n.className && (u = n.className), e.className && (u = (u ? u + \" \" : \"\") + e.className), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", be({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, n.attr, o, c, {\n      className: u,\n      style: ge(ge({\n        color: e.color || n.color\n      }, n.style), e.style),\n      height: s,\n      width: s,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }), a && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"title\", null, a), e.children);\n  };\n  return yt !== void 0 ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(yt.Consumer, null, (n) => t(n)) : t(Gt);\n}\nfunction wo(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\", fill: \"currentColor\" }, child: [{ tag: \"path\", attr: { d: \"M23 12L15.9289 19.0711L14.5147 17.6569L20.1716 12L14.5147 6.34317L15.9289 4.92896L23 12ZM3.82843 12L9.48528 17.6569L8.07107 19.0711L1 12L8.07107 4.92896L9.48528 6.34317L3.82843 12Z\" }, child: [] }] })(e);\n}\nfunction Ce(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\", fill: \"currentColor\" }, child: [{ tag: \"path\", attr: { d: \"M3 8L9.00319 2H19.9978C20.5513 2 21 2.45531 21 2.9918V21.0082C21 21.556 20.5551 22 20.0066 22H3.9934C3.44476 22 3 21.5501 3 20.9932V8ZM10 4V9H5V20H19V4H10Z\" }, child: [] }] })(e);\n}\nfunction Ho(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\", fill: \"currentColor\" }, child: [{ tag: \"path\", attr: { d: \"M3 4H21V6H3V4ZM5 19H19V21H5V19ZM3 14H21V16H3V14ZM5 9H19V11H5V9Z\" }, child: [] }] })(e);\n}\nfunction _o(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\", fill: \"currentColor\" }, child: [{ tag: \"path\", attr: { d: \"M3 4H21V6H3V4ZM3 19H21V21H3V19ZM3 14H21V16H3V14ZM3 9H21V11H3V9Z\" }, child: [] }] })(e);\n}\nfunction So(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\", fill: \"currentColor\" }, child: [{ tag: \"path\", attr: { d: \"M3 4H21V6H3V4ZM3 19H17V21H3V19ZM3 14H21V16H3V14ZM3 9H17V11H3V9Z\" }, child: [] }] })(e);\n}\nfunction Mo(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\", fill: \"currentColor\" }, child: [{ tag: \"path\", attr: { d: \"M3 4H21V6H3V4ZM7 19H21V21H7V19ZM3 14H21V16H3V14ZM7 9H21V11H7V9Z\" }, child: [] }] })(e);\n}\nfunction To(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\", fill: \"currentColor\" }, child: [{ tag: \"path\", attr: { d: \"M8 11H12.5C13.8807 11 15 9.88071 15 8.5C15 7.11929 13.8807 6 12.5 6H8V11ZM18 15.5C18 17.9853 15.9853 20 13.5 20H6V4H12.5C14.9853 4 17 6.01472 17 8.5C17 9.70431 16.5269 10.7981 15.7564 11.6058C17.0979 12.3847 18 13.837 18 15.5ZM8 13V18H13.5C14.8807 18 16 16.8807 16 15.5C16 14.1193 14.8807 13 13.5 13H8Z\" }, child: [] }] })(e);\n}\nfunction wt(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\", fill: \"currentColor\" }, child: [{ tag: \"path\", attr: { d: \"M5.55397 22H3.3999L10.9999 3H12.9999L20.5999 22H18.4458L16.0458 16H7.95397L5.55397 22ZM8.75397 14H15.2458L11.9999 5.88517L8.75397 14Z\" }, child: [] }] })(e);\n}\nfunction qt(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\", fill: \"currentColor\" }, child: [{ tag: \"path\", attr: { d: \"M13 20H11V13H4V20H2V4H4V11H11V4H13V20ZM21.0005 8V20H19.0005L19 10.204L17 10.74V8.67L19.5005 8H21.0005Z\" }, child: [] }] })(e);\n}\nfunction Yt(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\", fill: \"currentColor\" }, child: [{ tag: \"path\", attr: { d: \"M4 4V11H11V4H13V20H11V13H4V20H2V4H4ZM18.5 8C20.5711 8 22.25 9.67893 22.25 11.75C22.25 12.6074 21.9623 13.3976 21.4781 14.0292L21.3302 14.2102L18.0343 18H22V20H15L14.9993 18.444L19.8207 12.8981C20.0881 12.5908 20.25 12.1893 20.25 11.75C20.25 10.7835 19.4665 10 18.5 10C17.5818 10 16.8288 10.7071 16.7558 11.6065L16.75 11.75H14.75C14.75 9.67893 16.4289 8 18.5 8Z\" }, child: [] }] })(e);\n}\nfunction Kt(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\", fill: \"currentColor\" }, child: [{ tag: \"path\", attr: { d: \"M22 8L21.9984 10L19.4934 12.883C21.0823 13.3184 22.25 14.7728 22.25 16.5C22.25 18.5711 20.5711 20.25 18.5 20.25C16.674 20.25 15.1528 18.9449 14.8184 17.2166L16.7821 16.8352C16.9384 17.6413 17.6481 18.25 18.5 18.25C19.4665 18.25 20.25 17.4665 20.25 16.5C20.25 15.5335 19.4665 14.75 18.5 14.75C18.214 14.75 17.944 14.8186 17.7056 14.9403L16.3992 13.3932L19.3484 10H15V8H22ZM4 4V11H11V4H13V20H11V13H4V20H2V4H4Z\" }, child: [] }] })(e);\n}\nfunction Vo(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\", fill: \"currentColor\" }, child: [{ tag: \"path\", attr: { d: \"M3 4H21V6H3V4ZM3 19H21V21H3V19ZM11 14H21V16H11V14ZM11 9H21V11H11V9ZM3 12.5L7 9V16L3 12.5Z\" }, child: [] }] })(e);\n}\nfunction Eo(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\", fill: \"currentColor\" }, child: [{ tag: \"path\", attr: { d: \"M3 4H21V6H3V4ZM3 19H21V21H3V19ZM11 14H21V16H11V14ZM11 9H21V11H11V9ZM7 12.5L3 16V9L7 12.5Z\" }, child: [] }] })(e);\n}\nfunction Ht(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\", fill: \"currentColor\" }, child: [{ tag: \"path\", attr: { d: \"M8 5H11V19H8V21H16V19H13V5H16V3H8V5ZM2 7C1.44772 7 1 7.44772 1 8V16C1 16.5523 1.44772 17 2 17H8V15H3V9H8V7H2ZM16 9H21V15H16V17H22C22.5523 17 23 16.5523 23 16V8C23 7.44772 22.5523 7 22 7H16V9Z\" }, child: [] }] })(e);\n}\nfunction Bo(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\", fill: \"currentColor\" }, child: [{ tag: \"path\", attr: { d: \"M15 20H7V18H9.92661L12.0425 6H9V4H17V6H14.0734L11.9575 18H15V20Z\" }, child: [] }] })(e);\n}\nfunction Ro(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\", fill: \"currentColor\" }, child: [{ tag: \"path\", attr: { d: \"M17 17H22V19H19V22H17V17ZM7 7H2V5H5V2H7V7ZM18.364 15.5355L16.9497 14.1213L18.364 12.7071C20.3166 10.7545 20.3166 7.58866 18.364 5.63604C16.4113 3.68342 13.2455 3.68342 11.2929 5.63604L9.87868 7.05025L8.46447 5.63604L9.87868 4.22183C12.6123 1.48816 17.0445 1.48816 19.7782 4.22183C22.5118 6.9555 22.5118 11.3877 19.7782 14.1213L18.364 15.5355ZM15.5355 18.364L14.1213 19.7782C11.3877 22.5118 6.9555 22.5118 4.22183 19.7782C1.48816 17.0445 1.48816 12.6123 4.22183 9.87868L5.63604 8.46447L7.05025 9.87868L5.63604 11.2929C3.68342 13.2455 3.68342 16.4113 5.63604 18.364C7.58866 20.3166 10.7545 20.3166 12.7071 18.364L14.1213 16.9497L15.5355 18.364ZM14.8284 7.75736L16.2426 9.17157L9.17157 16.2426L7.75736 14.8284L14.8284 7.75736Z\" }, child: [] }] })(e);\n}\nfunction Xt(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\", fill: \"currentColor\" }, child: [{ tag: \"path\", attr: { d: \"M18.3638 15.5355L16.9496 14.1213L18.3638 12.7071C20.3164 10.7545 20.3164 7.58866 18.3638 5.63604C16.4112 3.68341 13.2453 3.68341 11.2927 5.63604L9.87849 7.05025L8.46428 5.63604L9.87849 4.22182C12.6122 1.48815 17.0443 1.48815 19.778 4.22182C22.5117 6.95549 22.5117 11.3876 19.778 14.1213L18.3638 15.5355ZM15.5353 18.364L14.1211 19.7782C11.3875 22.5118 6.95531 22.5118 4.22164 19.7782C1.48797 17.0445 1.48797 12.6123 4.22164 9.87868L5.63585 8.46446L7.05007 9.87868L5.63585 11.2929C3.68323 13.2455 3.68323 16.4113 5.63585 18.364C7.58847 20.3166 10.7543 20.3166 12.7069 18.364L14.1211 16.9497L15.5353 18.364ZM14.8282 7.75736L16.2425 9.17157L9.17139 16.2426L7.75717 14.8284L14.8282 7.75736Z\" }, child: [] }] })(e);\n}\nfunction Jt(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\", fill: \"currentColor\" }, child: [{ tag: \"path\", attr: { d: \"M8 4H21V6H8V4ZM5 3V6H6V7H3V6H4V4H3V3H5ZM3 14V11.5H5V11H3V10H6V12.5H4V13H6V14H3ZM5 19.5H3V18.5H5V18H3V17H6V21H3V20H5V19.5ZM8 11H21V13H8V11ZM8 18H21V20H8V18Z\" }, child: [] }] })(e);\n}\nfunction Qt(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\", fill: \"currentColor\" }, child: [{ tag: \"path\", attr: { d: \"M8 4H21V6H8V4ZM4.5 6.5C3.67157 6.5 3 5.82843 3 5C3 4.17157 3.67157 3.5 4.5 3.5C5.32843 3.5 6 4.17157 6 5C6 5.82843 5.32843 6.5 4.5 6.5ZM4.5 13.5C3.67157 13.5 3 12.8284 3 12C3 11.1716 3.67157 10.5 4.5 10.5C5.32843 10.5 6 11.1716 6 12C6 12.8284 5.32843 13.5 4.5 13.5ZM4.5 20.4C3.67157 20.4 3 19.7284 3 18.9C3 18.0716 3.67157 17.4 4.5 17.4C5.32843 17.4 6 18.0716 6 18.9C6 19.7284 5.32843 20.4 4.5 20.4ZM8 11H21V13H8V11ZM8 18H21V20H8V18Z\" }, child: [] }] })(e);\n}\nfunction Lo(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\", fill: \"currentColor\" }, child: [{ tag: \"path\", attr: { d: \"M17.1538 14C17.3846 14.5161 17.5 15.0893 17.5 15.7196C17.5 17.0625 16.9762 18.1116 15.9286 18.867C14.8809 19.6223 13.4335 20 11.5862 20C9.94674 20 8.32335 19.6185 6.71592 18.8555V16.6009C8.23538 17.4783 9.7908 17.917 11.3822 17.917C13.9333 17.917 15.2128 17.1846 15.2208 15.7196C15.2208 15.0939 15.0049 14.5598 14.5731 14.1173C14.5339 14.0772 14.4939 14.0381 14.4531 14H3V12H21V14H17.1538ZM13.076 11H7.62908C7.4566 10.8433 7.29616 10.6692 7.14776 10.4778C6.71592 9.92084 6.5 9.24559 6.5 8.45207C6.5 7.21602 6.96583 6.165 7.89749 5.299C8.82916 4.43299 10.2706 4 12.2219 4C13.6934 4 15.1009 4.32808 16.4444 4.98426V7.13591C15.2448 6.44921 13.9293 6.10587 12.4978 6.10587C10.0187 6.10587 8.77917 6.88793 8.77917 8.45207C8.77917 8.87172 8.99709 9.23796 9.43293 9.55079C9.86878 9.86362 10.4066 10.1135 11.0463 10.3004C11.6665 10.4816 12.3431 10.7148 13.076 11H13.076Z\" }, child: [] }] })(e);\n}\nfunction Po(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\", fill: \"currentColor\" }, child: [{ tag: \"path\", attr: { d: \"M13 10V14H19V10H13ZM11 10H5V14H11V10ZM13 19H19V16H13V19ZM11 19V16H5V19H11ZM13 5V8H19V5H13ZM11 5H5V8H11V5ZM4 3H20C20.5523 3 21 3.44772 21 4V20C21 20.5523 20.5523 21 20 21H4C3.44772 21 3 20.5523 3 20V4C3 3.44772 3.44772 3 4 3Z\" }, child: [] }] })(e);\n}\nfunction Ge(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\", fill: \"currentColor\" }, child: [{ tag: \"path\", attr: { d: \"M13 6V21H11V6H5V4H19V6H13Z\" }, child: [] }] })(e);\n}\nfunction Fo(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\", fill: \"currentColor\" }, child: [{ tag: \"path\", attr: { d: \"M8 3V12C8 14.2091 9.79086 16 12 16C14.2091 16 16 14.2091 16 12V3H18V12C18 15.3137 15.3137 18 12 18C8.68629 18 6 15.3137 6 12V3H8ZM4 20H20V22H4V20Z\" }, child: [] }] })(e);\n}\nfunction No(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\", fill: \"currentColor\" }, child: [{ tag: \"path\", attr: { d: \"M2 3.9934C2 3.44476 2.45531 3 2.9918 3H21.0082C21.556 3 22 3.44495 22 3.9934V20.0066C22 20.5552 21.5447 21 21.0082 21H2.9918C2.44405 21 2 20.5551 2 20.0066V3.9934ZM8 5V19H16V5H8ZM4 5V7H6V5H4ZM18 5V7H20V5H18ZM4 9V11H6V9H4ZM18 9V11H20V9H18ZM4 13V15H6V13H4ZM18 13V15H20V13H18ZM4 17V19H6V17H4ZM18 17V19H20V17H18Z\" }, child: [] }] })(e);\n}\nfunction en(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\", fill: \"currentColor\" }, child: [{ tag: \"path\", attr: { d: \"M5 11.1005L7 9.1005L12.5 14.6005L16 11.1005L19 14.1005V5H5V11.1005ZM4 3H20C20.5523 3 21 3.44772 21 4V20C21 20.5523 20.5523 21 20 21H4C3.44772 21 3 20.5523 3 20V4C3 3.44772 3.44772 3 4 3ZM15.5 10C14.6716 10 14 9.32843 14 8.5C14 7.67157 14.6716 7 15.5 7C16.3284 7 17 7.67157 17 8.5C17 9.32843 16.3284 10 15.5 10Z\" }, child: [] }] })(e);\n}\nfunction Oo(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\", fill: \"currentColor\" }, child: [{ tag: \"path\", attr: { d: \"M21 15V18H24V20H21V23H19V20H16V18H19V15H21ZM21.0082 3C21.556 3 22 3.44495 22 3.9934L22.0007 13.3417C21.3749 13.1204 20.7015 13 20 13V5H4L4.001 19L13.2929 9.70715C13.6528 9.34604 14.22 9.31823 14.6123 9.62322L14.7065 9.70772L18.2521 13.2586C15.791 14.0069 14 16.2943 14 19C14 19.7015 14.1204 20.3749 14.3417 21.0007L2.9918 21C2.44405 21 2 20.5551 2 20.0066V3.9934C2 3.44476 2.45531 3 2.9918 3H21.0082ZM8 7C9.10457 7 10 7.89543 10 9C10 10.1046 9.10457 11 8 11C6.89543 11 6 10.1046 6 9C6 7.89543 6.89543 7 8 7Z\" }, child: [] }] })(e);\n}\nfunction Do(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\", fill: \"currentColor\" }, child: [{ tag: \"path\", attr: { d: \"M20 3C20.5523 3 21 3.44772 21 4V5.757L19 7.757V5H5V13.1L9 9.1005L13.328 13.429L12.0012 14.7562L11.995 18.995L16.2414 19.0012L17.571 17.671L18.8995 19H19V16.242L21 14.242V20C21 20.5523 20.5523 21 20 21H4C3.44772 21 3 20.5523 3 20V4C3 3.44772 3.44772 3 4 3H20ZM21.7782 7.80761L23.1924 9.22183L15.4142 17L13.9979 16.9979L14 15.5858L21.7782 7.80761ZM15.5 7C16.3284 7 17 7.67157 17 8.5C17 9.32843 16.3284 10 15.5 10C14.6716 10 14 9.32843 14 8.5C14 7.67157 14.6716 7 15.5 7Z\" }, child: [] }] })(e);\n}\nfunction Io(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\", fill: \"currentColor\" }, child: [{ tag: \"path\", attr: { d: \"M3 3.9934C3 3.44476 3.44495 3 3.9934 3H20.0066C20.5552 3 21 3.44495 21 3.9934V20.0066C21 20.5552 20.5551 21 20.0066 21H3.9934C3.44476 21 3 20.5551 3 20.0066V3.9934ZM10.6219 8.41459C10.5562 8.37078 10.479 8.34741 10.4 8.34741C10.1791 8.34741 10 8.52649 10 8.74741V15.2526C10 15.3316 10.0234 15.4088 10.0672 15.4745C10.1897 15.6583 10.4381 15.708 10.6219 15.5854L15.5008 12.3328C15.5447 12.3035 15.5824 12.2658 15.6117 12.2219C15.7343 12.0381 15.6846 11.7897 15.5008 11.6672L10.6219 8.41459Z\" }, child: [] }] })(e);\n}\nfunction tn(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\", fill: \"currentColor\" }, child: [{ tag: \"path\", attr: { d: \"M2 16.0001H5.88889L11.1834 20.3319C11.2727 20.405 11.3846 20.4449 11.5 20.4449C11.7761 20.4449 12 20.2211 12 19.9449V4.05519C12 3.93977 11.9601 3.8279 11.887 3.73857C11.7121 3.52485 11.3971 3.49335 11.1834 3.66821L5.88889 8.00007H2C1.44772 8.00007 1 8.44778 1 9.00007V15.0001C1 15.5524 1.44772 16.0001 2 16.0001ZM23 12C23 15.292 21.5539 18.2463 19.2622 20.2622L17.8445 18.8444C19.7758 17.1937 21 14.7398 21 12C21 9.26016 19.7758 6.80629 17.8445 5.15557L19.2622 3.73779C21.5539 5.75368 23 8.70795 23 12ZM18 12C18 10.0883 17.106 8.38548 15.7133 7.28673L14.2842 8.71584C15.3213 9.43855 16 10.64 16 12C16 13.36 15.3213 14.5614 14.2842 15.2841L15.7133 16.7132C17.106 15.6145 18 13.9116 18 12Z\" }, child: [] }] })(e);\n}\nfunction Ao(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\", fill: \"currentColor\" }, child: [{ tag: \"path\", attr: { d: \"M17 6H22V8H20V21C20 21.5523 19.5523 22 19 22H5C4.44772 22 4 21.5523 4 21V8H2V6H7V3C7 2.44772 7.44772 2 8 2H16C16.5523 2 17 2.44772 17 3V6ZM18 8H6V20H18V8ZM9 4V6H15V4H9Z\" }, child: [] }] })(e);\n}\nfunction Zo(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\", fill: \"currentColor\" }, child: [{ tag: \"path\", attr: { d: \"M4 19H20V12H22V20C22 20.5523 21.5523 21 21 21H3C2.44772 21 2 20.5523 2 20V12H4V19ZM14 9H19L12 16L5 9H10V3H14V9Z\" }, child: [] }] })(e);\n}\nfunction zo(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\", fill: \"currentColor\" }, child: [{ tag: \"path\", attr: { d: \"M10 6V8H5V19H16V14H18V20C18 20.5523 17.5523 21 17 21H4C3.44772 21 3 20.5523 3 20V7C3 6.44772 3.44772 6 4 6H10ZM21 3V12L17.206 8.207L11.2071 14.2071L9.79289 12.7929L15.792 6.793L12 3H21Z\" }, child: [] }] })(e);\n}\nfunction O(e) {\n  const t = U();\n  if (e || (e = t == null ? void 0 : t.editor), !e)\n    throw new Error(\n      \"'editor' is required, either from BlockNoteContext or as a function argument\"\n    );\n  const n = e, [o, l] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => {\n    var a;\n    return ((a = n.getSelection()) == null ? void 0 : a.blocks) || [n.getTextCursorPosition().block];\n  });\n  return W(\n    () => {\n      var a;\n      return l(\n        ((a = n.getSelection()) == null ? void 0 : a.blocks) || [n.getTextCursorPosition().block]\n      );\n    },\n    n\n  ), o;\n}\nfunction _() {\n  return U().editor.dictionary;\n}\nconst Uo = {\n  bold: To,\n  italic: Bo,\n  underline: Fo,\n  strike: Lo,\n  code: wo\n};\nfunction Wo(e, t) {\n  return e in t.schema.styleSchema && t.schema.styleSchema[e].type === e && t.schema.styleSchema[e].propSchema === \"boolean\";\n}\nconst fe = (e) => {\n  const t = _(), n = v(), o = H(), l = Wo(\n    e.basicTextStyle,\n    o\n  ), a = O(o), [c, s] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\n    e.basicTextStyle in o.getActiveStyles()\n  );\n  W(() => {\n    l && s(e.basicTextStyle in o.getActiveStyles());\n  }, o);\n  const u = (b) => {\n    if (o.focus(), !!l) {\n      if (o.schema.styleSchema[b].propSchema !== \"boolean\")\n        throw new Error(\"can only toggle boolean styles\");\n      o.toggleStyles({ [b]: !0 });\n    }\n  };\n  if (!(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => l ? !!a.find((b) => b.content !== void 0) : !1, [l, a]))\n    return null;\n  const m = Uo[e.basicTextStyle];\n  return /* @__PURE__ */ r.jsx(\n    n.FormattingToolbar.Button,\n    {\n      className: \"bn-button\",\n      \"data-test\": e.basicTextStyle,\n      onClick: () => u(e.basicTextStyle),\n      isSelected: c,\n      label: t.formatting_toolbar[e.basicTextStyle].tooltip,\n      mainTooltip: t.formatting_toolbar[e.basicTextStyle].tooltip,\n      secondaryTooltip: (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.formatKeyboardShortcut)(\n        t.formatting_toolbar[e.basicTextStyle].secondary_tooltip,\n        t.generic.ctrl_shortcut\n      ),\n      icon: /* @__PURE__ */ r.jsx(m, {})\n    }\n  );\n}, Ae = (e) => {\n  const t = e.textColor || \"default\", n = e.backgroundColor || \"default\", o = e.size || 16, l = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => ({\n      pointerEvents: \"none\",\n      fontSize: (o * 0.75).toString() + \"px\",\n      height: o.toString() + \"px\",\n      lineHeight: o.toString() + \"px\",\n      textAlign: \"center\",\n      width: o.toString() + \"px\"\n    }),\n    [o]\n  );\n  return /* @__PURE__ */ r.jsx(\n    \"div\",\n    {\n      className: \"bn-color-icon\",\n      \"data-background-color\": n,\n      \"data-text-color\": t,\n      style: l,\n      children: \"A\"\n    }\n  );\n}, _t = [\n  \"default\",\n  \"gray\",\n  \"brown\",\n  \"red\",\n  \"orange\",\n  \"yellow\",\n  \"green\",\n  \"blue\",\n  \"purple\",\n  \"pink\"\n], nn = (e) => {\n  const t = v(), n = _(), o = () => e.text ? /* @__PURE__ */ r.jsxs(r.Fragment, { children: [\n    /* @__PURE__ */ r.jsx(t.Generic.Menu.Label, { children: n.color_picker.text_title }),\n    _t.map((a) => /* @__PURE__ */ r.jsx(\n      t.Generic.Menu.Item,\n      {\n        onClick: () => {\n          e.onClick && e.onClick(), e.text.setColor(a);\n        },\n        \"data-test\": \"text-color-\" + a,\n        icon: /* @__PURE__ */ r.jsx(Ae, { textColor: a, size: e.iconSize }),\n        checked: e.text.color === a,\n        children: n.color_picker.colors[a]\n      },\n      \"text-color-\" + a\n    ))\n  ] }) : null, l = () => e.background ? /* @__PURE__ */ r.jsxs(r.Fragment, { children: [\n    /* @__PURE__ */ r.jsx(t.Generic.Menu.Label, { children: n.color_picker.background_title }),\n    _t.map((a) => /* @__PURE__ */ r.jsx(\n      t.Generic.Menu.Item,\n      {\n        onClick: () => {\n          e.onClick && e.onClick(), e.background.setColor(a);\n        },\n        \"data-test\": \"background-color-\" + a,\n        icon: /* @__PURE__ */ r.jsx(Ae, { backgroundColor: a, size: e.iconSize }),\n        checked: e.background.color === a,\n        children: n.color_picker.colors[a]\n      },\n      \"background-color-\" + a\n    ))\n  ] }) : null;\n  return /* @__PURE__ */ r.jsxs(r.Fragment, { children: [\n    /* @__PURE__ */ r.jsx(o, {}),\n    /* @__PURE__ */ r.jsx(l, {})\n  ] });\n};\nfunction St(e, t) {\n  return `${e}Color` in t.schema.styleSchema && t.schema.styleSchema[`${e}Color`].type === `${e}Color` && t.schema.styleSchema[`${e}Color`].propSchema === \"string\";\n}\nconst Go = () => {\n  const e = v(), t = _(), n = H(), o = St(\"text\", n), l = St(\"background\", n), a = O(n), [c, s] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\n    o && n.getActiveStyles().textColor || \"default\"\n  ), [u, f] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\n    l && n.getActiveStyles().backgroundColor || \"default\"\n  );\n  W(() => {\n    o && s(n.getActiveStyles().textColor || \"default\"), l && f(\n      n.getActiveStyles().backgroundColor || \"default\"\n    );\n  }, n);\n  const m = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (k) => {\n      if (!o)\n        throw Error(\n          \"Tried to set text color, but style does not exist in editor schema.\"\n        );\n      k === \"default\" ? n.removeStyles({ textColor: k }) : n.addStyles({ textColor: k }), setTimeout(() => {\n        n.focus();\n      });\n    },\n    [n, o]\n  ), b = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (k) => {\n      if (!l)\n        throw Error(\n          \"Tried to set background color, but style does not exist in editor schema.\"\n        );\n      k === \"default\" ? n.removeStyles({ backgroundColor: k }) : n.addStyles({ backgroundColor: k }), setTimeout(() => {\n        n.focus();\n      });\n    },\n    [l, n]\n  );\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    if (!o && !l)\n      return !1;\n    for (const k of a)\n      if (k.content !== void 0)\n        return !0;\n    return !1;\n  }, [l, a, o]) ? /* @__PURE__ */ r.jsxs(e.Generic.Menu.Root, { children: [\n    /* @__PURE__ */ r.jsx(e.Generic.Menu.Trigger, { children: /* @__PURE__ */ r.jsx(\n      e.FormattingToolbar.Button,\n      {\n        className: \"bn-button\",\n        \"data-test\": \"colors\",\n        label: t.formatting_toolbar.colors.tooltip,\n        mainTooltip: t.formatting_toolbar.colors.tooltip,\n        icon: /* @__PURE__ */ r.jsx(\n          Ae,\n          {\n            textColor: c,\n            backgroundColor: u,\n            size: 20\n          }\n        )\n      }\n    ) }),\n    /* @__PURE__ */ r.jsx(\n      e.Generic.Menu.Dropdown,\n      {\n        className: \"bn-menu-dropdown bn-color-picker-dropdown\",\n        children: /* @__PURE__ */ r.jsx(\n          nn,\n          {\n            text: o ? {\n              color: c,\n              setColor: m\n            } : void 0,\n            background: l ? {\n              color: u,\n              setColor: b\n            } : void 0\n          }\n        )\n      }\n    )\n  ] }) : null;\n}, on = (e) => {\n  const t = v(), n = _(), { url: o, text: l, editLink: a } = e, [c, s] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(o), [u, f] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(l);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    s(o), f(l);\n  }, [l, o]);\n  const m = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (V) => {\n      V.key === \"Enter\" && (V.preventDefault(), a(c, u));\n    },\n    [a, c, u]\n  ), b = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (V) => s(V.currentTarget.value),\n    []\n  ), g = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (V) => f(V.currentTarget.value),\n    []\n  ), k = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    () => a(c, u),\n    [a, c, u]\n  );\n  return /* @__PURE__ */ r.jsxs(t.Generic.Form.Root, { children: [\n    /* @__PURE__ */ r.jsx(\n      t.Generic.Form.TextInput,\n      {\n        className: \"bn-text-input\",\n        name: \"url\",\n        icon: /* @__PURE__ */ r.jsx(Xt, {}),\n        autoFocus: !0,\n        placeholder: n.link_toolbar.form.url_placeholder,\n        value: c,\n        onKeyDown: m,\n        onChange: b,\n        onSubmit: k\n      }\n    ),\n    /* @__PURE__ */ r.jsx(\n      t.Generic.Form.TextInput,\n      {\n        className: \"bn-text-input\",\n        name: \"title\",\n        icon: /* @__PURE__ */ r.jsx(Ge, {}),\n        placeholder: n.link_toolbar.form.title_placeholder,\n        value: u,\n        onKeyDown: m,\n        onChange: g,\n        onSubmit: k\n      }\n    )\n  ] });\n};\nfunction $o(e) {\n  return \"link\" in e.schema.inlineContentSchema && e.schema.inlineContentSchema.link === \"link\";\n}\nconst qo = () => {\n  const e = H(), t = v(), n = _(), o = $o(e), l = O(e), [a, c] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(e.getSelectedLinkUrl() || \"\"), [s, u] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(e.getSelectedText());\n  W(() => {\n    u(e.getSelectedText() || \"\"), c(e.getSelectedLinkUrl() || \"\");\n  }, e);\n  const f = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (b, g) => {\n      e.createLink(b, g), e.focus();\n    },\n    [e]\n  );\n  return !(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    if (!o)\n      return !1;\n    for (const b of l)\n      if (b.content === void 0)\n        return !1;\n    return !0;\n  }, [o, l]) || !(\"link\" in e.schema.inlineContentSchema) ? null : /* @__PURE__ */ r.jsxs(t.Generic.Popover.Root, { children: [\n    /* @__PURE__ */ r.jsx(t.Generic.Popover.Trigger, { children: /* @__PURE__ */ r.jsx(\n      t.FormattingToolbar.Button,\n      {\n        className: \"bn-button\",\n        \"data-test\": \"createLink\",\n        label: n.formatting_toolbar.link.tooltip,\n        mainTooltip: n.formatting_toolbar.link.tooltip,\n        secondaryTooltip: (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.formatKeyboardShortcut)(\n          n.formatting_toolbar.link.secondary_tooltip,\n          n.generic.ctrl_shortcut\n        ),\n        icon: /* @__PURE__ */ r.jsx(Xt, {})\n      }\n    ) }),\n    /* @__PURE__ */ r.jsx(\n      t.Generic.Popover.Content,\n      {\n        className: \"bn-popover-content bn-form-popover\",\n        variant: \"form-popover\",\n        children: /* @__PURE__ */ r.jsx(on, { url: a, text: s, editLink: f })\n      }\n    )\n  ] });\n}, Yo = () => {\n  const e = _(), t = v(), n = H(), [o, l] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(), a = O(n), c = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    if (a.length !== 1)\n      return;\n    const f = a[0];\n    if ((0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.checkBlockIsFileBlock)(f, n))\n      return l(f.props.caption), f;\n  }, [n, a]), s = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (f) => {\n      c && f.key === \"Enter\" && (f.preventDefault(), n.updateBlock(c, {\n        props: {\n          caption: o\n          // TODO\n        }\n      }));\n    },\n    [o, n, c]\n  ), u = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (f) => l(f.currentTarget.value),\n    []\n  );\n  return !c || (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.checkBlockIsFileBlockWithPlaceholder)(c, n) ? null : /* @__PURE__ */ r.jsxs(t.Generic.Popover.Root, { children: [\n    /* @__PURE__ */ r.jsx(t.Generic.Popover.Trigger, { children: /* @__PURE__ */ r.jsx(\n      t.FormattingToolbar.Button,\n      {\n        className: \"bn-button\",\n        label: e.formatting_toolbar.file_caption.tooltip,\n        mainTooltip: e.formatting_toolbar.file_caption.tooltip,\n        icon: /* @__PURE__ */ r.jsx(Ht, {}),\n        isSelected: c.props.caption !== \"\"\n      }\n    ) }),\n    /* @__PURE__ */ r.jsx(\n      t.Generic.Popover.Content,\n      {\n        className: \"bn-popover-content bn-form-popover\",\n        variant: \"form-popover\",\n        children: /* @__PURE__ */ r.jsx(t.Generic.Form.Root, { children: /* @__PURE__ */ r.jsx(\n          t.Generic.Form.TextInput,\n          {\n            name: \"file-caption\",\n            icon: /* @__PURE__ */ r.jsx(Ht, {}),\n            value: o || \"\",\n            autoFocus: !0,\n            placeholder: e.formatting_toolbar.file_caption.input_placeholder,\n            onKeyDown: s,\n            onChange: u\n          }\n        ) })\n      }\n    )\n  ] });\n}, Ko = () => {\n  const e = _(), t = v(), n = H(), o = O(n), [l, a] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\n    () => n.canNestBlock()\n  );\n  W(() => {\n    a(n.canNestBlock());\n  }, n);\n  const c = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    n.focus(), n.nestBlock();\n  }, [n]);\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => !o.find(\n    (u) => n.schema.blockSchema[u.type].content !== \"inline\"\n  ), [n.schema.blockSchema, o]) ? /* @__PURE__ */ r.jsx(\n    t.FormattingToolbar.Button,\n    {\n      className: \"bn-button\",\n      \"data-test\": \"nestBlock\",\n      onClick: c,\n      isDisabled: !l,\n      label: e.formatting_toolbar.nest.tooltip,\n      mainTooltip: e.formatting_toolbar.nest.tooltip,\n      secondaryTooltip: (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.formatKeyboardShortcut)(\n        e.formatting_toolbar.nest.secondary_tooltip,\n        e.generic.ctrl_shortcut\n      ),\n      icon: /* @__PURE__ */ r.jsx(Eo, {})\n    }\n  ) : null;\n}, Xo = () => {\n  const e = _(), t = v(), n = H(), o = O(n), [l, a] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\n    () => n.canUnnestBlock()\n  );\n  W(() => {\n    a(n.canUnnestBlock());\n  }, n);\n  const c = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    n.focus(), n.unnestBlock();\n  }, [n]);\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => !o.find(\n    (u) => n.schema.blockSchema[u.type].content !== \"inline\"\n  ), [n.schema.blockSchema, o]) ? /* @__PURE__ */ r.jsx(\n    t.FormattingToolbar.Button,\n    {\n      className: \"bn-button\",\n      \"data-test\": \"unnestBlock\",\n      onClick: c,\n      isDisabled: !l,\n      label: e.formatting_toolbar.unnest.tooltip,\n      mainTooltip: e.formatting_toolbar.unnest.tooltip,\n      secondaryTooltip: (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.formatKeyboardShortcut)(\n        e.formatting_toolbar.unnest.secondary_tooltip,\n        e.generic.ctrl_shortcut\n      ),\n      icon: /* @__PURE__ */ r.jsx(Vo, {})\n    }\n  ) : null;\n}, Jo = (e) => {\n  const t = v(), n = _(), { block: o } = e, l = H(), [a, c] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\"), s = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (m) => {\n      c(m.currentTarget.value);\n    },\n    []\n  ), u = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (m) => {\n      m.key === \"Enter\" && (m.preventDefault(), l.updateBlock(o, {\n        props: {\n          name: (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.filenameFromURL)(a),\n          url: a,\n          fileId: void 0\n          // TODO: make this pluggable / not hard-coded\n        }\n      }));\n    },\n    [l, o, a]\n  ), f = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    l.updateBlock(o, {\n      props: {\n        name: (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.filenameFromURL)(a),\n        url: a,\n        fileId: void 0\n        // TODO: make this pluggable / not hard-coded\n      }\n    });\n  }, [l, o, a]);\n  return /* @__PURE__ */ r.jsxs(t.FilePanel.TabPanel, { className: \"bn-tab-panel\", children: [\n    /* @__PURE__ */ r.jsx(\n      t.FilePanel.TextInput,\n      {\n        className: \"bn-text-input\",\n        placeholder: n.file_panel.embed.url_placeholder,\n        value: a,\n        onChange: s,\n        onKeyDown: u,\n        \"data-test\": \"embed-input\"\n      }\n    ),\n    /* @__PURE__ */ r.jsx(\n      t.FilePanel.Button,\n      {\n        className: \"bn-button\",\n        onClick: f,\n        \"data-test\": \"embed-input-button\",\n        children: n.file_panel.embed.embed_button[o.type]\n      }\n    )\n  ] });\n}, Qo = (e) => {\n  var b;\n  const t = v(), n = _(), { block: o, setLoading: l } = e, a = H(), [c, s] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    c && setTimeout(() => {\n      s(!1);\n    }, 3e3);\n  }, [c]);\n  const u = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (g) => {\n      if (g === null)\n        return;\n      async function k(V) {\n        if (l(!0), a.uploadFile !== void 0)\n          try {\n            let F = await a.uploadFile(V);\n            typeof F == \"string\" && (F = {\n              props: {\n                name: V.name,\n                url: F\n              }\n            }), a.updateBlock(o, F);\n          } catch {\n            s(!0);\n          } finally {\n            l(!1);\n          }\n      }\n      k(g);\n    },\n    [o, a, l]\n  ), f = a.schema.blockSchema[o.type], m = f.isFileBlock && ((b = f.fileBlockAcceptMimeTypes) != null && b.length) ? f.fileBlockAcceptMimeTypes.join(\",\") : \"*/*\";\n  return /* @__PURE__ */ r.jsxs(t.FilePanel.TabPanel, { className: \"bn-tab-panel\", children: [\n    /* @__PURE__ */ r.jsx(\n      t.FilePanel.FileInput,\n      {\n        className: \"bn-file-input\",\n        \"data-test\": \"upload-input\",\n        accept: m,\n        placeholder: n.file_panel.upload.file_placeholder[o.type],\n        value: null,\n        onChange: u\n      }\n    ),\n    c && /* @__PURE__ */ r.jsx(\"div\", { className: \"bn-error-text\", children: n.file_panel.upload.upload_error })\n  ] });\n}, rn = (e) => {\n  const t = v(), n = _(), o = H(), [l, a] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1), c = e.tabs ?? [\n    ...o.uploadFile !== void 0 ? [\n      {\n        name: n.file_panel.upload.title,\n        tabPanel: /* @__PURE__ */ r.jsx(Qo, { block: e.block, setLoading: a })\n      }\n    ] : [],\n    {\n      name: n.file_panel.embed.title,\n      tabPanel: /* @__PURE__ */ r.jsx(Jo, { block: e.block })\n    }\n  ], [s, u] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\n    e.defaultOpenTab || c[0].name\n  );\n  return /* @__PURE__ */ r.jsx(\n    t.FilePanel.Root,\n    {\n      className: \"bn-panel\",\n      defaultOpenTab: s,\n      openTab: s,\n      setOpenTab: u,\n      tabs: c,\n      loading: l\n    }\n  );\n}, er = () => {\n  const e = _(), t = v(), n = H(), o = O(n), [l, a] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    a(!1);\n  }, [o]);\n  const c = o.length === 1 ? o[0] : void 0;\n  return c === void 0 || !(0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.checkBlockIsFileBlock)(c, n) ? null : /* @__PURE__ */ r.jsxs(t.Generic.Popover.Root, { opened: l, position: \"bottom\", children: [\n    /* @__PURE__ */ r.jsx(t.Generic.Popover.Trigger, { children: /* @__PURE__ */ r.jsx(\n      t.FormattingToolbar.Button,\n      {\n        className: \"bn-button\",\n        onClick: () => a(!l),\n        isSelected: l,\n        mainTooltip: e.formatting_toolbar.file_replace.tooltip[c.type] || e.formatting_toolbar.file_replace.tooltip.file,\n        label: e.formatting_toolbar.file_replace.tooltip[c.type] || e.formatting_toolbar.file_replace.tooltip.file,\n        icon: /* @__PURE__ */ r.jsx(Do, {})\n      }\n    ) }),\n    /* @__PURE__ */ r.jsx(\n      t.Generic.Popover.Content,\n      {\n        className: \"bn-popover-content bn-panel-popover\",\n        variant: \"panel-popover\",\n        children: /* @__PURE__ */ r.jsx(rn, { block: c })\n      }\n    )\n  ] });\n}, tr = {\n  left: So,\n  center: Ho,\n  right: Mo,\n  justify: _o\n}, Ne = (e) => {\n  const t = v(), n = _(), o = H(), l = O(o), a = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    const f = l[0];\n    if ((0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.checkBlockHasDefaultProp)(\"textAlignment\", f, o))\n      return f.props.textAlignment;\n  }, [o, l]), c = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (f) => {\n      o.focus();\n      for (const m of l)\n        (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.checkBlockTypeHasDefaultProp)(\"textAlignment\", m.type, o) && o.updateBlock(m, {\n          props: { textAlignment: f }\n        });\n    },\n    [o, l]\n  );\n  if (!(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => !!l.find((f) => \"textAlignment\" in f.props), [l]))\n    return null;\n  const u = tr[e.textAlignment];\n  return /* @__PURE__ */ r.jsx(\n    t.FormattingToolbar.Button,\n    {\n      className: \"bn-button\",\n      \"data-test\": `alignText${e.textAlignment.slice(0, 1).toUpperCase() + e.textAlignment.slice(1)}`,\n      onClick: () => c(e.textAlignment),\n      isSelected: a === e.textAlignment,\n      label: n.formatting_toolbar[`align_${e.textAlignment}`].tooltip,\n      mainTooltip: n.formatting_toolbar[`align_${e.textAlignment}`].tooltip,\n      icon: /* @__PURE__ */ r.jsx(u, {})\n    }\n  );\n}, nr = (e) => [\n  {\n    name: e.slash_menu.paragraph.title,\n    type: \"paragraph\",\n    icon: Ge,\n    isSelected: (t) => t.type === \"paragraph\"\n  },\n  {\n    name: e.slash_menu.heading.title,\n    type: \"heading\",\n    props: { level: 1 },\n    icon: qt,\n    isSelected: (t) => t.type === \"heading\" && \"level\" in t.props && t.props.level === 1\n  },\n  {\n    name: e.slash_menu.heading_2.title,\n    type: \"heading\",\n    props: { level: 2 },\n    icon: Yt,\n    isSelected: (t) => t.type === \"heading\" && \"level\" in t.props && t.props.level === 2\n  },\n  {\n    name: e.slash_menu.heading_3.title,\n    type: \"heading\",\n    props: { level: 3 },\n    icon: Kt,\n    isSelected: (t) => t.type === \"heading\" && \"level\" in t.props && t.props.level === 3\n  },\n  {\n    name: e.slash_menu.bullet_list.title,\n    type: \"bulletListItem\",\n    icon: Qt,\n    isSelected: (t) => t.type === \"bulletListItem\"\n  },\n  {\n    name: e.slash_menu.numbered_list.title,\n    type: \"numberedListItem\",\n    icon: Jt,\n    isSelected: (t) => t.type === \"numberedListItem\"\n  }\n], or = (e) => {\n  const t = v(), n = _(), o = H(), l = O(o), [a, c] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(o.getTextCursorPosition().block), s = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => (e.items || nr(n)).filter(\n    (m) => m.type in o.schema.blockSchema\n  ), [o, n, e.items]), u = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => s.find((m) => m.type === a.type) !== void 0,\n    [a.type, s]\n  ), f = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    const m = (b) => {\n      o.focus();\n      for (const g of l)\n        o.updateBlock(g, {\n          type: b.type,\n          props: b.props\n        });\n    };\n    return s.map((b) => {\n      const g = b.icon;\n      return {\n        text: b.name,\n        icon: /* @__PURE__ */ r.jsx(g, { size: 16 }),\n        onClick: () => m(b),\n        isSelected: b.isSelected(a)\n      };\n    });\n  }, [a, s, o, l]);\n  return W(() => {\n    c(o.getTextCursorPosition().block);\n  }, o), u ? /* @__PURE__ */ r.jsx(\n    t.FormattingToolbar.Select,\n    {\n      className: \"bn-select\",\n      items: f\n    }\n  ) : null;\n}, rr = () => {\n  const e = _(), t = v(), n = H(), [o, l] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(), a = O(n), c = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    if (a.length !== 1)\n      return;\n    const f = a[0];\n    if ((0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.checkBlockIsFileBlock)(f, n))\n      return l(f.props.name), f;\n  }, [n, a]), s = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (f) => {\n      c && f.key === \"Enter\" && (f.preventDefault(), n.updateBlock(c, {\n        props: {\n          name: o\n          // TODO\n        }\n      }));\n    },\n    [o, n, c]\n  ), u = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (f) => l(f.currentTarget.value),\n    []\n  );\n  return !c || (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.checkBlockIsFileBlockWithPlaceholder)(c, n) ? null : /* @__PURE__ */ r.jsxs(t.Generic.Popover.Root, { children: [\n    /* @__PURE__ */ r.jsx(t.Generic.Popover.Trigger, { children: /* @__PURE__ */ r.jsx(\n      t.FormattingToolbar.Button,\n      {\n        className: \"bn-button\",\n        label: e.formatting_toolbar.file_rename.tooltip[c.type] || e.formatting_toolbar.file_rename.tooltip.file,\n        mainTooltip: e.formatting_toolbar.file_rename.tooltip[c.type] || e.formatting_toolbar.file_rename.tooltip.file,\n        icon: /* @__PURE__ */ r.jsx(wt, {})\n      }\n    ) }),\n    /* @__PURE__ */ r.jsx(\n      t.Generic.Popover.Content,\n      {\n        className: \"bn-popover-content bn-form-popover\",\n        variant: \"form-popover\",\n        children: /* @__PURE__ */ r.jsx(t.Generic.Form.Root, { children: /* @__PURE__ */ r.jsx(\n          t.Generic.Form.TextInput,\n          {\n            name: \"file-name\",\n            icon: /* @__PURE__ */ r.jsx(wt, {}),\n            value: o || \"\",\n            autoFocus: !0,\n            placeholder: e.formatting_toolbar.file_rename.input_placeholder[c.type] || e.formatting_toolbar.file_rename.input_placeholder.file,\n            onKeyDown: s,\n            onChange: u\n          }\n        ) })\n      }\n    )\n  ] });\n}, ir = () => {\n  const e = _(), t = v(), n = H(), o = O(n), l = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    if (o.length !== 1)\n      return;\n    const c = o[0];\n    if ((0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.checkBlockIsFileBlock)(c, n))\n      return c;\n  }, [n, o]), a = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    l && l.props.url && (n.focus(), window.open(l.props.url));\n  }, [n, l]);\n  return !l || (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.checkBlockIsFileBlockWithPlaceholder)(l, n) ? null : /* @__PURE__ */ r.jsx(\n    t.FormattingToolbar.Button,\n    {\n      className: \"bn-button\",\n      label: e.formatting_toolbar.file_download.tooltip[l.type] || e.formatting_toolbar.file_download.tooltip.file,\n      mainTooltip: e.formatting_toolbar.file_download.tooltip[l.type] || e.formatting_toolbar.file_download.tooltip.file,\n      icon: /* @__PURE__ */ r.jsx(Zo, {}),\n      onClick: a\n    }\n  );\n}, lr = () => {\n  const e = _(), t = v(), n = H(), o = O(n), l = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    if (o.length !== 1)\n      return;\n    const c = o[0];\n    if ((0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.checkBlockIsFileBlockWithPreview)(c, n))\n      return c;\n  }, [n, o]), a = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    l && n.updateBlock(l, {\n      props: {\n        showPreview: !l.props.showPreview\n        // TODO\n      }\n    });\n  }, [n, l]);\n  return !l || (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.checkBlockIsFileBlockWithPlaceholder)(l, n) ? null : /* @__PURE__ */ r.jsx(\n    t.FormattingToolbar.Button,\n    {\n      className: \"bn-button\",\n      label: \"Toggle preview\",\n      mainTooltip: e.formatting_toolbar.file_preview_toggle.tooltip,\n      icon: /* @__PURE__ */ r.jsx(Oo, {}),\n      isSelected: l.props.showPreview,\n      onClick: a\n    }\n  );\n}, ar = () => {\n  const e = _(), t = v(), n = H(), o = O(n), l = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    if (o.length !== 1)\n      return;\n    const c = o[0];\n    if ((0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.checkBlockIsFileBlock)(c, n))\n      return c;\n  }, [n, o]), a = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    n.focus(), n.removeBlocks([l]);\n  }, [n, l]);\n  return !l || (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.checkBlockIsFileBlockWithPlaceholder)(l, n) ? null : /* @__PURE__ */ r.jsx(\n    t.FormattingToolbar.Button,\n    {\n      className: \"bn-button\",\n      label: e.formatting_toolbar.file_delete.tooltip[l.type] || e.formatting_toolbar.file_delete.tooltip.file,\n      mainTooltip: e.formatting_toolbar.file_delete.tooltip[l.type] || e.formatting_toolbar.file_delete.tooltip.file,\n      icon: /* @__PURE__ */ r.jsx(Ao, {}),\n      onClick: a\n    }\n  );\n}, cr = (e) => [\n  /* @__PURE__ */ r.jsx(or, { items: e }, \"blockTypeSelect\"),\n  /* @__PURE__ */ r.jsx(Yo, {}, \"fileCaptionButton\"),\n  /* @__PURE__ */ r.jsx(er, {}, \"replaceFileButton\"),\n  /* @__PURE__ */ r.jsx(rr, {}, \"fileRenameButton\"),\n  /* @__PURE__ */ r.jsx(ar, {}, \"fileDeleteButton\"),\n  /* @__PURE__ */ r.jsx(ir, {}, \"fileDownloadButton\"),\n  /* @__PURE__ */ r.jsx(lr, {}, \"filePreviewButton\"),\n  /* @__PURE__ */ r.jsx(fe, { basicTextStyle: \"bold\" }, \"boldStyleButton\"),\n  /* @__PURE__ */ r.jsx(fe, { basicTextStyle: \"italic\" }, \"italicStyleButton\"),\n  /* @__PURE__ */ r.jsx(\n    fe,\n    {\n      basicTextStyle: \"underline\"\n    },\n    \"underlineStyleButton\"\n  ),\n  /* @__PURE__ */ r.jsx(fe, { basicTextStyle: \"strike\" }, \"strikeStyleButton\"),\n  /* @__PURE__ */ r.jsx(Ne, { textAlignment: \"left\" }, \"textAlignLeftButton\"),\n  /* @__PURE__ */ r.jsx(Ne, { textAlignment: \"center\" }, \"textAlignCenterButton\"),\n  /* @__PURE__ */ r.jsx(Ne, { textAlignment: \"right\" }, \"textAlignRightButton\"),\n  /* @__PURE__ */ r.jsx(Go, {}, \"colorStyleButton\"),\n  /* @__PURE__ */ r.jsx(Ko, {}, \"nestBlockButton\"),\n  /* @__PURE__ */ r.jsx(Xo, {}, \"unnestBlockButton\"),\n  /* @__PURE__ */ r.jsx(qo, {}, \"createLinkButton\")\n], sr = (e) => {\n  const t = v();\n  return /* @__PURE__ */ r.jsx(\n    t.FormattingToolbar.Root,\n    {\n      className: \"bn-toolbar bn-formatting-toolbar\",\n      children: e.children || cr(e.blockTypeSelectItems)\n    }\n  );\n}, Mt = (e) => {\n  switch (e) {\n    case \"left\":\n      return \"top-start\";\n    case \"center\":\n      return \"top\";\n    case \"right\":\n      return \"top-end\";\n    default:\n      return \"top-start\";\n  }\n}, ur = (e) => {\n  const t = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), n = H(), [o, l] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\n    () => {\n      const g = n.getTextCursorPosition().block;\n      return \"textAlignment\" in g.props ? Mt(\n        g.props.textAlignment\n      ) : \"top-start\";\n    }\n  );\n  W(() => {\n    const g = n.getTextCursorPosition().block;\n    \"textAlignment\" in g.props ? l(\n      Mt(\n        g.props.textAlignment\n      )\n    ) : l(\"top-start\");\n  }, n);\n  const a = K(\n    n.formattingToolbar.onUpdate.bind(n.formattingToolbar)\n  ), { isMounted: c, ref: s, style: u, getFloatingProps: f } = ie(\n    (a == null ? void 0 : a.show) || !1,\n    (a == null ? void 0 : a.referencePos) || null,\n    3e3,\n    {\n      placement: o,\n      middleware: [(0,_floating_ui_react__WEBPACK_IMPORTED_MODULE_5__.offset)(10), (0,_floating_ui_react__WEBPACK_IMPORTED_MODULE_5__.flip)()],\n      onOpenChange: (g, k) => {\n        console.log(\"change\", k), g || (n.formattingToolbar.closeMenu(), n.focus());\n      }\n    }\n  ), m = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => bo([t, s]), [t, s]);\n  if (!c || !a)\n    return null;\n  if (!a.show && t.current)\n    return /* @__PURE__ */ r.jsx(\n      \"div\",\n      {\n        ref: m,\n        style: u,\n        dangerouslySetInnerHTML: { __html: t.current.innerHTML }\n      }\n    );\n  const b = e.formattingToolbar || sr;\n  return /* @__PURE__ */ r.jsx(\"div\", { ref: m, style: u, ...f(), children: /* @__PURE__ */ r.jsx(b, {}) });\n}, dr = (e) => {\n  const t = v(), n = _();\n  return /* @__PURE__ */ r.jsx(\n    t.LinkToolbar.Button,\n    {\n      className: \"bn-button\",\n      label: n.link_toolbar.delete.tooltip,\n      mainTooltip: n.link_toolbar.delete.tooltip,\n      isSelected: !1,\n      onClick: e.deleteLink,\n      icon: /* @__PURE__ */ r.jsx(Ro, {})\n    }\n  );\n}, fr = (e) => {\n  const t = v(), n = _();\n  return /* @__PURE__ */ r.jsxs(t.Generic.Popover.Root, { children: [\n    /* @__PURE__ */ r.jsx(t.Generic.Popover.Trigger, { children: /* @__PURE__ */ r.jsx(\n      t.LinkToolbar.Button,\n      {\n        className: \"bn-button\",\n        mainTooltip: n.link_toolbar.edit.tooltip,\n        isSelected: !1,\n        children: n.link_toolbar.edit.text\n      }\n    ) }),\n    /* @__PURE__ */ r.jsx(\n      t.Generic.Popover.Content,\n      {\n        className: \"bn-popover-content bn-form-popover\",\n        variant: \"form-popover\",\n        children: /* @__PURE__ */ r.jsx(on, { ...e })\n      }\n    )\n  ] });\n}, mr = (e) => {\n  const t = v(), n = _();\n  return /* @__PURE__ */ r.jsx(\n    t.LinkToolbar.Button,\n    {\n      className: \"bn-button\",\n      mainTooltip: n.link_toolbar.open.tooltip,\n      label: n.link_toolbar.open.tooltip,\n      isSelected: !1,\n      onClick: () => {\n        window.open(e.url, \"_blank\");\n      },\n      icon: /* @__PURE__ */ r.jsx(zo, {})\n    }\n  );\n}, hr = (e) => {\n  const t = v();\n  return e.children ? /* @__PURE__ */ r.jsx(t.LinkToolbar.Root, { className: \"bn-toolbar bn-link-toolbar\", children: e.children }) : /* @__PURE__ */ r.jsxs(\n    t.LinkToolbar.Root,\n    {\n      className: \"bn-toolbar bn-link-toolbar\",\n      onMouseEnter: e.stopHideTimer,\n      onMouseLeave: e.startHideTimer,\n      children: [\n        /* @__PURE__ */ r.jsx(\n          fr,\n          {\n            url: e.url,\n            text: e.text,\n            editLink: e.editLink\n          }\n        ),\n        /* @__PURE__ */ r.jsx(mr, { url: e.url }),\n        /* @__PURE__ */ r.jsx(dr, { deleteLink: e.deleteLink })\n      ]\n    }\n  );\n}, br = (e) => {\n  const t = H(), n = {\n    deleteLink: t.linkToolbar.deleteLink,\n    editLink: t.linkToolbar.editLink,\n    startHideTimer: t.linkToolbar.startHideTimer,\n    stopHideTimer: t.linkToolbar.stopHideTimer\n  }, o = K(\n    t.linkToolbar.onUpdate.bind(t.linkToolbar)\n  ), { isMounted: l, ref: a, style: c, getFloatingProps: s } = ie(\n    (o == null ? void 0 : o.show) || !1,\n    (o == null ? void 0 : o.referencePos) || null,\n    4e3,\n    {\n      placement: \"top-start\",\n      middleware: [(0,_floating_ui_react__WEBPACK_IMPORTED_MODULE_5__.offset)(10), (0,_floating_ui_react__WEBPACK_IMPORTED_MODULE_5__.flip)()],\n      onOpenChange: (g) => {\n        g || (t.linkToolbar.closeMenu(), t.focus());\n      }\n    }\n  );\n  if (!l || !o)\n    return null;\n  const { show: u, referencePos: f, ...m } = o, b = e.linkToolbar || hr;\n  return /* @__PURE__ */ r.jsx(\"div\", { ref: a, style: c, ...s(), children: /* @__PURE__ */ r.jsx(b, { ...m, ...n }) });\n}, gr = (e) => {\n  const t = H();\n  if (!t.filePanel)\n    throw new Error(\n      \"FileToolbarController can only be used when BlockNote editor schema contains file block\"\n    );\n  const n = K(\n    t.filePanel.onUpdate.bind(t.filePanel)\n  ), { isMounted: o, ref: l, style: a, getFloatingProps: c } = ie(\n    (n == null ? void 0 : n.show) || !1,\n    (n == null ? void 0 : n.referencePos) || null,\n    5e3,\n    {\n      placement: \"bottom\",\n      middleware: [(0,_floating_ui_react__WEBPACK_IMPORTED_MODULE_5__.offset)(10), (0,_floating_ui_react__WEBPACK_IMPORTED_MODULE_5__.flip)()],\n      onOpenChange: (b) => {\n        b || (t.filePanel.closeMenu(), t.focus());\n      }\n    }\n  );\n  if (!o || !n)\n    return null;\n  const { show: s, referencePos: u, ...f } = n, m = e.filePanel || rn;\n  return /* @__PURE__ */ r.jsx(\"div\", { ref: l, style: a, ...c(), children: /* @__PURE__ */ r.jsx(m, { ...f }) });\n};\nfunction pr(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 1024 1024\" }, child: [{ tag: \"path\", attr: { d: \"M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8Z\" }, child: [] }, { tag: \"path\", attr: { d: \"M192 474h672q8 0 8 8v60q0 8-8 8H160q-8 0-8-8v-60q0-8 8-8Z\" }, child: [] }] })(e);\n}\nconst xr = (e) => {\n  const t = v(), n = _();\n  return /* @__PURE__ */ r.jsx(\n    t.SideMenu.Button,\n    {\n      className: \"bn-button\",\n      label: n.side_menu.add_block_label,\n      icon: /* @__PURE__ */ r.jsx(\n        pr,\n        {\n          size: 24,\n          onClick: e.addBlock,\n          \"data-test\": \"dragHandleAdd\"\n        }\n      )\n    }\n  );\n};\nfunction ln(e) {\n  return j({ tag: \"svg\", attr: { viewBox: \"0 0 24 24\" }, child: [{ tag: \"path\", attr: { fill: \"none\", d: \"M0 0h24v24H0V0z\" }, child: [] }, { tag: \"path\", attr: { d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\" }, child: [] }] })(e);\n}\nconst vr = (e) => {\n  const t = v(), n = H();\n  return !(0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.checkBlockTypeHasDefaultProp)(\"textColor\", e.block.type, n) && !(0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.checkBlockTypeHasDefaultProp)(\"backgroundColor\", e.block.type, n) ? null : /* @__PURE__ */ r.jsxs(t.Generic.Menu.Root, { position: \"right\", sub: !0, children: [\n    /* @__PURE__ */ r.jsx(t.Generic.Menu.Trigger, { sub: !0, children: /* @__PURE__ */ r.jsx(\n      t.Generic.Menu.Item,\n      {\n        className: \"bn-menu-item\",\n        subTrigger: !0,\n        children: e.children\n      }\n    ) }),\n    /* @__PURE__ */ r.jsx(\n      t.Generic.Menu.Dropdown,\n      {\n        sub: !0,\n        className: \"bn-menu-dropdown bn-color-picker-dropdown\",\n        children: /* @__PURE__ */ r.jsx(\n          nn,\n          {\n            iconSize: 18,\n            text: (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.checkBlockTypeHasDefaultProp)(\n              \"textColor\",\n              e.block.type,\n              n\n            ) && (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.checkBlockHasDefaultProp)(\"textColor\", e.block, n) ? {\n              color: e.block.props.textColor,\n              setColor: (o) => n.updateBlock(e.block, {\n                type: e.block.type,\n                props: { textColor: o }\n              })\n            } : void 0,\n            background: (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.checkBlockTypeHasDefaultProp)(\n              \"backgroundColor\",\n              e.block.type,\n              n\n            ) && (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.checkBlockHasDefaultProp)(\"backgroundColor\", e.block, n) ? {\n              color: e.block.props.backgroundColor,\n              setColor: (o) => n.updateBlock(e.block, {\n                props: { backgroundColor: o }\n              })\n            } : void 0\n          }\n        )\n      }\n    )\n  ] });\n}, Cr = (e) => {\n  const t = v(), n = H();\n  return /* @__PURE__ */ r.jsx(\n    t.Generic.Menu.Item,\n    {\n      className: \"bn-menu-item\",\n      onClick: () => n.removeBlocks([e.block]),\n      children: e.children\n    }\n  );\n}, kr = (e) => {\n  const t = v(), n = _();\n  return /* @__PURE__ */ r.jsx(\n    t.Generic.Menu.Dropdown,\n    {\n      className: \"bn-menu-dropdown bn-drag-handle-menu\",\n      children: e.children || /* @__PURE__ */ r.jsxs(r.Fragment, { children: [\n        /* @__PURE__ */ r.jsx(Cr, { ...e, children: n.drag_handle.delete_menuitem }),\n        /* @__PURE__ */ r.jsx(vr, { ...e, children: n.drag_handle.colors_menuitem })\n      ] })\n    }\n  );\n}, yr = (e) => {\n  const t = v(), n = _(), o = e.dragHandleMenu || kr;\n  return /* @__PURE__ */ r.jsxs(\n    t.Generic.Menu.Root,\n    {\n      onOpenChange: (l) => {\n        l ? e.freezeMenu() : (e.unfreezeMenu(), e.editor.focus());\n      },\n      position: \"left\",\n      children: [\n        /* @__PURE__ */ r.jsx(t.Generic.Menu.Trigger, { children: /* @__PURE__ */ r.jsx(\n          t.SideMenu.Button,\n          {\n            label: n.side_menu.drag_handle_label,\n            draggable: !0,\n            onDragStart: e.blockDragStart,\n            onDragEnd: e.blockDragEnd,\n            className: \"bn-button\",\n            icon: /* @__PURE__ */ r.jsx(ln, { size: 24, \"data-test\": \"dragHandle\" })\n          }\n        ) }),\n        /* @__PURE__ */ r.jsx(o, { block: e.block })\n      ]\n    }\n  );\n}, jr = (e) => {\n  const t = v(), { addBlock: n, ...o } = e;\n  return /* @__PURE__ */ r.jsx(t.SideMenu.Root, { className: \"bn-side-menu\", children: e.children || /* @__PURE__ */ r.jsxs(r.Fragment, { children: [\n    /* @__PURE__ */ r.jsx(xr, { addBlock: n }),\n    /* @__PURE__ */ r.jsx(yr, { ...o })\n  ] }) });\n}, wr = (e) => {\n  const t = H(), n = {\n    addBlock: t.sideMenu.addBlock,\n    blockDragStart: t.sideMenu.blockDragStart,\n    blockDragEnd: t.sideMenu.blockDragEnd,\n    freezeMenu: t.sideMenu.freezeMenu,\n    unfreezeMenu: t.sideMenu.unfreezeMenu\n  }, o = K(\n    t.sideMenu.onUpdate.bind(t.sideMenu)\n  ), { isMounted: l, ref: a, style: c, getFloatingProps: s } = ie(\n    (o == null ? void 0 : o.show) || !1,\n    (o == null ? void 0 : o.referencePos) || null,\n    1e3,\n    {\n      placement: \"left\"\n    }\n  );\n  if (!l || !o)\n    return null;\n  const { show: u, referencePos: f, ...m } = o, b = e.sideMenu || jr;\n  return /* @__PURE__ */ r.jsx(\"div\", { ref: a, style: c, ...s(), children: /* @__PURE__ */ r.jsx(b, { ...m, ...n, editor: t }) });\n};\nfunction Hr(e) {\n  const t = v(), n = _(), { items: o, loadingState: l, selectedIndex: a, onItemClick: c } = e, s = l === \"loading-initial\" || l === \"loading\" ? /* @__PURE__ */ r.jsx(t.SuggestionMenu.Loader, { className: \"bn-suggestion-menu-loader\", children: n.suggestion_menu.loading }) : null, u = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    let f;\n    const m = [];\n    for (let b = 0; b < o.length; b++) {\n      const g = o[b];\n      g.group !== f && (f = g.group, m.push(\n        /* @__PURE__ */ r.jsx(\n          t.SuggestionMenu.Label,\n          {\n            className: \"bn-suggestion-menu-label\",\n            children: f\n          },\n          f\n        )\n      )), m.push(\n        /* @__PURE__ */ r.jsx(\n          t.SuggestionMenu.Item,\n          {\n            className: \"bn-suggestion-menu-item\",\n            item: g,\n            id: `bn-suggestion-menu-item-${b}`,\n            isSelected: b === a,\n            onClick: () => c == null ? void 0 : c(g)\n          },\n          g.title\n        )\n      );\n    }\n    return m;\n  }, [t, o, c, a]);\n  return /* @__PURE__ */ r.jsxs(\n    t.SuggestionMenu.Root,\n    {\n      id: \"bn-suggestion-menu\",\n      className: \"bn-suggestion-menu\",\n      children: [\n        u,\n        u.length === 0 && (e.loadingState === \"loading\" || e.loadingState === \"loaded\") && /* @__PURE__ */ r.jsx(\n          t.SuggestionMenu.EmptyItem,\n          {\n            className: \"bn-suggestion-menu-item\",\n            children: n.suggestion_menu.no_items_title\n          }\n        ),\n        s\n      ]\n    }\n  );\n}\nfunction _r(e, t, n, o = 3) {\n  const l = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    t !== void 0 && (e.length > 0 ? l.current = t.length : t.length - l.current > o && n());\n  }, [n, o, e.length, t]);\n}\nfunction Sr(e, t) {\n  const [n, o] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]), [l, a] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1), c = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(), s = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const u = e;\n    c.current = e, a(!0), t(e).then((f) => {\n      c.current === u && (o(f), a(!1), s.current = u);\n    });\n  }, [e, t]), {\n    items: n || [],\n    // The query that was used to retrieve the last set of items may not be the\n    // same as the current query as the items from the current query may not\n    // have been retrieved yet. This is useful when using the returns of this\n    // hook in other hooks.\n    usedQuery: s.current,\n    loadingState: s.current === void 0 ? \"loading-initial\" : l ? \"loading\" : \"loaded\"\n  };\n}\nfunction Mr(e, t, n, o) {\n  const [l, a] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const c = (s) => s.key === \"ArrowUp\" ? (s.preventDefault(), n.length && a((l - 1 + n.length) % n.length), !0) : s.key === \"ArrowDown\" ? (s.preventDefault(), n.length && a((l + 1) % n.length), !0) : s.key === \"Enter\" ? (s.preventDefault(), n.length && (o == null || o(n[l])), !0) : !1;\n    return e.domElement.addEventListener(\n      \"keydown\",\n      c,\n      !0\n    ), () => {\n      e.domElement.removeEventListener(\n        \"keydown\",\n        c,\n        !0\n      );\n    };\n  }, [e.domElement, n, l, o]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    a(0);\n  }, [t]), {\n    selectedIndex: n.length === 0 ? void 0 : l\n  };\n}\nfunction Tr(e) {\n  const n = U().setContentEditableProps, o = H(), {\n    getItems: l,\n    suggestionMenuComponent: a,\n    query: c,\n    clearQuery: s,\n    closeMenu: u,\n    onItemClick: f\n  } = e, m = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (N) => {\n      u(), s(), f == null || f(N);\n    },\n    [f, u, s]\n  ), { items: b, usedQuery: g, loadingState: k } = Sr(\n    c,\n    l\n  );\n  _r(b, g, u);\n  const { selectedIndex: V } = Mr(\n    o,\n    c,\n    b,\n    m\n  );\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => (n((N) => ({\n    ...N,\n    \"aria-expanded\": !0,\n    \"aria-controls\": \"bn-suggestion-menu\"\n  })), () => {\n    n((N) => ({\n      ...N,\n      \"aria-expanded\": !1,\n      \"aria-controls\": void 0\n    }));\n  }), [n]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => (n((N) => ({\n    ...N,\n    \"aria-activedescendant\": V ? \"bn-suggestion-menu-item-\" + V : void 0\n  })), () => {\n    n((N) => ({\n      ...N,\n      \"aria-activedescendant\": void 0\n    }));\n  }), [n, V]);\n  const F = a;\n  return /* @__PURE__ */ r.jsx(\n    F,\n    {\n      items: b,\n      onItemClick: m,\n      loadingState: k,\n      selectedIndex: V\n    }\n  );\n}\nconst Vr = {\n  heading: qt,\n  heading_2: Yt,\n  heading_3: Kt,\n  numbered_list: Jt,\n  bullet_list: Qt,\n  paragraph: Ge,\n  table: Po,\n  image: en,\n  video: No,\n  audio: tn,\n  file: Ce\n};\nfunction Er(e) {\n  return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.getDefaultSlashMenuItems)(e).map((t) => {\n    const n = Vr[t.key];\n    return {\n      ...t,\n      icon: /* @__PURE__ */ r.jsx(n, { size: 18 })\n    };\n  });\n}\nfunction Br(e) {\n  const t = H(), { triggerCharacter: n, suggestionMenuComponent: o } = e;\n  let { onItemClick: l, getItems: a } = e;\n  l || (l = (g) => {\n    g.onItemClick(t);\n  });\n  const c = {\n    closeMenu: t.suggestionMenus.closeMenu,\n    clearQuery: t.suggestionMenus.clearQuery\n  }, s = K(\n    (g) => t.suggestionMenus.onUpdate.bind(t.suggestionMenus)(\n      n,\n      g\n    )\n  ), { isMounted: u, ref: f, style: m, getFloatingProps: b } = ie(\n    (s == null ? void 0 : s.show) || !1,\n    (s == null ? void 0 : s.referencePos) || null,\n    2e3,\n    {\n      placement: \"bottom-start\",\n      middleware: [\n        (0,_floating_ui_react__WEBPACK_IMPORTED_MODULE_5__.offset)(10),\n        // Flips the menu placement to maximize the space available, and prevents\n        // the menu from being cut off by the confines of the screen.\n        (0,_floating_ui_react__WEBPACK_IMPORTED_MODULE_5__.flip)(),\n        (0,_floating_ui_react__WEBPACK_IMPORTED_MODULE_5__.size)({\n          apply({ availableHeight: g, elements: k }) {\n            Object.assign(k.floating.style, {\n              maxHeight: `${g - 10}px`\n            });\n          }\n        })\n      ],\n      onOpenChange(g) {\n        g || t.suggestionMenus.closeMenu();\n      }\n    }\n  );\n  return !u || !s ? null : (a || (a = async (g) => (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.filterSuggestionItems)(\n    Er(t),\n    g\n  )), /* @__PURE__ */ r.jsx(\"div\", { ref: f, style: m, ...b(), children: /* @__PURE__ */ r.jsx(\n    Tr,\n    {\n      query: s.query,\n      closeMenu: c.closeMenu,\n      clearQuery: c.clearQuery,\n      getItems: a,\n      suggestionMenuComponent: o || Hr,\n      onItemClick: l\n    }\n  ) }));\n}\nconst Rr = (e) => {\n  const t = v(), n = _(), o = H();\n  return /* @__PURE__ */ r.jsx(\n    t.Generic.Menu.Item,\n    {\n      onClick: () => {\n        const l = e.block.content.rows[e.index].cells.map(\n          () => []\n        ), a = [...e.block.content.rows];\n        a.splice(e.index + (e.side === \"below\" ? 1 : 0), 0, {\n          cells: l\n        }), o.updateBlock(e.block, {\n          type: \"table\",\n          content: {\n            type: \"tableContent\",\n            rows: a\n          }\n        });\n      },\n      children: n.table_handle[`add_${e.side}_menuitem`]\n    }\n  );\n}, Lr = (e) => {\n  const t = v(), n = _(), o = H();\n  return /* @__PURE__ */ r.jsx(\n    t.Generic.Menu.Item,\n    {\n      onClick: () => {\n        const l = {\n          type: \"tableContent\",\n          rows: e.block.content.rows.map((a) => {\n            const c = [...a.cells];\n            return c.splice(e.index + (e.side === \"right\" ? 1 : 0), 0, []), { cells: c };\n          })\n        };\n        o.updateBlock(e.block, {\n          type: \"table\",\n          content: l\n        });\n      },\n      children: n.table_handle[`add_${e.side}_menuitem`]\n    }\n  );\n}, Tt = (e) => e.orientation === \"row\" ? /* @__PURE__ */ r.jsx(Rr, { ...e, side: e.side }) : /* @__PURE__ */ r.jsx(Lr, { ...e, side: e.side }), Pr = (e) => {\n  const t = v(), n = _(), o = H();\n  return /* @__PURE__ */ r.jsx(\n    t.Generic.Menu.Item,\n    {\n      onClick: () => {\n        const l = {\n          type: \"tableContent\",\n          rows: e.block.content.rows.filter(\n            (a, c) => c !== e.index\n          )\n        };\n        o.updateBlock(e.block, {\n          type: \"table\",\n          content: l\n        });\n      },\n      children: n.table_handle.delete_row_menuitem\n    }\n  );\n}, Fr = (e) => {\n  const t = v(), n = _(), o = H();\n  return /* @__PURE__ */ r.jsx(\n    t.Generic.Menu.Item,\n    {\n      onClick: () => {\n        const l = {\n          type: \"tableContent\",\n          rows: e.block.content.rows.map((a) => ({\n            cells: a.cells.filter((c, s) => s !== e.index)\n          }))\n        };\n        o.updateBlock(e.block, {\n          type: \"table\",\n          content: l\n        });\n      },\n      children: n.table_handle.delete_column_menuitem\n    }\n  );\n}, Nr = (e) => e.orientation === \"row\" ? /* @__PURE__ */ r.jsx(Pr, { ...e }) : /* @__PURE__ */ r.jsx(Fr, { ...e }), Or = (e) => {\n  const t = v();\n  return /* @__PURE__ */ r.jsx(t.Generic.Menu.Dropdown, { className: \"bn-table-handle-menu\", children: e.children || /* @__PURE__ */ r.jsxs(r.Fragment, { children: [\n    /* @__PURE__ */ r.jsx(\n      Nr,\n      {\n        orientation: e.orientation,\n        block: e.block,\n        index: e.index\n      }\n    ),\n    /* @__PURE__ */ r.jsx(\n      Tt,\n      {\n        orientation: e.orientation,\n        block: e.block,\n        index: e.index,\n        side: e.orientation === \"row\" ? \"above\" : \"left\"\n      }\n    ),\n    /* @__PURE__ */ r.jsx(\n      Tt,\n      {\n        orientation: e.orientation,\n        block: e.block,\n        index: e.index,\n        side: e.orientation === \"row\" ? \"below\" : \"right\"\n      }\n    )\n  ] }) });\n}, Dr = (e) => {\n  const t = v(), [n, o] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1), l = e.tableHandleMenu || Or;\n  return /* @__PURE__ */ r.jsxs(\n    t.Generic.Menu.Root,\n    {\n      onOpenChange: (a) => {\n        a ? (e.freezeHandles(), e.hideOtherSide()) : (e.unfreezeHandles(), e.showOtherSide(), e.editor.focus());\n      },\n      position: \"right\",\n      children: [\n        /* @__PURE__ */ r.jsx(t.Generic.Menu.Trigger, { children: /* @__PURE__ */ r.jsx(\n          t.TableHandle.Root,\n          {\n            className: (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.mergeCSSClasses)(\n              \"bn-table-handle\",\n              n ? \"bn-table-handle-dragging\" : \"\"\n            ),\n            draggable: !0,\n            onDragStart: (a) => {\n              o(!0), e.dragStart(a);\n            },\n            onDragEnd: () => {\n              e.dragEnd(), o(!1);\n            },\n            style: e.orientation === \"column\" ? { transform: \"rotate(0.25turn)\" } : void 0,\n            children: e.children || /* @__PURE__ */ r.jsx(ln, { size: 24, \"data-test\": \"tableHandle\" })\n          }\n        ) }),\n        /* @__PURE__ */ r.jsx(\n          l,\n          {\n            orientation: e.orientation,\n            block: e.block,\n            index: e.index\n          }\n        )\n      ]\n    }\n  );\n};\nfunction Ir(e, t, n) {\n  return n && n.draggedCellOrientation === \"row\" ? new DOMRect(\n    t.x,\n    n.mousePos,\n    t.width,\n    0\n  ) : new DOMRect(\n    t.x,\n    e.y,\n    t.width,\n    e.height\n  );\n}\nfunction Ar(e, t, n) {\n  return n && n.draggedCellOrientation === \"col\" ? new DOMRect(\n    n.mousePos,\n    t.y,\n    0,\n    t.height\n  ) : new DOMRect(\n    e.x,\n    t.y,\n    e.width,\n    t.height\n  );\n}\nfunction Vt(e, t, n, o, l) {\n  const { refs: a, update: c, context: s, floatingStyles: u } = (0,_floating_ui_react__WEBPACK_IMPORTED_MODULE_4__.useFloating)({\n    open: t,\n    placement: e === \"row\" ? \"left\" : \"top\",\n    middleware: [(0,_floating_ui_react__WEBPACK_IMPORTED_MODULE_5__.offset)(e === \"row\" ? -10 : -12)]\n  }), { isMounted: f, styles: m } = (0,_floating_ui_react__WEBPACK_IMPORTED_MODULE_4__.useTransitionStyles)(s);\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    c();\n  }, [n, o, c]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    n === null || o === null || a.setReference({\n      getBoundingClientRect: () => (e === \"row\" ? Ir : Ar)(n, o, l)\n    });\n  }, [l, e, n, o, a]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => ({\n      isMounted: f,\n      ref: a.setFloating,\n      style: {\n        display: \"flex\",\n        ...m,\n        ...u,\n        zIndex: 1e4\n      }\n    }),\n    [u, f, a.setFloating, m]\n  );\n}\nfunction Zr(e, t, n, o) {\n  const l = Vt(\n    \"row\",\n    e,\n    t,\n    n,\n    o\n  ), a = Vt(\n    \"col\",\n    e,\n    t,\n    n,\n    o\n  );\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => ({\n      rowHandle: l,\n      colHandle: a\n    }),\n    [a, l]\n  );\n}\nconst zr = (e) => {\n  var g, k;\n  const t = H();\n  if (!t.tableHandles)\n    throw new Error(\n      \"TableHandlesController can only be used when BlockNote editor schema contains table block\"\n    );\n  const n = {\n    rowDragStart: t.tableHandles.rowDragStart,\n    colDragStart: t.tableHandles.colDragStart,\n    dragEnd: t.tableHandles.dragEnd,\n    freezeHandles: t.tableHandles.freezeHandles,\n    unfreezeHandles: t.tableHandles.unfreezeHandles\n  }, o = K(\n    t.tableHandles.onUpdate.bind(t.tableHandles)\n  ), l = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    var V, F;\n    return o != null && o.draggingState ? {\n      draggedCellOrientation: (V = o == null ? void 0 : o.draggingState) == null ? void 0 : V.draggedCellOrientation,\n      mousePos: (F = o == null ? void 0 : o.draggingState) == null ? void 0 : F.mousePos\n    } : void 0;\n  }, [\n    o == null ? void 0 : o.draggingState,\n    (g = o == null ? void 0 : o.draggingState) == null ? void 0 : g.draggedCellOrientation,\n    (k = o == null ? void 0 : o.draggingState) == null ? void 0 : k.mousePos\n  ]), { rowHandle: a, colHandle: c } = Zr(\n    (o == null ? void 0 : o.show) || !1,\n    (o == null ? void 0 : o.referencePosCell) || null,\n    (o == null ? void 0 : o.referencePosTable) || null,\n    l\n  ), [s, u] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1), [f, m] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1);\n  if (!a.isMounted || !c.isMounted || !o)\n    return null;\n  const b = e.tableHandle || Dr;\n  return /* @__PURE__ */ r.jsxs(r.Fragment, { children: [\n    !s && /* @__PURE__ */ r.jsx(\"div\", { ref: a.ref, style: a.style, children: /* @__PURE__ */ r.jsx(\n      b,\n      {\n        editor: t,\n        orientation: \"row\",\n        showOtherSide: () => m(!1),\n        hideOtherSide: () => m(!0),\n        index: o.rowIndex,\n        block: o.block,\n        dragStart: n.rowDragStart,\n        dragEnd: n.dragEnd,\n        freezeHandles: n.freezeHandles,\n        unfreezeHandles: n.unfreezeHandles\n      }\n    ) }),\n    !f && /* @__PURE__ */ r.jsx(\"div\", { ref: c.ref, style: c.style, children: /* @__PURE__ */ r.jsx(\n      b,\n      {\n        editor: t,\n        orientation: \"column\",\n        showOtherSide: () => u(!1),\n        hideOtherSide: () => u(!0),\n        index: o.colIndex,\n        block: o.block,\n        dragStart: n.colDragStart,\n        dragEnd: n.dragEnd,\n        freezeHandles: n.freezeHandles,\n        unfreezeHandles: n.unfreezeHandles\n      }\n    ) })\n  ] });\n};\nfunction Ur(e) {\n  const t = H();\n  if (!t)\n    throw new Error(\n      \"BlockNoteDefaultUI must be used within a BlockNoteContext.Provider\"\n    );\n  return /* @__PURE__ */ r.jsxs(r.Fragment, { children: [\n    e.formattingToolbar !== !1 && /* @__PURE__ */ r.jsx(ur, {}),\n    e.linkToolbar !== !1 && /* @__PURE__ */ r.jsx(br, {}),\n    e.slashMenu !== !1 && /* @__PURE__ */ r.jsx(Br, { triggerCharacter: \"/\" }),\n    e.sideMenu !== !1 && /* @__PURE__ */ r.jsx(wr, {}),\n    t.filePanel && e.filePanel !== !1 && /* @__PURE__ */ r.jsx(gr, {}),\n    t.tableHandles && e.tableHandles !== !1 && /* @__PURE__ */ r.jsx(zr, {})\n  ] });\n}\nconst Wr = ({\n  renderers: e\n}) => /* @__PURE__ */ r.jsx(r.Fragment, { children: Object.entries(e).map(([t, n]) => (0,react_dom__WEBPACK_IMPORTED_MODULE_3__.createPortal)(n.reactElement, n.element, t)) });\nfunction Gr(e) {\n  const [t, n] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({}), [o, l] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => (e.editor._tiptapEditor.contentComponent = {\n    /**\n     * Used by TipTap\n     */\n    setRenderer(a, c) {\n      n((s) => ({ ...s, [a]: c }));\n    },\n    /**\n     * Used by TipTap\n     */\n    removeRenderer(a) {\n      n((c) => {\n        const s = { ...c };\n        return delete s[a], s;\n      });\n    },\n    /**\n     * Render a single node to a container within the React context (used by BlockNote renderToDOMSpec)\n     */\n    renderToElement(a, c) {\n      (0,react_dom__WEBPACK_IMPORTED_MODULE_3__.flushSync)(() => {\n        l({ node: a, container: c });\n      }), l(void 0);\n    }\n  }, queueMicrotask(() => {\n    e.editor._tiptapEditor.createNodeViews();\n  }), () => {\n    e.editor._tiptapEditor.contentComponent = null;\n  }), [e.editor._tiptapEditor]), /* @__PURE__ */ r.jsxs(r.Fragment, { children: [\n    /* @__PURE__ */ r.jsx(Wr, { renderers: t }),\n    o && (0,react_dom__WEBPACK_IMPORTED_MODULE_3__.createPortal)(o.node, o.container),\n    e.children\n  ] });\n}\nconst Et = () => {\n};\nfunction $r(e, t) {\n  const {\n    editor: n,\n    className: o,\n    theme: l,\n    children: a,\n    editable: c,\n    onSelectionChange: s,\n    onChange: u,\n    formattingToolbar: f,\n    linkToolbar: m,\n    slashMenu: b,\n    sideMenu: g,\n    filePanel: k,\n    tableHandles: V,\n    ...F\n  } = e, [N, z] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(), E = U(), He = (0,use_prefers_color_scheme__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(), _e = (E == null ? void 0 : E.colorSchemePreference) || He, le = l || (_e === \"dark\" ? \"dark\" : \"light\");\n  Ue(u || Et, n), We(s || Et, n), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    n.isEditable = c !== !1;\n  }, [c, n]);\n  const Se = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => /* @__PURE__ */ r.jsxs(r.Fragment, { children: [\n    a,\n    /* @__PURE__ */ r.jsx(\n      Ur,\n      {\n        formattingToolbar: f,\n        linkToolbar: m,\n        slashMenu: b,\n        sideMenu: g,\n        filePanel: k,\n        tableHandles: V\n      }\n    )\n  ] }), [\n    a,\n    f,\n    m,\n    k,\n    g,\n    b,\n    V\n  ]), Me = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => ({\n    ...E,\n    editor: n,\n    setContentEditableProps: z\n  }), [E, n]);\n  return /* @__PURE__ */ r.jsx(Wt.Provider, { value: Me, children: /* @__PURE__ */ r.jsx(Gr, { editor: n, children: /* @__PURE__ */ r.jsxs(\n    \"div\",\n    {\n      className: (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.mergeCSSClasses)(\n        \"bn-container\",\n        le || \"\",\n        o || \"\"\n      ),\n      \"data-color-scheme\": le,\n      ...F,\n      ref: t,\n      children: [\n        /* @__PURE__ */ r.jsx(\n          \"div\",\n          {\n            \"aria-autocomplete\": \"list\",\n            \"aria-haspopup\": \"listbox\",\n            ref: n._tiptapEditor.mount,\n            ...N\n          }\n        ),\n        Se\n      ]\n    }\n  ) }) });\n}\nconst ui = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef($r);\nvar Ze, me = react_dom__WEBPACK_IMPORTED_MODULE_3__;\nif (false)\n  {}\nelse {\n  var Bt = me.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  Ze = function(e, t) {\n    Bt.usingClientEntryPoint = !0;\n    try {\n      return me.createRoot(e, t);\n    } finally {\n      Bt.usingClientEntryPoint = !1;\n    }\n  };\n}\nfunction pe(e, t) {\n  let n;\n  const o = document.createElement(\"div\");\n  let l;\n  if (t ? t._tiptapEditor.contentComponent.renderToElement(\n    e((u) => n = u || void 0),\n    o\n  ) : (l = Ze(o), (0,react_dom__WEBPACK_IMPORTED_MODULE_3__.flushSync)(() => {\n    l.render(e((u) => n = u || void 0));\n  })), !o.childElementCount)\n    return console.warn(\"ReactInlineContentSpec: renderHTML() failed\"), {\n      dom: document.createElement(\"span\")\n    };\n  n == null || n.setAttribute(\"data-tmp-find\", \"true\");\n  const a = o.cloneNode(!0), c = a.firstElementChild, s = a.querySelector(\n    \"[data-tmp-find]\"\n  );\n  return s == null || s.removeAttribute(\"data-tmp-find\"), l == null || l.unmount(), {\n    dom: c,\n    contentDOM: s || void 0\n  };\n}\nfunction Oe(e) {\n  var t;\n  return (\n    // Creates `blockContent` element\n    /* @__PURE__ */ r.jsx(\n      _tiptap_react__WEBPACK_IMPORTED_MODULE_6__.NodeViewWrapper,\n      {\n        ...Object.fromEntries(\n          Object.entries(e.domAttributes || {}).filter(\n            ([n]) => n !== \"class\"\n          )\n        ),\n        className: (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.mergeCSSClasses)(\n          \"bn-block-content\",\n          ((t = e.domAttributes) == null ? void 0 : t.class) || \"\"\n        ),\n        \"data-content-type\": e.blockType,\n        ...Object.fromEntries(\n          Object.entries(e.blockProps).filter(\n            ([n, o]) => !_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.inheritedProps.includes(n) && o !== e.propSchema[n].default\n          ).map(([n, o]) => [(0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.camelToDataKebab)(n), o])\n        ),\n        \"data-file-block\": e.isFileBlock === !0 || void 0,\n        children: e.children\n      }\n    )\n  );\n}\nfunction ke(e, t) {\n  const n = (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.createStronglyTypedTiptapNode)({\n    name: e.type,\n    content: e.content === \"inline\" ? \"inline*\" : \"\",\n    group: \"blockContent\",\n    selectable: !0,\n    addAttributes() {\n      return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.propsToAttributes)(e.propSchema);\n    },\n    parseHTML() {\n      return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.getParseRules)(e, t.parse);\n    },\n    renderHTML() {\n      const o = document.createElement(\"div\");\n      return o.setAttribute(\"data-tmp-placeholder\", \"true\"), {\n        dom: o\n      };\n    },\n    addNodeView() {\n      return (o) => (0,_tiptap_react__WEBPACK_IMPORTED_MODULE_6__.ReactNodeViewRenderer)(\n        (l) => {\n          var m;\n          const a = this.options.editor, c = (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.getBlockFromPos)(\n            l.getPos,\n            a,\n            this.editor,\n            e.type\n          ), s = ((m = this.options.domAttributes) == null ? void 0 : m.blockContent) || {}, u = (0,_tiptap_react__WEBPACK_IMPORTED_MODULE_6__.NodeViewContent)({}).ref, f = t.render;\n          return /* @__PURE__ */ r.jsx(\n            Oe,\n            {\n              blockType: c.type,\n              blockProps: c.props,\n              propSchema: e.propSchema,\n              isFileBlock: e.isFileBlock,\n              domAttributes: s,\n              children: /* @__PURE__ */ r.jsx(\n                f,\n                {\n                  block: c,\n                  editor: a,\n                  contentRef: u\n                }\n              )\n            }\n          );\n        },\n        {\n          className: \"bn-react-node-view-renderer\"\n        }\n      )(o);\n    }\n  });\n  return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.createInternalBlockSpec)(e, {\n    node: n,\n    toInternalHTML: (o, l) => {\n      var u, f;\n      const a = ((u = n.options.domAttributes) == null ? void 0 : u.blockContent) || {}, c = t.render, s = pe(\n        (m) => /* @__PURE__ */ r.jsx(\n          Oe,\n          {\n            blockType: o.type,\n            blockProps: o.props,\n            propSchema: e.propSchema,\n            domAttributes: a,\n            children: /* @__PURE__ */ r.jsx(\n              c,\n              {\n                block: o,\n                editor: l,\n                contentRef: m\n              }\n            )\n          }\n        ),\n        l\n      );\n      return (f = s.contentDOM) == null || f.setAttribute(\"data-editable\", \"\"), s;\n    },\n    toExternalHTML: (o, l) => {\n      var u, f;\n      const a = ((u = n.options.domAttributes) == null ? void 0 : u.blockContent) || {}, c = t.toExternalHTML || t.render, s = pe((m) => /* @__PURE__ */ r.jsx(\n        Oe,\n        {\n          blockType: o.type,\n          blockProps: o.props,\n          propSchema: e.propSchema,\n          domAttributes: a,\n          children: /* @__PURE__ */ r.jsx(\n            c,\n            {\n              block: o,\n              editor: l,\n              contentRef: m\n            }\n          )\n        }\n      ), l);\n      return (f = s.contentDOM) == null || f.setAttribute(\"data-editable\", \"\"), s;\n    }\n  });\n}\nconst ye = (e) => /* @__PURE__ */ r.jsxs(\n  \"div\",\n  {\n    className: \"bn-file-default-preview\",\n    contentEditable: !1,\n    draggable: !1,\n    children: [\n      /* @__PURE__ */ r.jsx(\"div\", { className: \"bn-file-default-preview-icon\", children: /* @__PURE__ */ r.jsx(Ce, { size: 24 }) }),\n      /* @__PURE__ */ r.jsx(\"p\", { className: \"bn-file-default-preview-name\", children: e.block.props.name })\n    ]\n  }\n), $ = (e) => /* @__PURE__ */ r.jsxs(\"div\", { className: \"bn-file-and-caption-wrapper\", children: [\n  e.children,\n  e.block.props.caption && /* @__PURE__ */ r.jsx(\"p\", { className: \"bn-file-caption\", children: e.block.props.caption })\n] }), je = (e) => {\n  const t = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (o) => {\n      o.preventDefault();\n    },\n    []\n  ), n = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    e.editor._tiptapEditor.view.dispatch(\n      e.editor._tiptapEditor.state.tr.setMeta(\n        e.editor.filePanel.plugin,\n        {\n          block: e.block\n        }\n      )\n    );\n  }, [\n    e.block,\n    e.editor._tiptapEditor.state.tr,\n    e.editor._tiptapEditor.view,\n    e.editor.filePanel\n  ]);\n  return /* @__PURE__ */ r.jsxs(\n    \"div\",\n    {\n      className: \"bn-add-file-button\",\n      onMouseDown: t,\n      onClick: n,\n      children: [\n        /* @__PURE__ */ r.jsx(\"div\", { className: \"bn-add-file-button-icon\", children: e.buttonIcon || /* @__PURE__ */ r.jsx(Ce, { size: 24 }) }),\n        /* @__PURE__ */ r.jsx(\"div\", { className: \"bn-add-file-button-text\", children: e.buttonText })\n      ]\n    }\n  );\n}, we = (e) => /* @__PURE__ */ r.jsxs(\"div\", { children: [\n  e.children,\n  /* @__PURE__ */ r.jsx(\"p\", { children: e.caption })\n] }), $e = (e) => /* @__PURE__ */ r.jsxs(\"figure\", { children: [\n  e.children,\n  /* @__PURE__ */ r.jsx(\"figcaption\", { children: e.caption })\n] }), an = (e) => {\n  const [t, n] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1), [o, l] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(void 0);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const f = (b) => {\n      let g;\n      e.block.props.textAlignment === \"center\" ? o.handleUsed === \"left\" ? g = o.initialWidth + (o.initialClientX - b.clientX) * 2 : g = o.initialWidth + (b.clientX - o.initialClientX) * 2 : o.handleUsed === \"left\" ? g = o.initialWidth + o.initialClientX - b.clientX : g = o.initialWidth + b.clientX - o.initialClientX;\n      const k = 64;\n      g < k ? e.setWidth(k) : g > e.editor.domElement.firstElementChild.clientWidth ? e.setWidth(e.editor.domElement.firstElementChild.clientWidth) : e.setWidth(g);\n    }, m = () => {\n      l(void 0), e.editor.updateBlock(e.block, {\n        props: {\n          previewWidth: e.width\n        }\n      });\n    };\n    return o && (window.addEventListener(\"mousemove\", f), window.addEventListener(\"mouseup\", m)), () => {\n      window.removeEventListener(\"mousemove\", f), window.removeEventListener(\"mouseup\", m);\n    };\n  }, [e, o]);\n  const a = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    e.editor.isEditable && n(!0);\n  }, [e.editor.isEditable]), c = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    n(!1);\n  }, []), s = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (f) => {\n      f.preventDefault(), l({\n        handleUsed: \"left\",\n        initialWidth: e.width,\n        initialClientX: f.clientX\n      });\n    },\n    [e.width]\n  ), u = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (f) => {\n      f.preventDefault(), l({\n        handleUsed: \"right\",\n        initialWidth: e.width,\n        initialClientX: f.clientX\n      });\n    },\n    [e.width]\n  );\n  return /* @__PURE__ */ r.jsxs(\n    \"div\",\n    {\n      className: \"bn-visual-media-wrapper\",\n      onMouseEnter: a,\n      onMouseLeave: c,\n      children: [\n        e.children,\n        (t || o) && /* @__PURE__ */ r.jsxs(r.Fragment, { children: [\n          /* @__PURE__ */ r.jsx(\n            \"div\",\n            {\n              className: \"bn-visual-media-resize-handle\",\n              style: { left: \"4px\" },\n              onMouseDown: s\n            }\n          ),\n          /* @__PURE__ */ r.jsx(\n            \"div\",\n            {\n              className: \"bn-visual-media-resize-handle\",\n              style: { right: \"4px\" },\n              onMouseDown: u\n            }\n          )\n        ] })\n      ]\n    }\n  );\n}, qr = (e) => /* @__PURE__ */ r.jsx(\n  \"audio\",\n  {\n    className: \"bn-audio\",\n    src: e.block.props.url,\n    controls: !0,\n    contentEditable: !1,\n    draggable: !1\n  }\n), Yr = (e) => {\n  if (!e.block.props.url)\n    return /* @__PURE__ */ r.jsx(\"p\", { children: \"Add audio\" });\n  const t = e.block.props.showPreview ? /* @__PURE__ */ r.jsx(\"audio\", { src: e.block.props.url }) : /* @__PURE__ */ r.jsx(\"a\", { href: e.block.props.url, children: e.block.props.name || e.block.props.url });\n  return e.block.props.caption ? e.block.props.showPreview ? /* @__PURE__ */ r.jsx($e, { caption: e.block.props.caption, children: t }) : /* @__PURE__ */ r.jsx(we, { caption: e.block.props.caption, children: t }) : t;\n}, di = ke(_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.audioBlockConfig, {\n  render: (e) => /* @__PURE__ */ r.jsx(\"div\", { className: \"bn-file-block-content-wrapper\", children: e.block.props.url === \"\" ? /* @__PURE__ */ r.jsx(\n    je,\n    {\n      ...e,\n      editor: e.editor,\n      buttonText: e.editor.dictionary.file_blocks.audio.add_button_text,\n      buttonIcon: /* @__PURE__ */ r.jsx(tn, { size: 24 })\n    }\n  ) : e.block.props.showPreview ? /* @__PURE__ */ r.jsx($, { block: e.block, editor: e.editor, children: /* @__PURE__ */ r.jsx(qr, { block: e.block, editor: e.editor }) }) : /* @__PURE__ */ r.jsx($, { block: e.block, editor: e.editor, children: /* @__PURE__ */ r.jsx(\n    ye,\n    {\n      block: e.block,\n      editor: e.editor\n    }\n  ) }) }),\n  parse: _blocknote_core__WEBPACK_IMPORTED_MODULE_1__.audioParse,\n  toExternalHTML: (e) => /* @__PURE__ */ r.jsx(Yr, { ...e })\n}), Kr = (e) => {\n  if (!e.block.props.url)\n    return /* @__PURE__ */ r.jsx(\"p\", { children: \"Add file\" });\n  const t = /* @__PURE__ */ r.jsx(\"a\", { href: e.block.props.url, children: e.block.props.name || e.block.props.url });\n  return e.block.props.caption ? /* @__PURE__ */ r.jsx(we, { caption: e.block.props.caption, children: t }) : t;\n}, fi = ke(_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.fileBlockConfig, {\n  render: (e) => /* @__PURE__ */ r.jsx(\"div\", { className: \"bn-file-block-content-wrapper\", children: e.block.props.url === \"\" ? /* @__PURE__ */ r.jsx(\n    je,\n    {\n      block: e.block,\n      editor: e.editor,\n      buttonIcon: /* @__PURE__ */ r.jsx(Ce, { size: 24 }),\n      buttonText: e.editor.dictionary.file_blocks.file.add_button_text\n    }\n  ) : /* @__PURE__ */ r.jsx($, { block: e.block, editor: e.editor, children: /* @__PURE__ */ r.jsx(\n    ye,\n    {\n      block: e.block,\n      editor: e.editor\n    }\n  ) }) }),\n  parse: _blocknote_core__WEBPACK_IMPORTED_MODULE_1__.fileParse,\n  toExternalHTML: (e) => /* @__PURE__ */ r.jsx(Kr, { ...e })\n}), Xr = (e) => {\n  const [t, n] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\n    Math.min(\n      e.block.props.previewWidth,\n      e.editor.domElement.firstElementChild.clientWidth\n    )\n  );\n  return /* @__PURE__ */ r.jsx(an, { ...e, width: t, setWidth: n, children: /* @__PURE__ */ r.jsx(\n    \"img\",\n    {\n      className: \"bn-visual-media\",\n      src: e.block.props.url,\n      alt: e.block.props.caption || \"BlockNote image\",\n      contentEditable: !1,\n      draggable: !1,\n      width: t\n    }\n  ) });\n}, Jr = (e) => {\n  if (!e.block.props.url)\n    return /* @__PURE__ */ r.jsx(\"p\", { children: \"Add image\" });\n  const t = e.block.props.showPreview ? /* @__PURE__ */ r.jsx(\n    \"img\",\n    {\n      src: e.block.props.url,\n      alt: e.block.props.name || e.block.props.caption || \"BlockNote image\",\n      width: e.block.props.previewWidth\n    }\n  ) : /* @__PURE__ */ r.jsx(\"a\", { href: e.block.props.url, children: e.block.props.name || e.block.props.url });\n  return e.block.props.caption ? e.block.props.showPreview ? /* @__PURE__ */ r.jsx($e, { caption: e.block.props.caption, children: t }) : /* @__PURE__ */ r.jsx(we, { caption: e.block.props.caption, children: t }) : t;\n}, mi = ke(_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.imageBlockConfig, {\n  render: (e) => /* @__PURE__ */ r.jsx(\"div\", { className: \"bn-file-block-content-wrapper\", children: e.block.props.url === \"\" ? /* @__PURE__ */ r.jsx(\n    je,\n    {\n      ...e,\n      editor: e.editor,\n      buttonText: e.editor.dictionary.file_blocks.image.add_button_text,\n      buttonIcon: /* @__PURE__ */ r.jsx(en, { size: 24 })\n    }\n  ) : e.block.props.showPreview ? /* @__PURE__ */ r.jsx($, { block: e.block, editor: e.editor, children: /* @__PURE__ */ r.jsx(Xr, { block: e.block, editor: e.editor }) }) : /* @__PURE__ */ r.jsx($, { block: e.block, editor: e.editor, children: /* @__PURE__ */ r.jsx(\n    ye,\n    {\n      block: e.block,\n      editor: e.editor\n    }\n  ) }) }),\n  parse: _blocknote_core__WEBPACK_IMPORTED_MODULE_1__.imageParse,\n  toExternalHTML: (e) => /* @__PURE__ */ r.jsx(Jr, { ...e })\n}), Qr = (e) => {\n  const [t, n] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\n    Math.min(\n      e.block.props.previewWidth,\n      e.editor.domElement.firstElementChild.clientWidth\n    )\n  );\n  return /* @__PURE__ */ r.jsx(an, { ...e, width: t, setWidth: n, children: /* @__PURE__ */ r.jsx(\n    \"video\",\n    {\n      className: \"bn-visual-media\",\n      src: e.block.props.url,\n      controls: !0,\n      contentEditable: !1,\n      draggable: !1,\n      width: t\n    }\n  ) });\n}, ei = (e) => {\n  if (!e.block.props.url)\n    return /* @__PURE__ */ r.jsx(\"p\", { children: \"Add video\" });\n  const t = e.block.props.showPreview ? /* @__PURE__ */ r.jsx(\"video\", { src: e.block.props.url }) : /* @__PURE__ */ r.jsx(\"a\", { href: e.block.props.url, children: e.block.props.name || e.block.props.url });\n  return e.block.props.caption ? e.block.props.showPreview ? /* @__PURE__ */ r.jsx($e, { caption: e.block.props.caption, children: t }) : /* @__PURE__ */ r.jsx(we, { caption: e.block.props.caption, children: t }) : t;\n}, hi = ke(_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.videoBlockConfig, {\n  render: (e) => /* @__PURE__ */ r.jsx(\"div\", { className: \"bn-file-block-content-wrapper\", children: e.block.props.url === \"\" ? /* @__PURE__ */ r.jsx(\n    je,\n    {\n      ...e,\n      editor: e.editor,\n      buttonText: e.editor.dictionary.file_blocks.video.add_button_text,\n      buttonIcon: /* @__PURE__ */ r.jsx(Io, { size: 24 })\n    }\n  ) : e.block.props.showPreview ? /* @__PURE__ */ r.jsx($, { block: e.block, editor: e.editor, children: /* @__PURE__ */ r.jsx(Qr, { block: e.block, editor: e.editor }) }) : /* @__PURE__ */ r.jsx($, { block: e.block, editor: e.editor, children: /* @__PURE__ */ r.jsx(\n    ye,\n    {\n      block: e.block,\n      editor: e.editor\n    }\n  ) }) }),\n  parse: _blocknote_core__WEBPACK_IMPORTED_MODULE_1__.videoParse,\n  toExternalHTML: (e) => /* @__PURE__ */ r.jsx(ei, { ...e })\n});\nfunction bi(e) {\n  const t = U();\n  if (e || (e = t == null ? void 0 : t.editor), !e)\n    throw new Error(\n      \"'editor' is required, either from BlockNoteContext or as a function argument\"\n    );\n  const n = e, [o, l] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => n.getActiveStyles());\n  return Ue(() => {\n    l(n.getActiveStyles());\n  }, n), We(() => {\n    l(n.getActiveStyles());\n  }, n), o;\n}\nconst ti = (e = {}, t = []) => (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n  const n = _blocknote_core__WEBPACK_IMPORTED_MODULE_1__.BlockNoteEditor.create(e);\n  return window && (window.ProseMirror = n._tiptapEditor), n;\n}, t), gi = ti;\nfunction ni() {\n  const [, e] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n  return () => e((t) => t + 1);\n}\nconst pi = (e) => {\n  const t = ni();\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const n = () => {\n      requestAnimationFrame(() => {\n        requestAnimationFrame(() => {\n          t();\n        });\n      });\n    };\n    return e.on(\"transaction\", n), () => {\n      e.off(\"transaction\", n);\n    };\n  }, [e]);\n};\nfunction oi(e) {\n  return (\n    // Creates inline content section element\n    /* @__PURE__ */ r.jsx(\n      _tiptap_react__WEBPACK_IMPORTED_MODULE_6__.NodeViewWrapper,\n      {\n        as: \"span\",\n        className: \"bn-inline-content-section\",\n        \"data-inline-content-type\": e.inlineContentType,\n        ...Object.fromEntries(\n          Object.entries(e.inlineContentProps).filter(([t, n]) => n !== e.propSchema[t].default).map(([t, n]) => [(0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.camelToDataKebab)(t), n])\n        ),\n        children: e.children\n      }\n    )\n  );\n}\nfunction xi(e, t) {\n  const n = (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.createStronglyTypedTiptapNode)({\n    name: e.type,\n    inline: !0,\n    group: \"inline\",\n    selectable: e.content === \"styled\",\n    atom: e.content === \"none\",\n    content: e.content === \"styled\" ? \"inline*\" : \"\",\n    addAttributes() {\n      return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.propsToAttributes)(e.propSchema);\n    },\n    addKeyboardShortcuts() {\n      return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.addInlineContentKeyboardShortcuts)(e);\n    },\n    parseHTML() {\n      return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.getInlineContentParseRules)(e);\n    },\n    renderHTML({ node: o }) {\n      const l = this.options.editor, a = (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.nodeToCustomInlineContent)(\n        o,\n        l.schema.inlineContentSchema,\n        l.schema.styleSchema\n      ), c = t.render, s = pe(\n        (u) => /* @__PURE__ */ r.jsx(c, { inlineContent: a, contentRef: u }),\n        l\n      );\n      return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.addInlineContentAttributes)(\n        s,\n        e.type,\n        o.attrs,\n        e.propSchema\n      );\n    },\n    // TODO: needed?\n    addNodeView() {\n      const o = this.options.editor;\n      return (l) => (0,_tiptap_react__WEBPACK_IMPORTED_MODULE_6__.ReactNodeViewRenderer)(\n        (a) => {\n          const c = (0,_tiptap_react__WEBPACK_IMPORTED_MODULE_6__.NodeViewContent)({}).ref, s = t.render;\n          return /* @__PURE__ */ r.jsx(\n            oi,\n            {\n              inlineContentProps: a.node.attrs,\n              inlineContentType: e.type,\n              propSchema: e.propSchema,\n              children: /* @__PURE__ */ r.jsx(\n                s,\n                {\n                  contentRef: c,\n                  inlineContent: (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.nodeToCustomInlineContent)(\n                    a.node,\n                    o.schema.inlineContentSchema,\n                    o.schema.styleSchema\n                  )\n                }\n              )\n            }\n          );\n        },\n        {\n          className: \"bn-ic-react-node-view-renderer\",\n          as: \"span\"\n          // contentDOMElementTag: \"span\", (requires tt upgrade)\n        }\n      )(l);\n    }\n  });\n  return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.createInternalInlineContentSpec)(e, {\n    node: n\n  });\n}\nfunction vi(e, t) {\n  const n = _tiptap_react__WEBPACK_IMPORTED_MODULE_7__.Mark.create({\n    name: e.type,\n    addAttributes() {\n      return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.stylePropsToAttributes)(e.propSchema);\n    },\n    parseHTML() {\n      return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.getStyleParseRules)(e);\n    },\n    renderHTML({ mark: o }) {\n      const l = {};\n      e.propSchema === \"string\" && (l.value = o.attrs.stringValue);\n      const a = t.render, c = pe(\n        (s) => /* @__PURE__ */ r.jsx(a, { ...l, contentRef: s }),\n        void 0\n      );\n      return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.addStyleAttributes)(\n        c,\n        e.type,\n        o.attrs.stringValue,\n        e.propSchema\n      );\n    }\n  });\n  return (0,_blocknote_core__WEBPACK_IMPORTED_MODULE_1__.createInternalStyleSpec)(e, {\n    mark: n\n  });\n}\n\n//# sourceMappingURL=blocknote-react.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@blocknote/react/dist/blocknote-react.js\n");

/***/ })

};
;